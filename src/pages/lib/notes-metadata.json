[
  {
    "title": "2024 Goals",
    "content": "<ul>\n<li>Land a programming job [ ]</li>\n<li>Languages to master: [TypeScript, Elixir, Go, Rust] [ ]</li>\n<li>Languages to learn: [German, Japanese] [ ]</li>\n<li>Grind Leet Code with: [TypeScript, Go] [ ]</li>\n<li>Grind Math solving exercises [ ]</li>\n<li>Reach 100 wpm on Monkeytype [ ]</li>\n<li>Practice english speaking [ ]</li>\n<li>Write one article per month minimun [ ]</li>\n<li>Make at least 4 YouTube videos in the year [ ]</li>\n<li>Grow twitter profile [ ]</li>\n<li>Make more friends [ ]</li>\n<li>Stop bad habits and create a healthier daily routine [ ]</li>\n<li>Do more OSS work [ ]</li>\n<li>Create and finish more side projects [ ]</li>\n<li>Topics to learn:\n<ul>\n<li>Software architecuture [ ]</li>\n<li>AWS and DevOps [ ]</li>\n<li>Computer architecuture [ ]</li>\n<li>Interpreters and compilers [ ]</li>\n<li>Low Code [ ]</li>\n<li>Type Theory [ ]</li>\n</ul>\n</li>\n<li>Books to read:\n<ul>\n<li>Thus Spoke Zaratustra - Nietzsche [ ]</li>\n<li>Liquid Love - Zygmunt Bauman [ ]</li>\n<li>Start Sherlock Holmes from Arthur Conan Doyle [ ]</li>\n<li>Structure and Interpretation of Computer Programs - Harold Abelson, Gerald Jay Sussman, Julie Sussman [ ]</li>\n<li>Crafting Interpreters - Robert Nystrom [ ]</li>\n</ul>\n</li>\n</ul>"
  },
  {
    "title": "2023 Summary",
    "content": "<p>&#x3C;2023></p>\n<ul>\n<li>Laid off in Jan</li>\n<li>Burn out till May</li>\n<li>Did more OSS work</li>\n<li>Started a Computer Science Degree</li>\n<li>Started interacting more on Twitter</li>\n<li>Started exploring more languages and having fun with programming</li>\n<li>Made some online friends, since real friends is a hard thing</li>\n<li>Started to create the habit of reading, and so far I've read:\n<ul>\n<li>Metamorphosis - Franz Kafka</li>\n<li>Fahrenheit 451 - Ray Bradbury</li>\n<li>The Crow and Other Tales - Edgar Allan Poe</li>\n<li>Berserk - Kentaro Miura</li>\n</ul>\n</li>\n</ul>\n<p>&#x3C;/2023></p>\n<p>And that's it. Not the best of the years, I did not get a job after the laid off, but in study matters, it was better than the last year.</p>\n<p>My old job wasn't healthy for me, and I was sent off without receiving my last payment, so I even lost a month of work. I leave it behind.</p>\n<p>I still have hopes for 2024. I think I've overcome the battles of 2023. I'm a new person, more mature.</p>\n<p>Let's see what 2024 have for me.</p>"
  },
  {
    "title": "All Articles I've read",
    "content": "<h2 id=\"2024\"><a class=\"anchor\" href=\"#2024\">2024</a></h2>\n<ul>\n<li><a href=\"https://nextjs.org/blog/next-14\">Next.js 14</a></li>\n<li><a href=\"https://overreacted.io/the-two-reacts/\">The Two Reacts</a></li>\n<li><a href=\"https://bedes.qui.gg/writing/macos-rice\">MacOS Rice</a></li>\n<li><a href=\"https://google.github.io/styleguide/go/decisions#pass-values\">Go style decisions</a></li>\n</ul>"
  },
  {
    "title": "protocols",
    "content": "<p>It's a set of rules that defines how entities can communicate.</p>\n<ul>\n<li>protocols implementations are called \"frameworks\"</li>\n</ul>\n<h2 id=\"internet\"><a class=\"anchor\" href=\"#internet\">Internet</a></h2>\n<ul>\n<li>on server x client there are normally various layers of protocol in order to communicate</li>\n</ul>\n<p><img src=\"./assets/web-protocols-layers.svg\" alt=\"Web Protocols Layers\"></p>\n<h2 id=\"http\"><a class=\"anchor\" href=\"#http\">HTTP</a></h2>\n<ul>\n<li>consists in a text message format protocol</li>\n<li>it runs over tcp connection</li>\n</ul>\n<h2 id=\"tcp\"><a class=\"anchor\" href=\"#tcp\">TCP</a></h2>\n<p>\"TCP provides reliable, ordered, and error-checked delivery of a stream of octets (bytes) between applications running on hosts communicating via an IP network.\" - Wikipedia</p>\n<h3 id=\"tcp-segment-structure\"><a class=\"anchor\" href=\"#tcp-segment-structure\">TCP segment structure</a></h3>\n<p>\"Transmission Control Protocol accepts data from a data stream, divides it into chunks, and adds a TCP header creating a TCP segment. The TCP segment is then encapsulated into an Internet Protocol (IP) datagram, and exchanged with peers. Processes transmit data by calling on the TCP and passing buffers of data as arguments.\" - Wikipedia</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol#TCP_segment_structure\">See more</a>.</p>\n<h2 id=\"references\"><a class=\"anchor\" href=\"#references\">References</a></h2>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=d-zn-wv4Di8\">What is a protocol from LiveOverflow on YouTube</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol\">TCP on Wikipedia</a></li>\n<li><a href=\"https://stackoverflow.com/questions/35070594/oauth-2-is-a-protocol-or-a-framework\">StackOverflow</a></li>\n</ul>"
  },
  {
    "title": "Rest x GraphQL",
    "content": "<h2 id=\"rest\"><a class=\"anchor\" href=\"#rest\">Rest</a></h2>\n<p><img src=\"./assets/backend-rest-x-graphql.svg\" alt=\"Rest x GraphQL\"></p>\n<p>Basically, with Rest API's model, you expose endpoints that serves the data for you.</p>\n<p>Let's see an example:</p>\n<blockquote>\n<p>GET /users</p>\n</blockquote>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    \"id\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    \"name\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"John Doe\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    \"email\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"johndoe@dubdubdodo.com\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>What if you want to get the user's posts?</p>\n<blockquote>\n<p>GET /users/1/posts</p>\n</blockquote>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    \"id\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    \"title\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"GraphQL is awesome\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    \"content\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"Lorem ipsum dolor sit amet.\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    \"author\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">      \"id\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">      \"name\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"John Doe\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">      \"email\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"johndoe@dubdubdodo.com\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>That's Rest, let's see GraphQL:</p>\n<h2 id=\"graphql\"><a class=\"anchor\" href=\"#graphql\">GraphQL</a></h2>\n<p>GraphQL server has two main parts: <strong>Schema</strong> and <strong>Resolvers</strong>.</p>\n<p>Schema is where you define the types of your data, and the resolvers are the functions that will return the data.</p>\n<p>Let's see an example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> User</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  id: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">ID</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  name: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">String</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  email: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">String</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  posts: [</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">Post</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> Post</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  id: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">ID</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  title: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">String</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  content: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">String</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  author: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">User</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> Query</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  getUser(id: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">ID</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">): </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">User</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  getPostsByTitle(title: </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">String</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">): [</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">Post</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span><span style=\"color:#F97583;--shiki-dark:#F97583\">!</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>This is the schema, it defines the types of data that we have, and the relations between them.</p>\n<p>Now, let's see an example of a resolver:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> getUser</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (_</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> args</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  return sql.raw(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">`SELECT * FROM users WHERE id = </span><span style=\"color:#F97583;--shiki-dark:#F97583\">${</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">args</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.id</span><span style=\"color:#F97583;--shiki-dark:#F97583\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">`</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// don't do this :0</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">const getPostsByTitle (_, args) => {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  return Post.find({ title</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> args</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.title })</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>In this example we show the flexibility of the resolvers: you can get different data from different sources, and return it.</p>\n<h2 id=\"graphql-flow\"><a class=\"anchor\" href=\"#graphql-flow\">GraphQL Flow</a></h2>\n<p>For example, let's say you've made the following query (using the example in the last section):</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">{</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  getUser(id: </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    name</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    posts {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      title</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      author {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        name // getting it twice here but doesn't matter</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>The steps that GraphQL will take to resolve this query are:</p>\n<ol>\n<li>Parse the query</li>\n<li>Validate the query</li>\n<li>Execute the query</li>\n</ol>\n<h3 id=\"parse-the-query\"><a class=\"anchor\" href=\"#parse-the-query\">Parse the query</a></h3>\n<p>The server will receive the string and parse it to an <a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\">AST</a>, and if it fails, the server will return a syntax error.</p>\n<h3 id=\"validate-the-query\"><a class=\"anchor\" href=\"#validate-the-query\">Validate the query</a></h3>\n<p>Basically checks if the query matches the schema types.</p>\n<h3 id=\"execute-the-query\"><a class=\"anchor\" href=\"#execute-the-query\">Execute the query</a></h3>\n<p>The server will execute the query, and will call the resolvers that are needed to resolve the query.</p>\n<p>So for the example above, the server will call the <code>getUser</code> resolver, and then it will walk through the AST in order to get the data that is needed.</p>\n<p>The execution flow in table form:</p>\n<p>| Task | State | Step | Context |\n| --- | --- | --- | --- |\n| 3.1 | run | Query.getUser | |\n| 3.2 | run | User.name and User.posts | for user returned in 3.1 |\n| 3.3 | run | Post.title and Post.author | for each post returned in 3.2 |\n| 3.4 | run | User.name | for each author returned in 3.3 |</p>"
  },
  {
    "title": "Serverless",
    "content": "<h2 id=\"what-is-serverless\"><a class=\"anchor\" href=\"#what-is-serverless\">What is Serverless?</a></h2>\n<p>Serverless is a cloud computing execution model where the cloud provider dynamically manages the allocation and provisioning of servers. A serverless application runs in stateless compute containers that are event-triggered and fully managed by the cloud provider.</p>\n<h3 id=\"serverless-providers\"><a class=\"anchor\" href=\"#serverless-providers\">Serverless Providers</a></h3>\n<ul>\n<li><strong>AWS Lambda</strong>: If you've deployed anything to <strong>Vercel</strong>, you've used AWS Lambda, since Vercel uses it under the hood.</li>\n<li><strong>Azure Functions</strong></li>\n<li><strong>Google Cloud Functions</strong></li>\n<li>And others...</li>\n</ul>\n<h3 id=\"increase-business-logic-focus-x-decrease-stack-implementation\"><a class=\"anchor\" href=\"#increase-business-logic-focus-x-decrease-stack-implementation\">Increase Business Logic Focus X Decrease Stack Implementation</a></h3>\n<p><img src=\"./assets/serverless-graph.svg\" alt=\"Graph comparing serverless to other approaches\"></p>\n<ul>\n<li><strong>Bare Metal</strong>: You have to manage everything, from the hardware to the application.</li>\n<li><strong>Virtual Machines</strong>: Resource optimization, but you still have to manage your environment.</li>\n<li><strong>Containers</strong>: Package your application with its dependencies, simplifying the deployment process, but still have some challenges.</li>\n<li><strong>Serverless</strong>: You only have to worry about your application code. Use an Event-Driven approach to trigger your functions. The cloud provides FaaS (Functions as a Service).</li>\n</ul>\n<p><em>Note: I'm not gonna dive too deep into this subject, cause I'm already bored.</em></p>"
  },
  {
    "title": "GO first impressions",
    "content": "<p>GO seems a very straightforward language, that's how it looks to me when I read GO code.</p>\n<p>Seems for me that I need less steps to get things done, and I like that.</p>\n<h2 id=\"variable-declaration\"><a class=\"anchor\" href=\"#variable-declaration\">Variable declaration</a></h2>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // that way you declare a variable with a type int</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // that way you declare a variable with a type int and assign a value</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // that way you declare a variable and assign a value of type int</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">:=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // that way you declare a variable and assign a value of type int</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"functions\"><a class=\"anchor\" href=\"#functions\">Functions</a></h2>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> add(a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">, b </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    return</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>In go, the main function doesn't return anything, so it doesn't have a return type. It is the entry point of the program.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main() {}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"modules\"><a class=\"anchor\" href=\"#modules\">Modules</a></h2>\n<p>Modules are like GO manages dependencies. The code you write is a module, and you can import other modules.</p>\n<p>That's why go has a <code>go.mod</code> file, to manage those project informations (dependencies, module name, go version).</p>\n<p>Here's an example of a <code>go.mod</code> file:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">module github.com</span><span style=\"color:#F97583;--shiki-dark:#F97583\">/</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">your</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">username</span><span style=\"color:#F97583;--shiki-dark:#F97583\">/</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">your</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">module</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">go</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> 1.21.1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">require (</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    github.com</span><span style=\"color:#F97583;--shiki-dark:#F97583\">/</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">google</span><span style=\"color:#F97583;--shiki-dark:#F97583\">/</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">uuid v1.</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">3.1</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // indirect</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<p><code>github.com</code> and other domains can be used to download modules, that's why you see them in the module name.</p>\n<p>If you upload you module to github and you want to use it in another project, you can do it like this:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">go </span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5\">get</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5\"> github.com/your-username/your-module-name</span></span>\n<span class=\"line\"></span></code></pre>\n<p>That's how you install a module with go.</p>\n<h2 id=\"packages\"><a class=\"anchor\" href=\"#packages\">Packages</a></h2>\n<p>Packages are like folders, they are used to organize your code.</p>\n<p>So you can import those packages in <code>go</code> files and use them. Those packages are also accessible from other modules.</p>\n<p>For example, if you have a package called <code>usevim</code> in your project, and you now want to use it in another project, you can do with the module path, i.e:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"github.com/your-username/your-module-name/usevim\"</span></span>\n<span class=\"line\"></span></code></pre>\n<p>And that goes one for whatever path your package is in.</p>\n<h2 id=\"naming-conventions\"><a class=\"anchor\" href=\"#naming-conventions\">Naming conventions</a></h2>\n<p>In GO, if a function starts with a capital letter, it means that it is exported, and can be used outside of the package.</p>\n<p>Otherwise, it is private and can only be used inside the package.</p>\n<p>Besides it is very simple, you might have to get used to it if you come from almost any other language.</p>\n<h2 id=\"structs\"><a class=\"anchor\" href=\"#structs\">Structs</a></h2>\n<p>Structs are like classes in other languages, but they don't have methods.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Person </span><span style=\"color:#F97583;--shiki-dark:#F97583\">struct</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    name </span><span style=\"color:#F97583;--shiki-dark:#F97583\">string</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    age </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>One thing I've found very useful is that you can create a struct defining json tags, and then you can use it to parse json.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">    \"encoding/json\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Person </span><span style=\"color:#F97583;--shiki-dark:#F97583\">struct</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    Name </span><span style=\"color:#F97583;--shiki-dark:#F97583\">string</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> `json:\"name\"`</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    Age </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> `json:\"age\"`</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main() {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> person Person</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    json.Unmarshal([]</span><span style=\"color:#F97583;--shiki-dark:#F97583\">byte</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">`{\"name\": \"John\", \"age\": 30}`</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">), </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x26;</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">person) </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// it will parse the json and assign the values to the struct</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">    // following, of couse, the json tags</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"interfaces\"><a class=\"anchor\" href=\"#interfaces\">Interfaces</a></h2>\n<p>Interfaces are like in other languages, but you don't have to explicitly say that a struct implements an interface.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"fmt\"</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // this is a built-in package btw</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Person </span><span style=\"color:#F97583;--shiki-dark:#F97583\">interface</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    GetName() </span><span style=\"color:#F97583;--shiki-dark:#F97583\">string</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // this is the method signature</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> PersonImpl </span><span style=\"color:#F97583;--shiki-dark:#F97583\">struct</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    name </span><span style=\"color:#F97583;--shiki-dark:#F97583\">string</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (p PersonImpl) GetName() </span><span style=\"color:#F97583;--shiki-dark:#F97583\">string</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> { </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// this is the method</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    return</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> p.name</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main() {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> person Person </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> PersonImpl{name: </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"John\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    fmt.Println(person.GetName()) </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// prints \"John\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>If you add more structs that implement the <code>Person</code> interface, you can understand better how good this is and how it works.</p>\n<h2 id=\"errors\"><a class=\"anchor\" href=\"#errors\">Errors</a></h2>\n<p>GO error handling is very simple, you check for the error and decide what to do if you find one.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main() {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    _, err </span><span style=\"color:#F97583;--shiki-dark:#F97583\">:=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> os.Open(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"file.txt\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> err </span><span style=\"color:#F97583;--shiki-dark:#F97583\">!=</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> nil</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        fmt.Println(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Error opening file\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>This is like destructuring in javascript, you get the error value and assign it to the <code>err</code> variable.</p>\n<p>In case there's no error, <code>err</code> will be <code>nil</code>. That's way there's jokes about <code>nil</code> everywhere in GO.</p>\n<p>And btw, you can use <code>_</code> to ignore a return value. It's handy cause you can use that in import statements too.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    _ </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"github.com/your-username/your-module-name/usevim\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>That way go will not complain about unused imports.</p>\n<h2 id=\"pointers\"><a class=\"anchor\" href=\"#pointers\">Pointers</a></h2>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main() {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*int</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> &#x26;</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// b is a pointer to a</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    fmt.Println(b) </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// prints the memory address of a</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    fmt.Println(</span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">b) </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// prints the value of a</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"arrays\"><a class=\"anchor\" href=\"#arrays\">Arrays</a></h2>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">func</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main() {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    var</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span><span style=\"color:#F97583;--shiki-dark:#F97583\">int</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> // array of 2 ints</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    a[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    a[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    fmt.Println(a) </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// prints [1 2]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"notes\"><a class=\"anchor\" href=\"#notes\">Notes</a></h2>\n<p>There are a lot of things that I didn't cover here, so if you want to really learn more about GO, see the references below.</p>\n<h2 id=\"references\"><a class=\"anchor\" href=\"#references\">References</a></h2>\n<ul>\n<li><a href=\"https://gobyexample.com\">Go by example</a> - This is a very good resource for a quick start</li>\n<li><a href=\"https://golang.org/doc\">Go docs</a></li>\n</ul>"
  },
  {
    "title": "My first day with OCaml",
    "content": "<h2 id=\"variables\"><a class=\"anchor\" href=\"#variables\">Variables</a></h2>\n<p>So, to declare variables we can use <code>let</code> keyword. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>We can also use <code>;;</code> to separate expressions. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> y</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>We can do something like this:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 50</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> in x * x;;</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: It will return <code>2500</code>. But <code>x</code> is not defined outside of <code>in</code> block. So, we can't use <code>x</code> outside of <code>in</code> block.\nIf you try to print out <code>x</code> value, you will have an error.</p>\n</blockquote>\n<h2 id=\"functions\"><a class=\"anchor\" href=\"#functions\">Functions</a></h2>\n<p>We can define functions with <code>let</code> keyword. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> square</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> x </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> x;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Anonymous functions are defined with <code>fun</code> keyword. Example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">map (fun x -> x * 2) [1; 2; 3];;</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"recursion\"><a class=\"anchor\" href=\"#recursion\">Recursion</a></h3>\n<p>We can do recursion with <code>let rec</code> keyword. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> rec</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> range</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> a</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> b</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b </span><span style=\"color:#F97583;--shiki-dark:#F97583\">then</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> []</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    else</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">::</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> range (a </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">+</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) b;;</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: The difference between <code>let</code> and <code>let rec</code> is that if we have used <code>let</code> we couldn't use <code>range</code> function inside of <code>range</code> function, we would have an error.</p>\n</blockquote>\n<h2 id=\"float-x-int\"><a class=\"anchor\" href=\"#float-x-int\">Float x Int</a></h2>\n<p>OCaml needs you to explicitly convert <code>int</code> to <code>float</code> and vice versa. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> y</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2.0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> z</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> float_of_int x </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">+.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> y;;</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: The <code>+.</code> operator is used to sum <code>float</code> numbers. If you try to sum <code>int</code> numbers with <code>+.</code> operator, you will have an error. The same for the otherwise case.</p>\n</blockquote>\n<h2 id=\"pattern-matching\"><a class=\"anchor\" href=\"#pattern-matching\">Pattern Matching</a></h2>\n<p>We can use the <code>match</code> and <code>with</code> keywords to do pattern matching. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> rec</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> factorial</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> n</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    match</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> n </span><span style=\"color:#F97583;--shiki-dark:#F97583\">with</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> |</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> _</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> n </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> factorial (n </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">-</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);;</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: The <code>_</code> is used to match any value.\nWe could replace the last line with <code>| x -> x * factorial (x - 1)</code>. It would be the same.\nThe <code>x</code> is a variable that receives the value of <code>n</code> in the case.\nOf course <code>x</code> doesn't exist outside of the the case.</p>\n</blockquote>\n<p>We can also simplify the pattern matching by using the <code>function</code> keyword. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> rec</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> factorial</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> function</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> |</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> n</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> n </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> factorial (n </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">-</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);;</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: The <code>function</code> keyword introduces pattern matching directly.\nThe parameter is not named, but we can use it in the cases (hmm).</p>\n</blockquote>\n<h2 id=\"lists\"><a class=\"anchor\" href=\"#lists\">Lists</a></h2>\n<p>Lists are ordered collections of elements of the same type. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># [];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : 'a list = []</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">3</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list = [1; 2; 3]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># [false; false; true];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : bool list = [false; false; true]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># [[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]; [3; 4]; [5; 6]];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list list = [[1; 2]; [3; 4]; [5; 6]]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>The <code>::</code> (cons) operator adds an element to the beginning of a list. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> :: [];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list = [1]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> :: [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list = [2; 1]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>The <code>@</code> (append) operator concatenates two lists. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] @ [3; 4];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list = [1; 2; 3; 4]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Non-empty lists have a <code>head</code> (it's first element) and a <code>tail</code> (the list of the rest of the elements). For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># </span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">]</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">val</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> :</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">list</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">]</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">#</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> List.hd x;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int = 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># List.tl x;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list = [2; 3]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>We can create functions that operates over lists using pattern matching. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># </span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> rec</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> total</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> l</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    match</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> l </span><span style=\"color:#F97583;--shiki-dark:#F97583\">with</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> []</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> h</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> ::</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> t</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> h </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">+</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> total t;;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">val</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> total</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> :</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">list</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> &#x3C;</span><span style=\"color:#F97583;--shiki-dark:#F97583\">fun</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">></span></span>\n<span class=\"line\"><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">#</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> total</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 5</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">]</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;;</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">-</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> :</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> int</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 13</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: The <code>h</code> is the head and the <code>t</code> is the tail. We use the <code>::</code> operator to desconstruct here.</p>\n</blockquote>\n<p>Another example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> rec</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> length</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> l</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    match</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> l </span><span style=\"color:#F97583;--shiki-dark:#F97583\">with</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> []</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> _</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> ::</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> t</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> +</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> length t;;</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: This function will not operate just a list of integers as the latest example, it'll operates lists of any types.\nSo the list in the parameter is of type <code>'a list</code> (pronounced <strong>alpha list</strong>), and the function is called <strong>polymorphic</strong> since the type isn't relevant.</p>\n</blockquote>\n<p>Let's write a <code>map</code> function that will take a function and a list as parameters and will apply the function to every element of the list and return results, just like a map:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> rec</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> map</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> f</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> l</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> </span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    match</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> l </span><span style=\"color:#F97583;--shiki-dark:#F97583\">with</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> []</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> []</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    |</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> h</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> ::</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> t</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> -></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> f h </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">::</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> map f t;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Example of usage (using the <code>total</code> function we've created before):</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># total;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list -> int = &#x3C;fun></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># map total [[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]; [3; 4]; [5; 6]];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list = [3; 7; 11]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># map total [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">4</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">Error: This expression has </span><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> int</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> but</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> an</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> expression</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> was</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> expected</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> of </span><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">         int</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> list</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p><em>Obs</em>: The reason the second returns an error is because total returns <code>int</code> and <code>map</code> should return a <code>list</code>, that's why in the first one we passed a <code>list</code> of <code>lists</code>, so for each list <code>total</code> returned an <code>int</code> and the <code>map</code> function returned and <code>list</code> of <code>ints</code>;</p>\n</blockquote>\n<p>Example using anonymous function:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">map (fun x -> x * 2) [1; 2; 3];;</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"partial-application\"><a class=\"anchor\" href=\"#partial-application\">Partial Application</a></h3>\n<p>We can apply a function passing only some of it's parameters. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> add</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> y</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> x </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">+</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> y;;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> add1</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> add </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">add1 2;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int = 3</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Let's use it with our map function:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">map (add 1) [1; 2; 3];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list = [2; 3; 4]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>or let's use partial application of map function:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># map (map (add </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)) [[1; 2]; [3; 4]; [5; 6]];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list list = [[2; 3]; [4; 5]; [6; 7]]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># map (map total) [[[1; 2]; [1; 2]]; [[1; 2]; [1; 2]]];;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int list list = [[3; 3]; [3; 3]]</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"tuples\"><a class=\"anchor\" href=\"#tuples\">Tuples</a></h2>\n<p>Tuples are ordered collections of elements of different types. For example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- </span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> t</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">,</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5\"> \"okay\"</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> '1');;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">val</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> t</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> :</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> string </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> char </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">,</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5\"> \"okay\"</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> '1')</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"records\"><a class=\"anchor\" href=\"#records\">Records</a></h2>\n<p>They're similar to tuples, but instead of having elements in a fixed order, they have named elements:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> person</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    {</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF;font-style:italic;--shiki-dark-font-style:italic\">name</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">:</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> string</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF;font-style:italic;--shiki-dark-font-style:italic\">    age</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">:</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">}</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> frank</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">    {</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF;font-style:italic;--shiki-dark-font-style:italic\">name</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">:</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> \"frank\"</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF;font-style:italic;--shiki-dark-font-style:italic\">    age</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">:</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> 21</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">}</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> age</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> frank</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">.</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">age</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"exceptions\"><a class=\"anchor\" href=\"#exceptions\">Exceptions</a></h2>\n<p>Use <code>raise</code> keyword to throw exceptions, example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> f</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> a</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> b</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> then</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> raise (</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">E2</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5\"> \"division by zero\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">else</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">/</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Built-in polymorphic <code>option</code> type:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">type</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> '</span><span style=\"color:#F97583;--shiki-dark:#F97583;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> option</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> None</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> |</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> Some</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> of </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\">'</span><span style=\"color:#F97583;--shiki-dark:#F97583;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>We may write:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> f</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> a</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> b</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> then</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> None</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> else</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> Some</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (a </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">/</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b);;</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"imperative-ocaml\"><a class=\"anchor\" href=\"#imperative-ocaml\">Imperative OCaml</a></h2>\n<p>We use <code>ref</code> keyword to create references:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> r</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> ref </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>We use <code>:=</code> operator to assign a value to the reference:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">r := 100;;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>We use <code>!</code> operator to de-reference so we can get the reference contents:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># !r;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int = 100</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"loops\"><a class=\"anchor\" href=\"#loops\">Loops</a></h2>\n<p>For loop:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># </span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> table</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> n</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    for</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> row</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> to</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> n </span><span style=\"color:#F97583;--shiki-dark:#F97583\">do</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">      for</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> column</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> to</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> n </span><span style=\"color:#F97583;--shiki-dark:#F97583\">do</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        print_string (string_of_int (row </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> column))</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        print_string </span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5\">\" \"</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">      done</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      print_newline </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">()</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    done</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">val</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> table</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> :</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> unit </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> &#x3C;</span><span style=\"color:#F97583;--shiki-dark:#F97583\">fun</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">></span></span>\n<span class=\"line\"></span></code></pre>\n<p>While loop:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># </span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> smallest_power_of_two</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> x</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> t</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> ref </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> in</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">      while</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> !</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">t </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">&#x3C;</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> x </span><span style=\"color:#F97583;--shiki-dark:#F97583\">do</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        t </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">:=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> !</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">t </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">*</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">      done</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">      !</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">t;;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">val</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> smallest_power_of_two</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> :</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> &#x3C;</span><span style=\"color:#F97583;--shiki-dark:#F97583\">fun</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">></span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"arrays\"><a class=\"anchor\" href=\"#arrays\">Arrays</a></h2>\n<p>OCaml does have arrays, like:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># </span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> arr</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> [|</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">|]</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">val</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> arr</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> :</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> int </span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">array</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> [|</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">|]</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">#</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> arr</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int = 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># arr.(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) &#x3C;- 0;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : unit = ()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"># arr;;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">- : int array = [|0; 2; 3|]</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"standard-libraries\"><a class=\"anchor\" href=\"#standard-libraries\">Standard Libraries</a></h2>\n<p>Printf module:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-style:italic;--shiki-dark-font-style:italic\"> print_length</span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5;font-style:italic;--shiki-dark-font-style:italic\"> s</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\"> =</span></span>\n<span class=\"line\"><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">    Printf</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">printf </span><span style=\"color:#9DB1C5;--shiki-dark:#9DB1C5\">\"%s has %i characters\\n\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> s (</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">String</span><span style=\"color:#FF7A84;--shiki-dark:#FF7A84;font-weight:bold;--shiki-dark-font-weight:bold\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">length s);;</span></span>\n<span class=\"line\"></span></code></pre>"
  },
  {
    "title": "Golang Memory Management & Locks",
    "content": "<h2 id=\"stack-and-heap-in-go\"><a class=\"anchor\" href=\"#stack-and-heap-in-go\">Stack and Heap in Go</a></h2>\n<ul>\n<li>\n<p>stack:</p>\n<ul>\n<li>desc.: stores data whose the size and usage can be predicted by the go compiler, eg. local function variables, function arguments, return values, etc.</li>\n<li>management: the stack is managed automatically and uses LIFO (Last-in-first-out) algorithm principle. When a function is called, all associated data is placed on top of the stack, and when the function finishes, this data is removed from the stack.</li>\n</ul>\n</li>\n<li>\n<p>heap:</p>\n<ul>\n<li>desc.: data that changes dynamically during execution or requires access beyond the scope of a function cannot be placed on the stack because the compiler cannot predict its usage, so this data is stored in the heap.</li>\n<li>management: unlike the stack, retrieving data from the heap and managing it are more costly processes.</li>\n</ul>\n</li>\n<li>\n<p>GOGC: is used to define gargage collector acting periods. The default is 100, so the GC is called when heap size reaches 100% the size of the live heap (memory marked as “live” in the previous garbage collection cycle). This env var can be modified to call the GC more or less times, and even to disable it.</p>\n</li>\n<li>\n<p>GOMEMLIMIT: is used to limit the app memory. When you need a less resource usage, for example when your container is set to 10MB of memory, setting GOMEMLIMIT to a number of 10MB (80 % max container memory) is a good practice and helps avoid avoiding OOM (Out of memory crash error).</p>\n</li>\n</ul>\n<h2 id=\"locks-and-rwmutex\"><a class=\"anchor\" href=\"#locks-and-rwmutex\">Locks and RWMutex</a></h2>\n<ul>\n<li>RWMutex: read and write locks. Lock everything inside the scope from being accessed by other goroutines in execution, so they wait until the unlock.</li>\n<li>Channels: those can be used as a semaphore to lock too, but the best usage for channels is when you need to share information between goroutines.</li>\n</ul>"
  },
  {
    "title": "Linear Search",
    "content": "<ul>\n<li>Big O: <em>O(n)</em></li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">export</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> default</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> function</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> linear_search(haystack</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> number</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[]</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> needle</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> number</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> boolean</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> haystack</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">length</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; i</span><span style=\"color:#F97583;--shiki-dark:#F97583\">++</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (haystack[i] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">==</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> needle) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">return</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  return</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>"
  },
  {
    "title": "Binary Search",
    "content": "<ul>\n<li>\n<p>Big O: <em>O(log n)</em></p>\n</li>\n<li>\n<p>Notes:</p>\n<ul>\n<li>Sorted array is a must</li>\n<li><code>[low,high)</code> (low always inclusive, high always exclusive)</li>\n</ul>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">export</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> default</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> function</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> bs_list(haystack</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> number</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[]</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> needle</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> number</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> boolean</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  let</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> low </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  let</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> high </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> haystack</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">length</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  do</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> mid</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> Math</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.floor(low </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (high </span><span style=\"color:#F97583;--shiki-dark:#F97583\">-</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> low) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">/</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> value</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> haystack[mid]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (value </span><span style=\"color:#F97583;--shiki-dark:#F97583\">===</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> needle) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">      return</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    } </span><span style=\"color:#F97583;--shiki-dark:#F97583\">else</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (value </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> needle) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      low </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> mid </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    } </span><span style=\"color:#F97583;--shiki-dark:#F97583\">else</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      high </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> mid</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  } </span><span style=\"color:#F97583;--shiki-dark:#F97583\">while</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (low </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> high)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  return</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>"
  },
  {
    "title": "Two Crystal Balls Problem",
    "content": "<ul>\n<li>\n<p>Big O: <em>O(√2)</em></p>\n</li>\n<li>\n<p>Notes:</p>\n<ul>\n<li>The problem consists in: (<em>skipping history</em>) You have one true value in an array of false values, and you should find the truthy value in the most optimized way.</li>\n</ul>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">export</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> default</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> function</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> two_crystal_balls(breaks</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> boolean</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[])</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> number</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> jumpAmount</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> Math</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.floor(</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">Math</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.sqrt(</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">breaks</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">length</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  let</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> jumpAmount</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (; i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> breaks</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">length</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> jumpAmount) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (breaks[i]) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">break</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">-=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> jumpAmount</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> j </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; j </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> jumpAmount </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x26;&#x26;</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> breaks</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">length</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; j</span><span style=\"color:#F97583;--shiki-dark:#F97583\">++</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ++</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">i) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (breaks[i]) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">      return</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> i</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  return</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> -</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>"
  },
  {
    "title": "Big-O Time Complexity",
    "content": "<ul>\n<li>it's a way to categorize your algorithms time or memory requirements based on input</li>\n<li>the use of Big-O is to help choosing more performant algorithms</li>\n<li>as your input grows, how fast does computation and/or memory grow?</li>\n</ul>\n<p>An example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">function</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sum_char_codes(n</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> string</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> number</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  let</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sum </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#F97583;--shiki-dark:#F97583\">let</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> n</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">length</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">; </span><span style=\"color:#F97583;--shiki-dark:#F97583\">++</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">i) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        sum </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+=</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> n</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.charCodeAt(i);</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    return</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sum;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>the example shows a O(N) time complexity, which means that as the input grows so does the time complexity and it happens linearly</li>\n<li>the simplest trick to spot the complexity is to look for loops</li>\n<li>in Big-O you look for the worst case, so if a loop has a condition to stop when it finds a char in your input, doesn't matter cause that char can be in the end of the input</li>\n</ul>\n<p><img src=\"./assets/big-o-complexity-graph.excalidraw.svg\" alt=\"Big-O Time Complexity Graph\"></p>\n<ul>\n<li>O(sqrt(n)) is a cool big-o complexity we'll see later</li>\n</ul>"
  },
  {
    "title": "Arrays Data Structure",
    "content": "<ul>\n<li>javascript arrays are not exactly an array...</li>\n<li>arrays are contiguos memory space</li>\n<li>in a traditional language you code have something like: <code>a=int[3]</code></li>\n<li>let's see <code>ArrayBuffer</code> in JavaScript in order to understand more about arrays</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> a</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> new</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> ArrayBuffer(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">6</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">); </span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>\"a\" value is <code>ArrayBuffer { [Uint8Contents]: &#x3C;00 00 00 00 00 00>, byteLength: 6 }</code></li>\n<li>essentially it's a bunch of zeros, let's give a \"view\" for it, to interpret this array buffer</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> a8</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> new</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Uint8Array(a);</span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>an array of unsigned 8 bit numbers (numbers from 0 to 255)</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a8[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 45</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a8[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 45</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>\"a\" value is now: <code>ArrayBuffer { [Uint8Contents]: &#x3C;2d 00 2d 00 00 00>, byteLength: 6 }</code></li>\n<li>as you can see we've set the first position in the array, jumped one byte and set the third position</li>\n<li>now let's create another \"view\"</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> a16</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> new</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Uint16Array(a);</span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>instead of 8 bits, now we're using 16 bits to interpret the same memory space</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a16[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0x4545</span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>now \"a\" value is: <code>ArrayBuffer { [Uint8Contents]: &#x3C;2d 00 2d 00 45 45>, byteLength: 6 }</code></li>\n<li>the difference is just the way it's being interpreted, in the first one we walk from 8 units to 8 units, in the second we walk from 16 units to 16 units</li>\n<li>that's the essence of the array, we have a contiguous memory space that can be interpreted and manipulated</li>\n</ul>\n<h2 id=\"operations-you-can-do-with-arrays\"><a class=\"anchor\" href=\"#operations-you-can-do-with-arrays\">Operations You Can Do With Arrays</a></h2>\n<ul>\n<li>insert (or better said, overwrite)</li>\n<li>delete (replace values in array for <code>0</code>)</li>\n<li>get</li>\n<li>all those operations are O(1) btw</li>\n</ul>"
  },
  {
    "title": "Reiventing the processor",
    "content": "<ul>\n<li>We can do basic operations <strong>(add, sub, mul, div)</strong></li>\n<li>We have storage for numbers and results <strong>(r0, r1, r2, r3, r4, r5, r6, ..., r15)</strong>\n<ul>\n<li>They're called registers</li>\n<li>Each one is <strong>32 bits</strong> alone <strong>(4 bytes == 1 \"word\")</strong></li>\n</ul>\n</li>\n<li>An instructin looks like:\n<ul>\n<li><code>add r3, r1, r2 #r3=r1+r2</code></li>\n<li><code>mov r9, 42 #r9=42</code></li>\n<li><code>mov r3, r4 #r3=r4</code></li>\n</ul>\n</li>\n<li>We need more storage!\n<ul>\n<li>For cpu, memory is just a very long array of bytes:</li>\n</ul>\n</li>\n</ul>\n<p>| byte | memory |\n|------|--------|\n| 0 | 0x73 |\n| 1 | 0x75 |\n| 2 | 0x62 |\n| ... | ... |</p>\n<ul>\n<li>To deal with memory we need two operations:\n<ul>\n<li>From <strong>memory</strong> to <strong>cpu</strong> occurs <code>Load</code>\n<ul>\n<li><code>ldr r2, [0x4] #ldr means load register</code></li>\n</ul>\n</li>\n<li>From <strong>cpu</strong> to <strong>memory</strong> occurs <code>Store</code>\n<ul>\n<li><code>str r2, [0x0] #str means store register</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"references\"><a class=\"anchor\" href=\"#references\">References</a></h1>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=rDnqmVnrZKs\">Reinventing the processor</a></li>\n</ul>"
  },
  {
    "title": "Internet: Client X Server",
    "content": "<h2 id=\"client-x-server-model\"><a class=\"anchor\" href=\"#client-x-server-model\">Client X Server Model</a></h2>\n<p>Was created in 1970 with the will of separating resources of data processing. The model before with was called centralized model and as the name suggests, it does everything in one place.\nThe applications built in this model were developed making use of his distributed architecture. Those applications was developed having as a base the concept of development in layers. Then came models with multiple layers.</p>\n<h3 id=\"two-layers-model\"><a class=\"anchor\" href=\"#two-layers-model\">Two Layers Model</a></h3>\n<p>In this model, we have client and server layers, with the first layer handling the business logic and making the user interface, while the second layer is responsible for handling the data — normally using database management systems (DBMS).</p>\n<h3 id=\"three-layers-model\"><a class=\"anchor\" href=\"#three-layers-model\">Three Layers Model</a></h3>\n<ul>\n<li>Presentation Layer: Represented by the application installed on the client machine;</li>\n<li>Application Layer: Represented by a server responsible for business logic and rules, as well as for controlling access to the data server;</li>\n<li>Data Layer: Represented by a server responsible for data storage.</li>\n</ul>\n<h3 id=\"four-layers-model\"><a class=\"anchor\" href=\"#four-layers-model\">Four Layers Model</a></h3>\n<ul>\n<li>Web Server: Responsible for the interface, presentation, etc;</li>\n<li>Application Server: Represented by a server responsible for business logic and rules, as well as for controlling access to the data server;</li>\n<li>Data Server: Represented by a server responsible for data storage;</li>\n<li>Client: You accessing this environment from a browser or something.</li>\n</ul>\n<h3 id=\"communication-in-web-environment\"><a class=\"anchor\" href=\"#communication-in-web-environment\">Communication in Web Environment</a></h3>\n<ul>\n<li>Http (Hyper Text Transfer Protocol): An http request is made from the client when accessing a web page in order to see it's contents, the server answer the request that can become, let's say a 401 code (not authorized), 200 (return success and commonly the resource asked in request, show the page to the user), etc.</li>\n</ul>\n<h2 id=\"interfaces\"><a class=\"anchor\" href=\"#interfaces\">Interfaces</a></h2>\n<p>Human-Computer Interaction (HCI) is the study of interactions between humans and computers. In this context, interface is what provides interaction. In the beginning this interaction was only made by terminal screens, now it can be done with use of GUI's (Graphical User Interface).\nSince Nowadays we have a variety of screen sizes in another variety of devices, it has became a problem to make interfaces on the web that fits perfectly each screen.</p>\n<h3 id=\"responsive-design\"><a class=\"anchor\" href=\"#responsive-design\">Responsive Design</a></h3>\n<p>Responsive design is the approach that suggests that design and development should respond to the user's behavior and environment based on the screen size, platform, and orientation of the device being used.</p>\n<ul>\n<li>The origin of responsive design: The concept of responsive design had its origins in Responsive Architectural Design. Such a project preaches that a room or space must automatically adjust to the number and flow of people within it.</li>\n</ul>\n<p>In order to apply responsive design, we make use of technics, such as:</p>\n<ul>\n<li>Fluid Layouts: Make use of flexible units in order to define the size of the components in the page;\n<ul>\n<li>EM: This unit is equal to the size of the letter M in uppercase;</li>\n<li>REM: Always will be related to the size defined in  or .</li>\n</ul>\n</li>\n<li>Media Query: Is the use of media types from one or more expressions to define formatting for different devices;</li>\n<li>Scripts: Dynamic update of content and it's presentation.</li>\n</ul>\n<h4 id=\"mobile-first\"><a class=\"anchor\" href=\"#mobile-first\">Mobile First</a></h4>\n<p>Basically in an approach of responsive design that starts the development of the interface for the mobile dimensions, and start making changes for other dimensions.</p>\n<h3 id=\"adaptive-design\"><a class=\"anchor\" href=\"#adaptive-design\">Adaptive Design</a></h3>\n<p>Are defined 6 break points and made adaptations for those dimensions.</p>\n<h2 id=\"client-technologies\"><a class=\"anchor\" href=\"#client-technologies\">Client Technologies</a></h2>\n<h3 id=\"html\"><a class=\"anchor\" href=\"#html\">Html</a></h3>\n<p>Types of tags:</p>\n<ul>\n<li>Structure Tags: , , ;</li>\n<li>Content Tags: , , , , , , , etc;</li>\n<li>Semantic Tags: , , , , etc;</li>\n</ul>\n<p>HTML 5 has brought a lot of improvements, like:</p>\n<ul>\n<li>Better connectivity;</li>\n<li>Possibility of storing data in client side;</li>\n<li>Optimizations in offline operations;</li>\n<li>Support for medias (audio and video).</li>\n</ul>\n<h3 id=\"css\"><a class=\"anchor\" href=\"#css\">CSS</a></h3>\n<h4 id=\"syntax\"><a class=\"anchor\" href=\"#syntax\">Syntax</a></h4>\n<ul>\n<li>Selector: An html element (, , etc), his ID (id attribute) or his class name (class attribute);</li>\n<li>Property: Color, font, position, etc;</li>\n<li>Value: The new value to be applied to the property.</li>\n</ul>\n<p>Nowadays CSS can be applied to websites in a lot of different ways, like:</p>\n<ul>\n<li>Using Pre-processors: Sass, etc;</li>\n<li>Using Css-in-js: Stitches, Styled-Components, etc;</li>\n<li>Using Css Frameworks: Tailwind, Bootstrap, etc.</li>\n</ul>\n<h3 id=\"javascript\"><a class=\"anchor\" href=\"#javascript\">JavaScript</a></h3>\n<p>JavaScript can manipulate the DOM, and his capacity has become more and more powerful with the appearance of frameworks like React.js and Angular.</p>\n<h2 id=\"server-technologies\"><a class=\"anchor\" href=\"#server-technologies\">Server Technologies</a></h2>\n<h3 id=\"php-hypertext-processor\"><a class=\"anchor\" href=\"#php-hypertext-processor\">PHP (Hypertext Processor)</a></h3>\n<p>It's an open source programming language dedicated to server side. It was an structured language but has adopted object oriented programming paradigm 10 years after it's creation.</p>\n<ul>\n<li>PHP code is interpreted by server;</li>\n<li>Then the code is converted to HTML;</li>\n<li>Then the code is showed in browser.</li>\n</ul>\n<h4 id=\"syntax-1\"><a class=\"anchor\" href=\"#syntax-1\">Syntax</a></h4>\n<ul>\n<li>Variables: Variables are created using the dollar sign ($);</li>\n<li>Data Types: Booleans, integers, floating point numbers, strings, arrays, iterables, objects, resources, NULL and call-backs. And it's not necessary to define the type in declaration, since PHP is a weak typed language;</li>\n<li>Conditional Operators: There is if, else, if and else ternaries and switch;</li>\n<li>Loops: There is for, foreach, while and do while;</li>\n<li>Methods and Functions: PHP has a lot of native methods and functions.</li>\n</ul>\n<p>To include scripts PHP inside other scripts PHP use: include, require, include once, require_once.</p>\n<p>PHP also has access to archives in the server.</p>\n<h3 id=\"static-pages\"><a class=\"anchor\" href=\"#static-pages\">Static Pages</a></h3>\n<p>HTML + CSS + JavaScript only makes an static page.</p>\n<h3 id=\"dynamic-pages\"><a class=\"anchor\" href=\"#dynamic-pages\">Dynamic Pages</a></h3>\n<p>The combination of technologies on client side with technologies on server side make dynamic pages. Dynamic pages stores data on databases and manipulate content using scripts in server side using PHP (like saving a post). Another thing dynamic pages can do is add the possibility to use CMS (Content Management Software) to keep site information always updated.</p>\n<h3 id=\"accessing-data\"><a class=\"anchor\" href=\"#accessing-data\">Accessing Data</a></h3>\n<p>It's possible the recover data from databases using HTML forms, sending a request to the server endpoint or using JavaScript fetch API (it seems that exists an XMLHttpRequest too).</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Web Development</li>\n<li><strong>Theme</strong>: Internet: Client X Server</li>\n</ul>"
  },
  {
    "title": "Dynamic Pages With PHP",
    "content": "<h2 id=\"basic-concepts-of-php\"><a class=\"anchor\" href=\"#basic-concepts-of-php\">Basic Concepts of PHP</a></h2>\n<p>PHP is an script open source language. PHP basically generates HTML on the server and ships it to the client, meaning PHP executes on server and it only cares about what happens in server, anything till the point it goes to the client is not a concern of PHP anymore, different of something like <code>Next.js</code> nowadays that cares about the entire cycle.</p>\n<ul>\n<li>'print_r': The “print_r” function prints the elements of an array;</li>\n<li>'count': The “count” function returns the size (number of elements) of an array. This function is also very useful when working with vectors;</li>\n<li>'unset': The “unset” function receives as a parameter the array and index or indexes that we want to remove. In addition, it is also possible to remove the entire vector, passing it as a parameter and without defining any index;</li>\n<li>'array_splice': The “array_splice” function receives as parameters the array to be manipulated, the offset (index from which we want to delete elements) and the length (number of items we want to delete).</li>\n</ul>\n<p><strong>Multidimensional arrays</strong> are just array that in their <strong>indexes</strong> have other arrays declared.</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Web Development</li>\n<li><strong>Theme</strong>: Dynamic Pages With PHP</li>\n</ul>"
  },
  {
    "title": "Javascript",
    "content": "<h2 id=\"concepts-and-syntax-of-javascript\"><a class=\"anchor\" href=\"#concepts-and-syntax-of-javascript\">Concepts and Syntax of Javascript</a></h2>\n<p>It's an <strong>interpreted</strong> and <strong>multi paradigm</strong> language, since it has support for structured, object oriented and functional programming. It was developed to be used on client side, but nowadays it can be used on server side and also for building mobile apps.</p>\n<h3 id=\"dom-tree\"><a class=\"anchor\" href=\"#dom-tree\">DOM Tree</a></h3>\n<p>DOM (Document Object Model) is an interface that allows the manipulation, via programming, of HTML (XML, others) documents.</p>\n<p>With Javascript it is possible to add, modify (styles for example), and even manipulate events on DOM elements at execution time. Those modifications are dynamic, but it isn't persistent, which means the initial state is what remains when user left the page.</p>\n<h3 id=\"javascript-in-html\"><a class=\"anchor\" href=\"#javascript-in-html\">Javascript in HTML</a></h3>\n<p>Can be done by <code>&#x3C;script></code> tag or by adding an external archive with <code>.js</code> extension.</p>\n<p><em>Note: XMLHttpRequest is an old interface for making asynchronous requests in js, before <code>fetch</code>. And AJAX stands for Asynchronous JAvascript and XML.</em></p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Web Development</li>\n<li><strong>Theme</strong>: Javascript</li>\n</ul>"
  },
  {
    "title": "PHP Integration With Databases",
    "content": "<p>PHP can access the SGDB of the database and make SQL queries. PHP, like operating systems (windows with .dll and linux based with .so files), have extensions. An example of PHP extensions are the SGDB drivers.</p>\n<h2 id=\"pdo-class\"><a class=\"anchor\" href=\"#pdo-class\">PDO Class</a></h2>\n<h3 id=\"pdo-available-drivers\"><a class=\"anchor\" href=\"#pdo-available-drivers\">PDO Available Drivers</a></h3>\n<p>| Driver | Supported SGBD\n|--------|---------------\n| PDO_CUBRID | Cubrid\n| PDO_DBLIB | FreeTDS / Microsoft SQL Server / Sybase\n| PDO_FIREBIRD | Firebird\n| PDO_IBM | IBM DB2\n| PDO_INFORMIX | IBM Informix Dynamic Server\n| PDO_MYSQL | MySQL 3.x/4.x/5.x\n| PDO_OCI | Oracle Call Interface\n| PDO_ODBC | ODBC v3 (IBM DB2, unixODBC e win32 ODBC)\n| PDO_PGSQL | PostgreSQL\n| PDO_SQLITE | SQLite 3 e SQLite 2\n| PDO_SQLSRV | Microsoft SQL Server / SQL Azure\n| PDO_4D | 4D</p>\n<p>The connection is made like this (only changing database name for the one you want to use): <code>$dsn = new PDO(\"mysql:host=localhost;dbname=test\", $user, $pass);</code></p>\n<h3 id=\"exceptions-in-php\"><a class=\"anchor\" href=\"#exceptions-in-php\">Exceptions in PHP</a></h3>\n<p>Use <code>try</code> <code>catch</code> blocks.</p>\n<h3 id=\"exec-method\"><a class=\"anchor\" href=\"#exec-method\">EXEC Method</a></h3>\n<p>This method, belonging to the PDO Class, executes an SQL statement and returns the number of rows affected by the statement. Syntax is:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$affectedLinesQuantity </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $dsn</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">exec</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Delete From Client Where client_code = 1\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">echo </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Affected lines: \"</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> .</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $affectedLinesQuantity</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"query-method\"><a class=\"anchor\" href=\"#query-method\">Query Method</a></h3>\n<p>The Query method, also belonging to the PDO Class, has a function similar to the Exec method. However, in addition to executing an SQL statement, it returns – when available – a set of results (result set) as a PDOStatement object. In case of failures, the boolean FALSE is returned.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$SQLInstruction </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"Select name, code, phone From Client\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$resultSet </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $dsn</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">query</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$sql</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">while</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> ($row </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $resultSet</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">fetch</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  echo $row[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'name'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"\\t\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  echo $row[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'code'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"\\t\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  echo $row[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'code'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">] </span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"\\n\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"prepare-and-execute-methods\"><a class=\"anchor\" href=\"#prepare-and-execute-methods\">Prepare and Execute Methods</a></h3>\n<ol>\n<li>Define constants and create connection:</li>\n</ol>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">define</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'HOST'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '127.0.0.1'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">define</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'PORT'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '5432'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">define</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'DBNAME'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> 'test'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">define</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'USER'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> 'user'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">define</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'PASSWORD'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> 'passwd'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">try</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  $dsn </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> new</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> PDO</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"mysql:host=\"</span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> HOST </span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \";port=\"</span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">PORT</span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\";dbname=\"</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> .</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> DBNAME </span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\";user=\"</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> .</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> USER </span><span style=\"color:#F97583;--shiki-dark:#F97583\">.</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \";password=\"</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> .</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> PASSWORD);</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">} </span><span style=\"color:#F97583;--shiki-dark:#F97583\">catch</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">PDOException</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $e) {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  echo </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'The connection failed and I return the following error message: '</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> .</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$e</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">getMessage</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<ol start=\"2\">\n<li>Performing a DB query through the login and password received by POST:</li>\n</ol>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$login </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $_POST[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'login'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">];</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$userPasswd </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $_POST[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'passwd'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$stmt </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $dsn</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">prepare</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Select * From User Where login = :login And password =:password\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$stmt</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">execute</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">':login'</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $login</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> ':password'</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $userPasswd]</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">// or</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$stmt </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $dsn</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">prepare</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Select * From User Where login = ? And password = ?\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$stmt</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-></span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">execute</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[$login</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> $userPasswd]</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<ol start=\"3\">\n<li>Destroying the statement object and closing the connection:</li>\n</ol>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$stmt </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> null</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$dsn </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> null</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Web Development</li>\n<li><strong>Theme</strong>: PHP Integration With Databases</li>\n</ul>"
  },
  {
    "title": "HTML",
    "content": "<h2 id=\"web-page-structure\"><a class=\"anchor\" href=\"#web-page-structure\">Web Page Structure</a></h2>\n<p>The html specification was created from SGML (An ISO standard that define rules for the creation of platform independent markup languages) and HyTime (ISO standard with the objective of hyper documents and hypermedia to be described in function of it's contents). Nowadays the HTML is maintained by W3C (World Wide Web Consortium).</p>\n<h3 id=\"html-version-history\"><a class=\"anchor\" href=\"#html-version-history\">HTML Version History</a></h3>\n<p>| Year |\tVersion\t| History\n|------|----------|--------\n| 1991 |\tHTML |\tTim Berners-Lee creates the HTML\n| 1995 |\tHTML 2 |\tHTML Working Group Defines HTML 2.0\n| 1997 |\tHTML 3.2 |\tW3C publishes HTML 3.2 Recommendation\n| 1999 |\tHTML 4.01 |\tW3C publishes HTML 4.01 Recommendation\n| 2000 |\tXHTML |\tW3C publishes XHTML 1.0 Recommendation\n| 2014 |\tHTML5 |\tW3C publishes HTML5 Recommendation\n| 2016 |\tHTML 5.1 |\tW3C candidate for HTML 5.1 Recommendation\n| 2017 |\tHTML 5.1 |\tW3C publishes HTML 5.1 Recommendation 2nd edition\n| 2017 |\tHTML 5.2 |\tW3C publishes HTML5.2 Recommendation</p>\n<p>On the beginning the browsers implemented their own markups for showing pages on the web, so W3C created DTD (Document Type Definitions).</p>\n<h3 id=\"dtd\"><a class=\"anchor\" href=\"#dtd\">DTD</a></h3>\n<p>The HTML 4 specification, for example, provided for three types of Doctypes:</p>\n<ul>\n<li>Strict: It determined a series of restrictions and requirements: mandatory separation between structure and presentation; limitation on available presentation elements - such as font tags and alignment attributes −; no support for deprecated tags, etc;</li>\n<li>Transitional: More malleable in terms of presentation attributes, in addition to allowing the use of obsolete tags;</li>\n<li>Frameset: Deprecated HTML4 tag used to combine multiple frames and display them as a single page.</li>\n</ul>\n<p>We see the initial code snippet of an HTML 4.01 page:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;!</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">DOCTYPE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> HTML PUBLIC “-/W3C/DTD HTML 4.01 Transitional//EM” http://www.w3.org/TR/html4/loose.dtd></span></span>\n<span class=\"line\"></span></code></pre>\n<p>In the declaration, the following information about the HTML page is defined:</p>\n<ul>\n<li>Document Type: HTML;</li>\n<li>Access to the DTD: Public – therefore, the DTD to which it refers is available for public use;</li>\n<li>Where the DTD is located: It was created and is hosted at the W3C;</li>\n<li>Specification URL: The address <code>http://www.w3.org/TR/html4/loose.dtd</code> links to the specification in question.</li>\n</ul>\n<p>Starting with HTML5, when HTML ceased to be based on SGML, the Doctype declaration was simplified, as seen below:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;!</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">DOCTYPE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> html></span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"basic-structure\"><a class=\"anchor\" href=\"#basic-structure\">Basic Structure</a></h3>\n<p>Html basic structure:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;!</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">doctype</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> html></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">html</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">head</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">head</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">body</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">body</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">html</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>Head is the header of the page, here are some tags that are part of the <code>&#x3C;head></code>:</li>\n</ul>\n<p>| Tag |\tWhat is it for\n|-----|-------------------\n| <code>&#x3C;title></code> |\tIt is the title of the document, being displayed in the title bar of the browser.\n| <code>&#x3C;meta></code> | It encompasses a series of information – commonly called metadata – such as the description of the page, keywords, etc.\n| <code>&#x3C;script></code> |\tIt is responsible for the inclusion and/or definition of scripts related to the document.\n| <code>&#x3C;link></code> | It is responsible for including (external) style sheets related to the document. It also makes it possible to include favicons (small icons that appear in the browser's address bar).\n| <code>&#x3C;style></code> | Like the previous one, it is responsible for linking style sheets to the document − when they are declared directly in the document.</p>\n<ul>\n<li>Then it's body tag, which is responsible for the structure of the document.</li>\n</ul>\n<h2 id=\"html-basic-tags\"><a class=\"anchor\" href=\"#html-basic-tags\">HTML Basic Tags</a></h2>\n<p>The <code>&#x3C;br/></code> tag is obsolete since HTML 5.</p>\n<p>ID and Class are two of the most important attributes of HTML for web development</p>\n<ul>\n<li>Text Tags: Are responsible for organizing page content;</li>\n<li>Semantic Tags: Are responsible for organizing a page structure.</li>\n</ul>\n<p>Some other tags and their function:</p>\n<p>| Tag |\tDescription/Function\n|-----|---------------------\n| <code>&#x3C;article></code> |\tIncludes a content block that should be used when you want to insert an article, such as a blog post, for example.\n| <code>&#x3C;section></code> |\tDefines a section in the document. It is normally used to group sections. For example: a  could contain several .\n| <code>&#x3C;h1>-&#x3C;h6></code> |\tUsed to insert headings throughout the page. The most important title should use the <code>&#x3C;h1></code> tag and it's a hierarchical tag.\n| <code>&#x3C;p></code> |\tUsed to insert paragraphs of text.\n| <code>&#x3C;pre></code> |\tUsed to insert preformatted text.\n| <code>&#x3C;div></code> |\tCan be used to group some type of content that does not have any specific semantics or that does not fit well within a semantic tag.\n| <code>&#x3C;span></code> | Inline tag that wraps content.\n| <code>&#x3C;a></code> | Used to insert links.\n| <code>&#x3C;br /></code> | Used to insert a line break.\n| <code>&#x3C;hr></code> | Inserts a horizontal line into the document. It is usually used when you want to change the theme of a text.</p>\n<p><code>&#x3C;strong></code> and <code>&#x3C;em></code> vs <code>&#x3C;b></code> and <code>&#x3C;i></code> formatting tags:</p>\n<ul>\n<li><code>&#x3C;b></code>: applies the bold effect to a text;</li>\n<li><code>&#x3C;strong></code>: applies the bold effect to a text and marks it as important;</li>\n<li><code>&#x3C;i></code>: applies the italic effect to a text;</li>\n<li><code>&#x3C;em></code>: Italics and emphasizes text.</li>\n</ul>\n<h2 id=\"complex-html-tags\"><a class=\"anchor\" href=\"#complex-html-tags\">Complex HTML Tags</a></h2>\n<h3 id=\"lists\"><a class=\"anchor\" href=\"#lists\">Lists</a></h3>\n<p>| Type | Tag | Container Tag | Item Tag | Description\n|------|-----|---------------|----------|------------\n| Sorted | <code>&#x3C;ol></code> |\t<code>&#x3C;li></code> | --\t| Used to create ordered lists.\n| Not Sorted | <code>&#x3C;ul></code>\t| <code>&#x3C;li></code> | -- | Used to create unordered lists.\n| Definition | <code>&#x3C;dl></code> | <code>&#x3C;dt></code> | <code>&#x3C;dd></code> | Used to create a list of terms and definitions.</p>\n<h3 id=\"html-tables\"><a class=\"anchor\" href=\"#html-tables\">HTML Tables</a></h3>\n<p>| Tag\t| Function\n|-----|---------\n| <code>&#x3C;table></code> | Table main container\n| <code>&#x3C;tr></code> | Represents the lines, being composed by the tags related to the columns.\n| <code>&#x3C;td></code> | Represents the columns and needs to be inserted inside the row tag.\n| <code>&#x3C;th></code> | Also represents columns and is used to display the title of a column, having, in this sense, a semantic function. Like the <code>&#x3C;td></code> tag, it must be contained within a line tag. This element has its own styles and renders differently than regular columns.\n| <code>&#x3C;thead></code> | Stores the header of the table, consisting of rows and columns. This element, like what we saw earlier, has a semantic function in terms of content structuring.\n| <code>&#x3C;tfoot></code> | Stores the footer of the table, also having a semantic function in terms of structuring.</p>\n<p><em><strong>Obs: Where 'tf' is <code>&#x3C;tbody</code>???</strong></em></p>\n<p>Tables are usually arranged uniformly: <strong>rows upon rows, columns after columns, cell by cell</strong>.</p>\n<p><code>colspan</code> and <code>rowspan</code> attributes are used to organize columns and lines in a table.</p>\n<h3 id=\"media\"><a class=\"anchor\" href=\"#media\">Media</a></h3>\n<p>In HTML we can use <code>&#x3C;video></code> or <code>&#x3C;audio></code> tags to insert video and audio medias into page. The <code>src</code> attribute is used to inform the location of the media.</p>\n<h2 id=\"forms-in-web-pages\"><a class=\"anchor\" href=\"#forms-in-web-pages\">Forms in Web Pages</a></h2>\n<p>Basic structure of a form:</p>\n<ul>\n<li><code>&#x3C;form></code>: Main form container;</li>\n<li><code>&#x3C;input></code>: Text input in a form is well used to send information easily, by the attribute <code>type</code> we can tell the type of the data;</li>\n<li><code>&#x3C;textarea></code>: Another text input of a different kind to be used to send information;</li>\n<li><code>&#x3C;select></code> and <code>&#x3C;option></code>: Selection input where <code>&#x3C;select></code> is the container and <code>&#x3C;option></code> defines the options to be selected by the user;</li>\n<li><code>&#x3C;button></code>: By the attribute <code>type</code> we can inform that the button will trigger the form <code>action</code> attribute;</li>\n<li><code>&#x3C;label></code>: Used to define titles or captions to form fields;</li>\n<li><code>&#x3C;fieldset></code>: It's used to define sections in the form;</li>\n<li><code>&#x3C;legend></code>: It's well used to define the description of <code>&#x3C;fieldset></code> for example.</li>\n</ul>\n<p>Look at those attributes description:</p>\n<p>| Tag |\tAttribute\t| Function of the attribute\n|-----|-----------|--------------------------\n| <code>&#x3C;form></code> | action |\tDefines the URL (address) to which form data will be sent.\n| <code>&#x3C;form></code> | method |\tDefines the HTTP method (POST or GET) for sending data.\n| <code>&#x3C;label></code>\t| for |\tBinds the <code>&#x3C;label></code> tag to the field it refers to.\n| <code>&#x3C;input></code>\t| minlength\t| Define the minimum number of characters allowed in a field.\n| <code>&#x3C;input></code>\t| maxlength\t| Define the maximum number of characters allowed in a field.\n| <code>&#x3C;input></code>\t| type | Defines the type of field and its behavior.\n| <code>&#x3C;input></code>\t| value\t| Sets the value of the field.\n| <code>&#x3C;button></code> | type\t| Defines the type of button and its behavior.\n| <code>&#x3C;option></code> | value | Sets the value of the field.</p>\n<p>Input <code>type</code> attribute:</p>\n<ul>\n<li>Password: Mask the text with asterisks;</li>\n<li>Hidden: Hide the field so it's not showed on the browser;</li>\n<li>Checkbox: Click/check value selection;</li>\n<li>Radio: Exclusively selection of value;</li>\n<li>Submit: Associated with button tag, triggers the <code>action</code> in the form, more specifically, the submit event of the form;</li>\n<li>Reset: Associated with button tag, cleans up form fields values;</li>\n<li>Button: An input element can exercise a button functionality with that type.</li>\n</ul>\n<p>Another types were added along the time, like <code>email</code> that nowadays is very useful in form construction.</p>\n<h3 id=\"html-5-new-attributes-and-types\"><a class=\"anchor\" href=\"#html-5-new-attributes-and-types\">HTML 5 New Attributes and Types</a></h3>\n<ul>\n<li><strong>Attributes:</strong></li>\n</ul>\n<p>| Attribute\t| Function | Comment\n|-----------|----------|--------\n| placeholder\t| Display a text in the input field. | Used to give a hint to the user about the data to be inserted.\n| required | Determine whether a field is required. | Used to validate form data.\n| autofocus |\tFix focus on the field. | Used when we want that, when loading the form, a certain field is focused.\n| pattern | Validate a field's value against a regular expression. | The phone field is a good example of using this attribute. With it, we can, for example, determine the number of characters and the expected format for a field.</p>\n<ul>\n<li><strong>Types:</strong></li>\n</ul>\n<p>| Type | Function\t| Comment\n|------|----------|--------\n| tel\t| Enter phone numbers. | For better usability, it should be used in conjunction with the pattern attribute.\n| datetime | Insert dates with UTC time zone from a calendar. |\n| date| Gives you insert dates without time zone from a calendar. |\n| number | Insert numbers. | Creates a component different from the normal input, in which, using arrows, numbers can be incremented or decremented.</p>\n<h3 id=\"validation-types\"><a class=\"anchor\" href=\"#validation-types\">Validation types</a></h3>\n<p>In HTML5 there are two possible types of validation:</p>\n<ul>\n<li>Which verifies that the data entered in a field is consistent with its type and/or pattern (pattern);</li>\n<li>Which checks if a mandatory field has been filled.</li>\n</ul>\n<p><em>Obs: The default HTML5 behavior is to validate the data when the form is submitted.</em></p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Web Development</li>\n<li><strong>Theme</strong>: HTML</li>\n</ul>"
  },
  {
    "title": "CSS",
    "content": "<h2 id=\"css-fundamentals\"><a class=\"anchor\" href=\"#css-fundamentals\">CSS Fundamentals</a></h2>\n<h3 id=\"general-vision\"><a class=\"anchor\" href=\"#general-vision\">General Vision</a></h3>\n<p>CSS or Cascading Style Sheets are, as the name says, sheets of style for the HTML elements organized in cascade way, meaning there's hierarchy of which style should be applied. CSS is used to style HTML elements in a way that even the same element can have different style alongside the project.</p>\n<h3 id=\"syntax\"><a class=\"anchor\" href=\"#syntax\">Syntax</a></h3>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">p</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> /* selector */</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">  color</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> /* property */</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> white</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> /* value */</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>Selector: Can be the HTML <strong>tag</strong>, <strong>pseudo class</strong> of the HTML element (like :active, :checked, etc), the <strong>class</strong> of the element, the <strong>id</strong> of the element, an <strong>attribute</strong> of the element (like '[checked]' or '[type='text']'), <strong>relation</strong> between two elements ('a b' = any element b that is descendant of a, 'a > b' = any element b that is son of a and 'a + b' = any element b that is the next brother of a) or a combination of those;</li>\n<li>Property: There's tons of properties available in CSS, like background, color, font-family, etc. Each of those can be used, but depending on the context, not all of them will behave exactly the same;</li>\n<li>Value: The value to be applied to the property. Off course there is a lot of values already defined in CSS, like the 'white' we used, but there's also custom values that can be applied.</li>\n</ul>\n<h3 id=\"integration-with-html\"><a class=\"anchor\" href=\"#integration-with-html\">Integration With HTML</a></h3>\n<ul>\n<li>CSS Inline: Using the attribute 'style' inside the HTML element;</li>\n<li>CSS Internal: Using the  tag inside ;</li>\n<li>CSS External: Using an archive with '.css' extension and adding it to the HTML with a  tag or with '@import' inside css tag ;</li>\n<li>CSS Scoped: Using the  tag in a scoped way, declaring it inside the element that should be styled.</li>\n</ul>\n<h3 id=\"heritage\"><a class=\"anchor\" href=\"#heritage\">Heritage</a></h3>\n<p>CSS allow styles that are applied to father to be also applied to children. That is what we call cascade effect, meaning every child will have the style, it is applied in an cascading way.</p>\n<h3 id=\"specificity\"><a class=\"anchor\" href=\"#specificity\">Specificity</a></h3>\n<p>Besides heritage, the specificity of CSS allows to, even with a child that could inherit the styles from the father tag, have different styles from the father. The process is made by specifying, like the tag  inside a div will have 'color: red' instead of the 'color: blue' that the div applies, so the text for that specific situation ( tag) will be red.</p>\n<h3 id=\"tips-on-precedence-rules\"><a class=\"anchor\" href=\"#tips-on-precedence-rules\">Tips on precedence rules</a></h3>\n<p>The precedence rule regarding forms of CSS inclusion follows this order:</p>\n<ol>\n<li>Internal and scoped styles take precedence over styles in external files;</li>\n<li>Inline styles take precedence over inner, scoped, and outer styles.</li>\n</ol>\n<p><em>As for selectors, the precedence rule follows this order:</em></p>\n<ul>\n<li>Element selectors (using only the tag name) have the lowest precedence, as they are very generic.</li>\n<li>Class selectors have higher precedence than element selectors.</li>\n<li>Identification selectors have higher precedence than class selectors.</li>\n</ul>\n<p><em><strong>Obs: the '!important' that can be used after value when applying styles will ignore this precedence to have higher priority.</strong></em></p>\n<h2 id=\"css3\"><a class=\"anchor\" href=\"#css3\">CSS3</a></h2>\n<h3 id=\"colors\"><a class=\"anchor\" href=\"#colors\">Colors</a></h3>\n<p>They can be:</p>\n<ul>\n<li>HEX: #cccccc for example;</li>\n<li>RGB: Defining <em>red, green and blue</em> inside <em>rgb()</em>, but can also be <em>rgba()</em>, where 'a' is the <em>alpha</em>, controlling opacity;</li>\n<li>HSL: Is an system of cylindrical coordinates, with <em>hsl()</em> and <em>hsla()</em> notations.</li>\n</ul>\n<h3 id=\"fonts\"><a class=\"anchor\" href=\"#fonts\">Fonts</a></h3>\n<p>Types of fonts:</p>\n<ul>\n<li>TTF/OTF;</li>\n<li>WOFF;</li>\n<li>WOFF2;</li>\n<li>SVG;</li>\n<li>EOT.</li>\n</ul>\n<h2 id=\"advanced-css-concepts\"><a class=\"anchor\" href=\"#advanced-css-concepts\">Advanced CSS Concepts</a></h2>\n<h3 id=\"box-model\"><a class=\"anchor\" href=\"#box-model\">Box Model</a></h3>\n<p>There's four main elements of box models, they're: content, border, margin and padding.</p>\n<h3 id=\"pseudo-elements\"><a class=\"anchor\" href=\"#pseudo-elements\">Pseudo Elements</a></h3>\n<p>Like <em>after</em>, <em>before</em>, <em>selection</em>, <em>first-letter</em>, etc.</p>\n<h3 id=\"layout\"><a class=\"anchor\" href=\"#layout\">Layout</a></h3>\n<p>Flex layouts are simpler, just type 'display: flex' and go on styling things. Flex will just remove the block styles and let thing be more fluid in the page. There's also grid layout where you define the number of rows and cols and it works as a grid.</p>\n<h2 id=\"frameworks-css\"><a class=\"anchor\" href=\"#frameworks-css\">Frameworks CSS</a></h2>\n<ul>\n<li>Bootstrap: It is a responsive framework based on the mobile-first premise – whose initial focus is mobile devices and then desktops. It has ready-to-use components developed in HTML, CSS and Javascript;</li>\n<li>Foundation: It is a responsive framework, based on the mobile-first approach. Its main characteristic is to make native use of the CSS pre-processor, called SASS;</li>\n<li>Semantic UI: stands out for using, natively, a CSS preprocessor, LESS, and the Jquery Javascript library. It is also an open source framework. An important feature of this framework is that its classes use natural language syntax, such as nouns, for example, to link concepts in a more intuitive way;</li>\n<li>TailwindCSS: The best of the best, it uses classes inside elements to add styles, like 'flex' applies 'display: flex'.</li>\n</ul>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Web Development</li>\n<li><strong>Theme</strong>: CSS</li>\n</ul>"
  },
  {
    "title": "Good Practices in Information Security",
    "content": "<p>Actions that help ensure information security:</p>\n<ul>\n<li>Never share passwords;</li>\n<li>Always use antivirus and keep it updated;</li>\n<li>Observe whether the sites accessed are reliable;</li>\n<li>Never open links or download files sent by unreliable emails or from unknown senders;</li>\n<li>Download programs only from official providers;</li>\n<li>Back up files regularly;</li>\n<li>Enable the operating system firewall;</li>\n<li>Keep the system always up to date.</li>\n</ul>\n<h3 id=\"managing-passwords\"><a class=\"anchor\" href=\"#managing-passwords\">Managing Passwords</a></h3>\n<p>Some good practices on this matter:</p>\n<ul>\n<li>Passwords must have minimum of eight characters;</li>\n<li>Passwords must be changed frequently;</li>\n<li>In case of data leaking of some service, credentials must be changed;</li>\n<li>Passwords must have alphanumeric characters, such as @#$%&#x26;*, etc;</li>\n<li>Passwords must not contain user or company names;</li>\n<li>Not utilizing same password for multiple accounts;</li>\n<li>And of course, don't inform third parties about you passwords.</li>\n</ul>\n<h3 id=\"training\"><a class=\"anchor\" href=\"#training\">Training</a></h3>\n<p>Independent of how much and how good a company security system is, if the worker do not had received training, a simple phishing attack can break all of the defenses.</p>\n<h2 id=\"antivirus-access-control-and-backup\"><a class=\"anchor\" href=\"#antivirus-access-control-and-backup\">Antivirus, Access Control and Backup</a></h2>\n<h3 id=\"access-control\"><a class=\"anchor\" href=\"#access-control\">Access Control</a></h3>\n<ul>\n<li>\n<p><strong>DAC (Discretionary Access Control)</strong>: In this method, the administrator of the system, data or protected resources defines the policies of who is allowed access, that is, the system holds the business owner responsible for deciding which people are allowed in a specific location, physically or digitally.\nDAC is less restrictive compared to other systems in that it essentially allows an individual complete control over whatever objects one owns, as well as the programs associated with those objects. The disadvantage of discretionary access control is that it gives the end user complete control to configure security level settings for other users. Furthermore, the permissions granted to the end user are inherited in other programs used, which can lead to the execution of malware, even if the end user is not aware of it.</p>\n</li>\n<li>\n<p><strong>MAC (Mandatory Access Control)</strong>: This security mechanism restricts the level of control users (subjects) have over the objects they create. Unlike the DAC implementation, where users have full control over their own files, directories, etc., MAC adds additional labels or categories to all file system objects. Users and processes must have appropriate access to these categories before interacting with objects.\nTo understand better, the subject is usually a process or thread while objects are constructs such as files, directories, TCP/UDP ports, shared memory segments, input and output devices. Subjects and objects have a set of security attributes. Whenever a subject tries to access an object, an authorization rule imposed by the operating system kernel examines these security attributes and decides whether access can take place.</p>\n</li>\n<li>\n<p><strong>RBAC (Role Based Access Control)</strong>: Grants access based on defined business roles rather than user identity. The goal is to provide users only with access to data that they deem necessary to perform their role in organizations. This method is based on a combination of role assignments, authorizations, and permissions.</p>\n</li>\n</ul>\n<p>Access control is necessary to avoid hackers from accessing things they shouldn't, to protect computer and system resources to avoid safety problems. The main resources that need to be protected are <strong>applications</strong>, <strong>data archives</strong>, <strong>operational system and utilities</strong>, <strong>password archives</strong> and <strong>log archives</strong>.</p>\n<h3 id=\"login\"><a class=\"anchor\" href=\"#login\">Login</a></h3>\n<p>An efficient login process should be:</p>\n<ol>\n<li>Inform that the <strong>system</strong> should only be <strong>accessed</strong> by authorized persons;</li>\n<li><strong>Do not display system information</strong> until the logon process is completely complete;</li>\n<li>Not to provide, during the logon process, <strong>help messages</strong> that could help an unauthorized user to access the system;</li>\n<li><strong>Validate input data</strong> only <strong>after completing the login process</strong>. The system must not indicate which part of the input data is correct or incorrect, such as, for example, ID or password, in case an error occurs;</li>\n<li><strong>Limit the number of unsuccessful login attempts</strong>, such as a maximum of three attempts;</li>\n<li><strong>Save invalid access attempts</strong> for future verification;</li>\n<li><strong>Force a timeout before allowing new attempts to enter the system</strong> or <strong>reject any further attempts to access</strong> without specific authorization.</li>\n<li><strong>Terminate connections</strong> to the system;</li>\n<li><strong>Limit the time for the login procedure</strong>. If it takes too long, the system should close the procedure;</li>\n<li>When the system logon procedure finishes correctly, it shows the following information: <strong>date and time</strong> of the last successful logon; <strong>details of any unsuccessful logon attempts</strong> since the last successful procedure;</li>\n</ol>\n<p>Imagine that you are programming the messages that will appear to the user during the logon process. According to the guidelines we saw, observe the messages that should or should not appear to the user:</p>\n<p>| Passwords | Valid or invalid | Justification\n|-----------|------------------|--------------\n| Your password is incorrect. | Invalid |  This message must not appear for the user, as the system must not indicate which part of the input data is correct or incorrect, such as, for example, ID or password, in case of any error.\n| Your login details are incorrect. You have two more attempts. | Valid | his message may appear to the user as the system must limit the number of unsuccessful login attempts, such as a maximum of three attempts.\n| This system can be accessed by anyone. | Invalid | This message should not appear to the user. On the contrary, the system must inform that the system should only be accessed by authorized persons.</p>\n<h3 id=\"virus\"><a class=\"anchor\" href=\"#virus\">Virus</a></h3>\n<ol>\n<li>All computers connected to an institution's network must have a standard antivirus program installed, scheduled to run at regular intervals. In addition, antivirus software and virus definition files should always be up to date;</li>\n<li>All computers should be configured to schedule regular updates from the network services' centralized antivirus servers;</li>\n<li>All data files and programs that have been transmitted electronically to a computer at another location, internal or external, must be scanned for viruses immediately upon receipt;</li>\n<li>All storage devices, such as USB sticks and external hard drives, are a potential source of computer viruses. Therefore, they should be checked for virus infection before using them on a computer or network server;</li>\n<li>Network computers and servers should never boot from an external device received from an external source;</li>\n<li>Virus protection software must be loaded on each computer and network server as a resident program to constantly monitor possible virus attacks and prevent them from infecting the network;</li>\n</ol>\n<h3 id=\"backup\"><a class=\"anchor\" href=\"#backup\">Backup</a></h3>\n<p>Companies should periodically do backup of data in order to prevent them from data deletion or data encryption in hacker attacks.</p>\n<blockquote>\n<p><strong>Attention !</strong></p>\n<p>It is important for companies to test backups to ensure that saved data can be restored and made available when needed.</p>\n</blockquote>\n<h2 id=\"cryptography-and-digital-certificates\"><a class=\"anchor\" href=\"#cryptography-and-digital-certificates\">Cryptography and Digital Certificates</a></h2>\n<p><strong>Do you want to ensure data integrity?</strong> Use hash functions. They are suitable for ensuring data integrity, because any change made to the content of a message will cause the receiver to calculate a different hash value than the one placed on the transmission by the sender.</p>\n<p><strong>Do you want to guarantee privacy and confidentiality?</strong> Use secret-key cryptography. It is ideal for encrypting messages, providing privacy and confidentiality. The sender can generate a session key to encrypt the message and the receiver will need the same session key to decrypt it.</p>\n<p><strong>Do you want to perform the key exchange?</strong> Use public key cryptography. This is an important application of this type of cryptography. Asymmetric schemes can also be used for non-repudiation and user authentication; if the recipient can obtain the session key encrypted with the sender's private key, then only the sender could have sent the message.</p>\n<p>Main differences between them:</p>\n<p>| Symmetric key | Asymmetric key | Hash function\n|---------------|----------------|--------------\n| Uses <strong>unique key</strong> to encrypt and decrypt message. | It uses a <strong>key pair</strong>, where one key is used for encryption and the other for decryption. | <strong>It does not require any keys</strong> for encryption and decryption.\n| <strong>It is faster</strong>, but <strong>less reliable</strong> in terms of <strong>security</strong>. | <strong>It is less fast</strong>, but <strong>more reliable</strong> in terms of <strong>security</strong>. | <strong>It is less fast</strong>, but <strong>more reliable</strong> in terms of <strong>security</strong>.\n| It was introduced to quickly run <strong>cryptographic processes</strong>. | It was introduced to <strong>overcome the key exchange problem</strong> in symmetric key. | It was introduced to provide <strong>more security</strong>.\n| If for some reason the key is compromised/broken on the network, <strong>both the sender and the receiver will be lost.</strong> | There is <strong>loss</strong> only to the <strong>owner</strong>. | There is no key to compromise.\n| It's <strong>less complex</strong>. | It's <strong>more complex</strong>. | It has <strong>medium complexity</strong>.</p>\n<h3 id=\"digital-certificates\"><a class=\"anchor\" href=\"#digital-certificates\">Digital Certificates</a></h3>\n<p>The <strong>digital certificate</strong> is <strong>an electronic document</strong> that <strong>identifies people and institutions</strong>, proving identities and allowing access to computerized services that guarantee: <strong>Authenticity</strong>, <strong>Integrity</strong> and <strong>Non repudiation</strong>.</p>\n<p>The digital certificate is also used to digitally sign documents. It is intended for any person, natural or legal, and is issued by a <strong>Certification Authority (CA)</strong>. With it, you can attach the public key, also called public key infrastructure − Public Key Infrastructure (PKI) −, to a specific individual or entity. An encrypted digital certificate must contain:</p>\n<ul>\n<li>The name of the subject (the organization or certified individual);</li>\n<li>The subject's public key (used to decrypt messages and digital signatures);</li>\n<li>A serial number (to uniquely identify the certificate);</li>\n<li>An expiration date;</li>\n<li>The digital signature of the certificate issuing authority and the message.</li>\n<li>Any other relevant information.</li>\n</ul>\n<p>Digital certification in Brazil took off in 2001 when the federal government created the <strong>Brazilian Public Key Infrastructure (ICP-Brasil -- It is a hierarchical chain of trust that enables the issuance of digital certificates for the virtual identification of citizens.)</strong>, which has seen great growth since then. Certificates are used in several applications:</p>\n<ol>\n<li>Automating the provision of tax information to the Federal Revenue of Brazil;</li>\n<li>Electronic invoice;</li>\n<li>Computerization of the Judiciary;</li>\n<li>Computerization of notary services;</li>\n<li>Computerization of processes for starting a business;</li>\n<li>Computerization of medical and dental records;</li>\n<li>Government purchases through electronic auction.</li>\n</ol>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Information Security</li>\n<li><strong>Theme</strong>: Good Practices in Information Security</li>\n</ul>"
  },
  {
    "title": "Threats and Vulnerabilities to Information Security",
    "content": "<h2 id=\"concepts-and-types-of-threats-and-vulnerabilities\"><a class=\"anchor\" href=\"#concepts-and-types-of-threats-and-vulnerabilities\">Concepts and Types of Threats and Vulnerabilities</a></h2>\n<p>Institutions have their market value calculated based on their market share, products, patents, facilities, goods and information, that is, their assets. Assets can be classified as tangible, when it is possible to measure their value, and as intangible, when it is difficult or impossible to measure their value.</p>\n<p>Tangible Assets:</p>\n<ul>\n<li>Logical: They involve information and its representation in an algorithm, such as a chemical formula or software source code;</li>\n<li>Physical: Those we can touch;</li>\n<li>Human: Those that refers to the collaborators and service workers.</li>\n</ul>\n<p>The management of those assets are important to keep things working in an enterprise. For example, when Steve Jobs (fits in human asset) died, Apple titles have fallen in prices.</p>\n<p><strong>How to relate a threat and a vulnerability? Let's think of an example based on a children's drawing, the Road Runner.</strong></p>\n<p>In the animation, the coyote was trying to throw an anvil at the bird, but let's change our actors. Instead of the bird, let's imagine a soft drink, whose formula is saved on an external storage device (pen drive). In this case, the anvil is a threat against our device. To protect our pen drive, we can place it inside a super-resistant metal box. Of course, we create a protection (control) against the threat (anvil).</p>\n<p>Obviously, creating protections for everything is too much. Fires and floods can happen, but is necessary to make a study about the location to know better what have high and lower chances to occur in order to create protections against the worst threats for the target.</p>\n<h3 id=\"types-of-threats-and-vulnerabilities---how-to-prevent\"><a class=\"anchor\" href=\"#types-of-threats-and-vulnerabilities---how-to-prevent\">Types of Threats and Vulnerabilities - How to Prevent?</a></h3>\n<p>*Obs: Remembering principles - confidentiality, availability and integrity.</p>\n<ul>\n<li>Threat: Account invasion on WhatsApp; Recommendation is the use of two factor auth;</li>\n</ul>\n<p>More examples:</p>\n<p>| Security | Threat\t| Prevent Method\n|----------|--------|---------------\n| Confidentiality\t| Unauthorized access | Use of passwords\n| | Unauthorized access\t| Use of encryption\n| | Loss of backup tapes during transport\t|\n| Integrity\t| Alteration of data by unauthorized person/software/process | Use of authentication methods\n| | Data corruption | Use of hashes\n| Availability | Phenomena arising from natural causes, such as fire and floods\t| Use of backup servers and/or redundancies\n| | Denial of Service Attacks\t| Use of Redundancy Servers</p>\n<p>Or using, instead of the principles, the logical or physical definition of threat:</p>\n<p>| Security | Threat | Prevent Method\n|----------|--------|---------------\n| Physical | Phenomena arising from natural causes, such as fire and flooding | Use of backup servers and/or redundancies\n| | Backup tapes lost during transport | Use of encryption\n| Logic | Data alteration by unauthorized person/software/process | Use of authentication methods\n| | Data corruption | Use of hashes\n| | Listen on call or network traffic | Use encryption\n| | Denial of Service Attacks | Use of Redundancy Servers\n| | Unauthorized access | Use of passwords</p>\n<p>Human threats are those that were caused by humans, and non-human threats are caused by nature or infrastructure problems. Non-human threats can also be classified into threats arising from disasters or infrastructure problems. Human threats can also be classified in two different types:</p>\n<ul>\n<li>Collaborators: Those from employees or malicious people and those from people or employees who do not have adequate knowledge (poorly trained);</li>\n<li>Hackers: Those from hackers who exploit vulnerabilities to demonstrate knowledge and show off their achievement to the community; or even the simple challenge of reaching the goal, as if it were a game; or even to obtain financial gains from obtaining assets from institutions.</li>\n</ul>\n<p>Classifications of threats:</p>\n<p>| Classification type | Threat type\n|---------------------|------------\n| Regarding the type of asset involved | Related to ConfidentialityRelated to IntegrityRelated to Availability\n| As for the attack vector | PhysicalLogicHumanNot human\n| As for the phenomenon that gave rise (subclassification of non-humans) | natural disasterInfrastructure</p>\n<p>In the case of a flood in a data center, the main issue generated is availability. Depending on the controls (protections) chosen by the manager, even data integrity problems can be generated. Therefore, it is always necessary to carry out the layered approach. In this scenario, some simple controls could be developed such as:</p>\n<ul>\n<li>Contingency: development of some technique/methodology to supply the absence or failure of the data center;</li>\n<li>Contingency use process and training;</li>\n<li>Process and realization of backup copies, as well as verification of the status of these copies, including disaster simulation.</li>\n</ul>\n<h2 id=\"techniques-for-cyber-attacks\"><a class=\"anchor\" href=\"#techniques-for-cyber-attacks\">Techniques for Cyber Attacks</a></h2>\n<h3 id=\"attacks\"><a class=\"anchor\" href=\"#attacks\">Attacks</a></h3>\n<p>Cyber threats are realized through the use of techniques that typically exploit the vulnerability of a technology, process or methodology. The reasons and motivations have already been explained, but we can summarize them as the stimulus to obtain certain information (injuring confidentiality), damaging information (injuring integrity) and interrupting the functioning of a certain system (injuring availability).</p>\n<ul>\n<li>Attacks of Denial of Service (DOS): It corresponds to a type of attack that aims to make a certain system or equipment unavailable. In this type of attack, vulnerabilities in software, equipment and algorithms/protocols are exploited. Examples are pod (ping of death), syn flood, udp flood and tcp flood. These attacks exploit vulnerabilities in the implementation of some network service, operating system or protocol used;</li>\n<li>Social Engineering: Situation in which human weaknesses are used to obtain information (injure the confidentiality) of a person or organization. The most common example of this type of attack is phishing, commonly used to obtain credit card data for financial gain;</li>\n<li>Site Graffiti: Is characterized by the unauthorized alteration of a certain website on the Internet. The vulnerabilities of the portals are explored and, through this, the modifications are carried out;</li>\n<li>Botnets: Also known as a zombie network, it is a set of equipment that has suffered an attack, resulting in the control of the equipment by the hacker. Bots are similar to worms in terms of how they proliferate, but differ in that they follow orders from the command and control centers (equipment whose purpose is to orchestrate the attack, allowing the maintenance of the hacker's secrecy). Through botnets it is possible to carry out denial of service attacks, mass e-mails and many others.</li>\n</ul>\n<p>Another techniques used in cyber attacks:</p>\n<ul>\n<li>IP Spoofing: It occurs when the attacker forges his IP address, putting another value in this field, pretending to be the source of the data from another origin. It is very common for exploiting the protocol vulnerability;</li>\n<li>Pharming or DNS Cache Poisoning: It occurs when the DNS servers are attacked, aiming to change the exchange of domain names for IP addresses and, thus, targeting the victim with fake equipment and software. Exploits vulnerabilities in certain implementations and brands of equipment. It is a difficult technique to be identified by the end user;</li>\n<li>IP Session Hijacking: Occurs when the connection between the client and the server on the internet is performed through the exchange of HTTP request and response commands, for example. During this process, it is common to have a user session (HTTP Session) configured and running, in order to identify the user accessing the portal. One of the techniques used, either to break user confidentiality or to carry out an attack on the portal, is user session hijacking. Soon, the attacker captures this exchange of information and pretends to be one of the equipment. It is a technique with a certain degree of sophistication and difficult to be identified by network managers and end users;</li>\n<li>Brute Force: Occurs when passwords in information systems are encoded on the server. Coding can be performed using proprietary techniques of the system, where specific coding algorithms are developed, or through condensation functions, also known as hashing. Password crackers can use special sets of tables, known as rainbow tables, or even testing all possible combinations, called brute force. In this technique, the attacker's degree of knowledge will determine the effectiveness of the attack;</li>\n<li>Hash: Occurs when some algorithms are created using algebraic manipulations that transform the input data into a finite set of hexadecimal numbers, called the hash of the data. These manipulations prevent initial values from being retrieved from the generated data;</li>\n<li>Trashing Dumpster Diving: It occurs when searches are carried out in corporate waste in the expectation that some improper disposal has been carried out. This brings us back to the first module, where we deal with the information life cycle. If the disposal is not done properly, techniques like this allow the recovery of information straight from the trash. In many countries, there is no legislation that makes this technique illegal;</li>\n<li>Wardriving: Occurs when the search for physical locations contains an unprotected Wi-Fi signal in order to exploit the vulnerability found. In this technique, the intruder travels through public spaces looking for unprotected signs, whether on foot, by car or using drones.</li>\n</ul>\n<h3 id=\"malicious-software\"><a class=\"anchor\" href=\"#malicious-software\">Malicious Software</a></h3>\n<p>Malware is malicious software that aims to infect IT assets. In this category, there is a very large variation and with different types. Examples include advertising-related Trojan horses, misused support tools, exploits, and worms.</p>\n<p>Advertising-related viruses such as spyware (for example, applications that capture everything the user types, known as keyloggers) and adware (applications that deliver advertising to the user without his authorization) monitor the user in some way, aiming to explore the human behavioral aspect.</p>\n<p>There is also the malicious use of supporting tools such as network sniffers and port scanners. The first allows you to analyze the network traffic and the second allows you to check which are the communication ports of the transport layer protocols that are available for connection.</p>\n<h3 id=\"ransomware\"><a class=\"anchor\" href=\"#ransomware\">Ransomware</a></h3>\n<p>Malicious software, with high reproducibility power, that invades the victim's machine, encrypts his data and requests a ransom. In recent years, this type of attack has been quite frequent, with WannaCry as an emblematic case.</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Information Security</li>\n<li><strong>Theme</strong>: Threats and Vulnerabilities to Information Security</li>\n</ul>"
  },
  {
    "title": "Standards of Information Security",
    "content": "<h2 id=\"reason-and-benefits-of-the-standards-isoiec-27001-and-27002\"><a class=\"anchor\" href=\"#reason-and-benefits-of-the-standards-isoiec-27001-and-27002\">Reason and Benefits of the Standards ISO/IEC 27001 and 27002</a></h2>\n<h3 id=\"iso-standards-and-information-security\"><a class=\"anchor\" href=\"#iso-standards-and-information-security\">ISO Standards and Information Security</a></h3>\n<p>ISO - International Organization for Standardization is an entity founded in 1947, headquartered in Switzerland, which brings together national standardization bodies. Basically, work standards.</p>\n<p>ISO works alongside with International Electrotechnical Commission (IEC) for electrotechnical matters.</p>\n<p>The ISO/IEC 27000 brings principles and vocabulary that will be utilized in the standards from 27000 family.</p>\n<p>The ISO/IEC 27001 Standard (Information Technology - Information Security Management Systems - Requirements was prepared to prove requirements for establishing, implementing, maintaining and continually improving an Information Security Management System (ISMS).</p>\n<p>It is up to the top management of each organization to decide on the adoption of an Information Security Management System (ISMS).</p>\n<p><strong>What ISO/IEC 27001 is about:</strong></p>\n<ul>\n<li>An internationally recognized structured methodology dedicated to information security.</li>\n<li>A defined process for validating, implementing, maintaining and managing information security.</li>\n<li>A detailed set of controls comprised of information security best practices.</li>\n<li>Developed by companies for companies.</li>\n</ul>\n<p><strong>What it isn't about:</strong></p>\n<ul>\n<li>A technical standard.</li>\n<li>A driven product or technology.</li>\n<li>An equipment evaluation methodology.</li>\n<li>But it may require the use of equipment warranty levels.</li>\n</ul>\n<p>The version of the ISO/IEC 27001 being used here is from 2013 and is the most recent (when these studies were made). A new thing about the update in the rule from 2005 to 2013 is the alignment with the L attachment.</p>\n<p><strong>L attachment high level structure</strong>:</p>\n<ul>\n<li>Clause 1: Scope;</li>\n<li>Clause 2: Normative reference;</li>\n<li>Clause 3: Terms and definitions;</li>\n<li>Clause 4: Context of the organization;</li>\n<li>Clause 5: Leadership;</li>\n<li>Clause 6: Planning;</li>\n<li>Clause 7: Support;</li>\n<li>Clause 8: Transaction;</li>\n<li>Clause 9: Performance Assessment;</li>\n<li>Clause 10: Improvement.</li>\n</ul>\n<p>Some reasons to adopt the standard include:</p>\n<ul>\n<li>Improved effectiveness of Information Security;</li>\n<li>Market differentiation;</li>\n<li>Satisfy customers' requirements;</li>\n<li>Single standard with global acceptance;</li>\n<li>Responsibilities focused on the work team;</li>\n<li>Information Technology covers standards as well as organization, personnel and facilities;</li>\n<li>Commands and laws.</li>\n</ul>\n<p>The ISO/IEC 27001 Standard is subject to accredited certification. Some benefits of ISO/IEC 27001 certification include:</p>\n<ul>\n<li>Reduced liability due to policies and procedures not implemented or enforced;</li>\n<li>Opportunity to identify and eliminate weaknesses;</li>\n<li>Management participates in Information Security;</li>\n<li>Independent review of your ISMS;</li>\n<li>Provides security to all interested parties;</li>\n<li>Improved security awareness;</li>\n<li>Merge features with other management systems;</li>\n<li>Mechanism for measuring the success of the system.</li>\n</ul>\n<p><strong>About certificates:</strong></p>\n<ul>\n<li>Certificate: The document emitted by an organism of certification;</li>\n<li>Site: Permanent local where an organization realizes a job or service.</li>\n</ul>\n<p>The ABNT NBR ISO/IEC 27002:2013 Standard presents the best practices to be used in information security management. Its title is Code of Practice for Information Security Management.</p>\n<blockquote>\n<p>The 2013 version recommends 114 types of basic controls.</p>\n</blockquote>\n<p>Each main section contains:</p>\n<ul>\n<li>A control objective stating what is expected to be achieved;</li>\n<li>One or more controls that can be applied to achieve the control objective.</li>\n</ul>\n<p>Control definitions are structured in this way:</p>\n<p><strong>Control:</strong></p>\n<blockquote>\n<p>Defines the specific declaration of the control, to fulfill the control objective. According to ISO/IEC 27000 (2018), control is a measure that can modify the risk, whether through a process, policy, device, practice or other actions that modify the threat and/or vulnerability and, consequently, the risk.</p>\n</blockquote>\n<p><strong>Guidelines for Implementation:</strong></p>\n<blockquote>\n<p>Presents more detailed information to support implementation of the control and achieving the control objective. The guidelines may not be fully adequate or sufficient in all situations and may therefore not fully meet an organization's specific control requirements.</p>\n</blockquote>\n<p><strong>Additional Information:</strong></p>\n<blockquote>\n<p>It presents more data that can be considered, such as legal issues and normative references. If there is no additional information, this part is not shown in the control.</p>\n</blockquote>\n<p>Two words for both of the standards that are used a lot in them and become their memorable characteristic:</p>\n<ul>\n<li>For 27001 the word is: MUST;</li>\n<li>FOr 27002 the word is: SUITS (not talking about clothes).</li>\n</ul>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Information Security</li>\n<li><strong>Theme</strong>: Standards of Information Security</li>\n</ul>"
  },
  {
    "title": "Principles of Security and Cycle of Life of Information",
    "content": "<h2 id=\"security-and-information\"><a class=\"anchor\" href=\"#security-and-information\">Security and Information</a></h2>\n<h3 id=\"data-and-information\"><a class=\"anchor\" href=\"#data-and-information\">Data and Information</a></h3>\n<p>Data is like the piece of knowledge without it's context, ex: you know how much an enterprise did this month, that was about R$ 40.000 reais, but with this information, you can't tell projections about the future of this enterprise. Information, on the opposite way, is the knowledge with it's context, so you can tell the projections about the future knowing how much the enterprise is doing in his history. With the information type of data, there is a perception of the value, but with no context data there isn't.</p>\n<p>Life cycle of information:</p>\n<ul>\n<li>Creation;</li>\n<li>Transfer;</li>\n<li>Handling;</li>\n<li>Discard.</li>\n</ul>\n<p>The information should be protected in all those steps. Making use of cryptography can be very useful when dealing with security of information. There enters the symmetric encryption (uses the same key) and asymmetric encryption (uses different keys), on both cases the information will be encrypted when transferring and on the destination, the key to decrypt can be used to access the information</p>\n<p>Tip: Compact the important archives in removable media with a password.</p>\n<p>Hard Disk shredder have to be prepared for the task, because the information should be discarded well, breaking it in a lot of little pieces.</p>\n<h3 id=\"aspects-of-security-information\"><a class=\"anchor\" href=\"#aspects-of-security-information\">Aspects of Security Information</a></h3>\n<ul>\n<li>Confidentiality: Ability to access information only for those who have authorization;</li>\n<li>Integrity: Possibility of changing the information by authorized persons or systems;</li>\n<li>Availability: The ability to access information at any time by persons or systems authorized to do so;</li>\n<li>Authenticity: Ensures that the information was generated by an authorized person or system;</li>\n<li>Legality: It aligns information and/or processes with norms, ordinances, laws and any other normative documents, each in its respective sphere of attribution and scope;</li>\n<li>Non Repudiation: It relates to the fact that the issuer denies authorship of disclosed information. It is also known as irreversibility;</li>\n</ul>\n<h2 id=\"physical-security-and-access-control\"><a class=\"anchor\" href=\"#physical-security-and-access-control\">Physical Security and Access Control</a></h2>\n<h3 id=\"physical-security\"><a class=\"anchor\" href=\"#physical-security\">Physical Security</a></h3>\n<p>Imagine it as an onion with a lot of layers, each layer is a security layer. The layers are juxtaposed, allowing the vulnerability of one to be covered by others.</p>\n<p>Ex: Security cams, temperature controls, fire extinguisher, sprinkles (sometimes translated as automatic showers).</p>\n<h3 id=\"logical-security\"><a class=\"anchor\" href=\"#logical-security\">Logical Security</a></h3>\n<p>Ex: Firewall, cryptography, passwords, control access lists, digital readers, etc. Also, those mechanisms are juxtaposed.</p>\n<h3 id=\"symmetric-cryptography\"><a class=\"anchor\" href=\"#symmetric-cryptography\">Symmetric Cryptography</a></h3>\n<p>Make use of simples math functions and a unique key for encryption and decryption.</p>\n<p>| Algorithm | Size of key |\n|---|---|\n| AES (Rijnadel) | 128, 192 e 256 bits |\n| Twofish |\t128, 192 e 256 bits |\n| Serpent |\t128, 192 e 256 bits |\n| Blowfish|\t32 a 448-bits |\n| RC4 |\t40-128 bits |\n| 3DES |168 bits |\n| IDEA |\t128 bits |</p>\n<h3 id=\"asymmetric-cryptography\"><a class=\"anchor\" href=\"#asymmetric-cryptography\">Asymmetric Cryptography</a></h3>\n<p>Has a public key for decryption (will be stored in a trustable server) and a private key for encryption (will be the user key).</p>\n<h3 id=\"firewall-intrusion-detector-systems-and-vpns\"><a class=\"anchor\" href=\"#firewall-intrusion-detector-systems-and-vpns\">Firewall, Intrusion Detector Systems and VPNs</a></h3>\n<p>These controls allow the creation of security zones inside and outside the institution. The rules of firewalls can be:</p>\n<ul>\n<li>Deny as Standard: Will deny access unless it's authorized;</li>\n<li>Allow as Standard: Will allow access unless it's denied.</li>\n</ul>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Information Security</li>\n<li><strong>Theme</strong>: Principles of Security and Cycle of Life of Information</li>\n</ul>"
  },
  {
    "title": "Risk Management",
    "content": "<h2 id=\"vulnerability-threat-and-attacks\"><a class=\"anchor\" href=\"#vulnerability-threat-and-attacks\">Vulnerability, Threat, and Attacks</a></h2>\n<h3 id=\"company-assets\"><a class=\"anchor\" href=\"#company-assets\">Company Assets</a></h3>\n<p>Every company has assets that are valuable to the company. These assets can be physical, intellectual, or financial. The company needs to protect these assets from threats and attacks.</p>\n<ul>\n<li><strong>Information Assets</strong>: The company's information assets are the company's data, software, contracts, and other information.</li>\n<li><strong>Software Assets</strong>: The company's software assets are the company's software, source code, and other software.</li>\n<li><strong>Physical Assets</strong>: The company's physical assets are the company's buildings, equipment, and other physical items.</li>\n<li><strong>Services</strong>: Electricity, refrigeration, and other services are the company's services.</li>\n<li><strong>People</strong>: Qualifications, skills and experience.</li>\n<li><strong>Intangible Assets</strong>: The company's intangible assets are the company's brand, reputation, and other intangible items.</li>\n</ul>\n<h3 id=\"threats\"><a class=\"anchor\" href=\"#threats\">Threats</a></h3>\n<p>Threats are the potential for harm to the company's assets. Threats can be internal or external. Threats can be intentional or unintentional. But we can also divide threats into logical and physical.</p>\n<ul>\n<li><strong>Logical Threats</strong>: Logical threats are threats that are caused by the company's information assets. For example, a virus that infects the company's computers is a logical threat.</li>\n<li><strong>Physical Threats</strong>: Physical threats are threats that to company's physical assets. For example, a fire that destroys the company's building is a physical threat.</li>\n</ul>\n<h3 id=\"controls\"><a class=\"anchor\" href=\"#controls\">Controls</a></h3>\n<p>Controls are the company's actions to protect the company's assets from threats. Controls can be physical or logical. Controls can be preventative or detective. Controls can be manual or automated.</p>\n<p>| Threats | Vulnerabilities | Control measures |\n| --- | --- | --- |\n| Logic | Operating system issues; Application failures; Dangerous web sites. | Antivirus installation; Firewall; Access control list; Operating system update. |\n| Physics | Lack of identification of visitors to the company; Loose wires; Data center room accessible to anyone. | Installation of security cameras; Access to the room by biometric control; Raised floor against floods; lightning rod; UPS. |</p>\n<h3 id=\"incident\"><a class=\"anchor\" href=\"#incident\">Incident</a></h3>\n<p>An incident occurs when company's controls do not cover all the vulnerabilities, and then those are explored.</p>\n<h3 id=\"event\"><a class=\"anchor\" href=\"#event\">Event</a></h3>\n<p>An event is an incident that has been detected, and do not compromise the company.</p>\n<h3 id=\"impact-x-risk\"><a class=\"anchor\" href=\"#impact-x-risk\">Impact x Risk</a></h3>\n<p>Impact is the damage that an incident can cause to the company. Risk is the combination of consequences of an event/incident (including changes in circumstances) and it's probability of occurrence.</p>\n<h3 id=\"risk-management-systems-rms\"><a class=\"anchor\" href=\"#risk-management-systems-rms\">Risk Management Systems (RMS)</a></h3>\n<p>This is the set of practices and procedures used to manage risks.</p>\n<h3 id=\"information-security-management-system-isms\"><a class=\"anchor\" href=\"#information-security-management-system-isms\">Information Security Management System (ISMS)</a></h3>\n<p>According to the ABNT NBR ISO/IEC 27001 standard, the information security risk management process must meet the requirements of an ISMS.</p>\n<h3 id=\"resume\"><a class=\"anchor\" href=\"#resume\">Resume</a></h3>\n<p>To end this learning stage, we will present a summary of terms and definitions related to information security.</p>\n<ol>\n<li><strong>Control</strong>:</li>\n</ol>\n<p>(ISO/IEC 27000:2018, item 3.14) - Measure that can modify the risk through a process, policy, device, practice or other actions that modify the threat and/or vulnerability – and, consequently, the risk.</p>\n<ol start=\"2\">\n<li><strong>Threat</strong>:</li>\n</ol>\n<p>(ISO/IEC 27000:2018, item 3.74) - Potential cause of an unwanted incident, which could result in damage to a system or an organization through security breach.</p>\n<ol start=\"3\">\n<li><strong>Vulnerability</strong>:</li>\n</ol>\n<p>(ISO/IEC 27000:2018, item 3.77) - Fragility of an asset or group of assets that can be exploited by one or more threats and, consequently, compromise the security of systems or information.</p>\n<ol start=\"4\">\n<li><strong>Vulnerability analysis</strong>:</li>\n</ol>\n<p>Process of raising faults or absences in a set of protections.</p>\n<ol start=\"5\">\n<li><strong>Vulnerability assessment</strong>:</li>\n</ol>\n<p>Combination of analysis and a list of threats to assess how likely they are to occur.</p>\n<ol start=\"6\">\n<li><strong>Information security event</strong>:</li>\n</ol>\n<p>(ISO/IEC 27000:2018, item 3.30) - Identified occurrence of a network, service or system state that indicates a possible failure of the security policy or safeguards, or even a hitherto unknown situation that may become relevant in terms of security.</p>\n<ol start=\"7\">\n<li><strong>Information security incident</strong>:</li>\n</ol>\n<p>(ISO/IEC 27000:2018, item 3.31) - An unwanted or unexpected event or series of events that is likely to compromise the company's operations or threaten information security.</p>\n<ol start=\"8\">\n<li><strong>Risk</strong>:</li>\n</ol>\n<p>(ISO/IEC 27000:2018, item 3.61) - Combination of the consequences of an event (including changes in circumstances) and its associated probability of occurrence.</p>\n<ol start=\"9\">\n<li><strong>Impact</strong>:</li>\n</ol>\n<p>Undesirable change in business objectives.</p>\n<ol start=\"10\">\n<li><strong>Asset Scope</strong>:</li>\n</ol>\n<p>Defines the set of assets covered by the process.</p>\n<ol start=\"11\">\n<li><strong>Party involved</strong>:</li>\n</ol>\n<p>Individuals, groups or organizations directly affected by a risk.</p>\n<ol start=\"12\">\n<li><strong>Interested party</strong>:</li>\n</ol>\n<p>Individual or group with an interest in the performance or success of an organization.</p>\n<h2 id=\"risk-management-process\"><a class=\"anchor\" href=\"#risk-management-process\">Risk Management Process</a></h2>\n<h3 id=\"information-security-risk\"><a class=\"anchor\" href=\"#information-security-risk\">Information Security Risk</a></h3>\n<p>we need to understand how risk management (RM) processes are carried out within Information Security Management (GSI). For this, we will analyze an example.</p>\n<p>The XPTO organization has a server running a database with the following elements:</p>\n<ul>\n<li>Asset scope: Server and database.</li>\n<li>Identified vulnerabilities: Flaw in the software that can be exploited due to another flaw in the operating system.</li>\n<li>Threat: Malware coded to exploit the aforementioned vulnerabilities and steal database data.</li>\n<li>Control measure adopted: Installation of an antivirus suite.</li>\n<li>Control measures not adopted: Operating system and software update.</li>\n<li>Possible information security incident: Malware arrives via email to a user, who executes the attached file.</li>\n<li>Impacts: Theft of sensitive data and financial loss.</li>\n<li>Risk: Extreme risk.</li>\n</ul>\n<h3 id=\"risk-management\"><a class=\"anchor\" href=\"#risk-management\">Risk Management</a></h3>\n<ul>\n<li><strong>Concept</strong>: Risk management is the process that systematically and continuously identifies and deals with risks. It is one of the most important components of the GSI.</li>\n<li><strong>Functionality</strong>: To be successful, GR must be permanent, showing itself capable of identifying new vulnerabilities and threats that can affect the three pillars of information security: confidentiality, integrity and availability (CID).</li>\n</ul>\n<h3 id=\"risk-assessment\"><a class=\"anchor\" href=\"#risk-assessment\">Risk Assessment</a></h3>\n<p>Risk assessment is the process of identifying, analyzing and evaluating the risks that threaten the organization's assets. Measuring their impact and probability of occurrence.</p>\n<p>Also, after the first step, the organization must decide how to deal with the risks identified. There are four ways to deal with risks:</p>\n<ul>\n<li><strong>Accept</strong>: Accept the risk.</li>\n<li><strong>Mitigate</strong>: Reduce the impact.</li>\n<li><strong>Transfer</strong>: Transfer the risk to another party (insurance, etc.).</li>\n<li><strong>Avoid</strong>: Eliminate the risk.</li>\n</ul>\n<h3 id=\"control-or-protection-measures\"><a class=\"anchor\" href=\"#control-or-protection-measures\">Control or protection measures</a></h3>\n<p>Control or protection measures can be classified as:</p>\n<ul>\n<li><strong>Preventive</strong>: Prevents incidents from occurring.</li>\n<li><strong>Discouraging</strong>: Discourages the practice of actions.</li>\n<li><strong>Monitor</strong>: Monitors status and operation.</li>\n<li><strong>Remedial</strong>: Fixes existing crashes.</li>\n<li><strong>Recoverer</strong>: Repairs damage caused by incidents.</li>\n<li><strong>Reactive</strong>: Reacts to certain incidents.</li>\n<li><strong>Detector</strong>: Detects the occurrence of incidents.</li>\n<li><strong>Limiter</strong>: Decreases the damage done.</li>\n</ul>\n<h3 id=\"grc-governance-risk-and-compliance\"><a class=\"anchor\" href=\"#grc-governance-risk-and-compliance\">GRC (Governance, Risk and Compliance)</a></h3>\n<p>GRC is a set of practices and procedures that allow the organization to manage risks and comply with laws and regulations.</p>\n<ul>\n<li><strong>Governance</strong>: The set of practices and procedures that allow the organization to manage risks.</li>\n<li><strong>Risk</strong>: The combination of the consequences of an event (including changes in circumstances) and its associated probability of occurrence.</li>\n<li><strong>Compliance</strong>: The set of practices and procedures that allow the organization to comply with laws and regulations.</li>\n</ul>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Information Security</li>\n<li><strong>Theme</strong>: Risk Management</li>\n</ul>"
  },
  {
    "title": "Python in Other Paradigms",
    "content": "<h2 id=\"functional-language-in-python\"><a class=\"anchor\" href=\"#functional-language-in-python\">Functional Language in Python</a></h2>\n<p>In functional programming, every action performed by the program must be integrated as a function or a composition of functions, but must follow the following rules:</p>\n<ul>\n<li>Functions must be pure, that is, at any point in the program, they always produce the same result when passed the same parameters;</li>\n<li>Data must be immutable, and once a variable is defined, its value cannot be changed;</li>\n<li>Loops should not be used, but function composition or recursion should be used.</li>\n</ul>\n<p>Pure functions should't change data that is outside of it's scope.</p>\n<h3 id=\"side-effects\"><a class=\"anchor\" href=\"#side-effects\">Side Effects</a></h3>\n<p>Side effects is exactly what's it is willing to avoid here. Side effect is, for example, when you change a variable inside of the function and a global var was associated with it. Now this global var gets it's value altered and wherever you're using it, it will produce different results.</p>\n<p>The main goal of functional programming is avoid side effects.</p>\n<h3 id=\"higher-order-functions\"><a class=\"anchor\" href=\"#higher-order-functions\">Higher Order Functions</a></h3>\n<p>In functional programming, it is very common to use functions that accept other functions as parameters or that return another function. These functions are called higher order functions. Example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multiply_by(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">multiplier</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multi(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">multiplying</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    return</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multiplying </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multiplier</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  return</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main():</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  multiply_by_10 </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multiply_by</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">10</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">multiply_by_10</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"lambda-functions\"><a class=\"anchor\" href=\"#lambda-functions\">Lambda Functions</a></h3>\n<p>Python has support for lambda functions (anonymous functions). These are defined without identifier (or name) and are usually used as arguments to other (higher order) functions.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># Consider the function to multiply two numbers below:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multiply(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">a</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\"> b</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  return</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a</span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">b</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># The equivalent lambda function is:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">lambda</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\"> a</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\"> b</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">: a</span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">b</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"dont-use-loops\"><a class=\"anchor\" href=\"#dont-use-loops\">Don't Use Loops</a></h3>\n<p>Internal functions or recursion can be used instead of for or while loops. Most common Internal functions are map and filter.</p>\n<h4 id=\"filter\"><a class=\"anchor\" href=\"#filter\">Filter</a></h4>\n<p>It is used to filter elements of an iterable (list, tuple, dictionaries, etc.). The filter is performed using a function, which must be able to return true or false (true or false) for each element of the iterable.</p>\n<h4 id=\"maps\"><a class=\"anchor\" href=\"#maps\">Maps</a></h4>\n<p>It is used to iterate through elements of a list and produce a result for each element, returning that way a new list. The new lists value will depend on the function passed, which must be able to return a value for each element of the iterable.</p>\n<p>For both internal function cases, is a good approach to use lambda functions since it'll use less code and the declaration is simple.</p>\n<h2 id=\"concurrent-programming\"><a class=\"anchor\" href=\"#concurrent-programming\">Concurrent Programming</a></h2>\n<h3 id=\"concept\"><a class=\"anchor\" href=\"#concept\">Concept</a></h3>\n<p>It is possible to compress a file and continue using the word processor, even on a single-core processor, as the processor divides the usage time between the processes of these two applications. That is: these two applications run concurrently.</p>\n<p>While the competition doesn't necessarily need more than one core, it can benefit from having more of them, as the processes don't need to share processor time.</p>\n<p><strong>Parallelism</strong> is a technique to allow programs to run faster by performing multiple operations at the same time. It requires multiple machines or a processor with more than one core. It is also possible to perform parallelism on video cards.</p>\n<h3 id=\"threads-and-processes\"><a class=\"anchor\" href=\"#threads-and-processes\">Threads and Processes</a></h3>\n<p><strong>Threads</strong> are the smallest unit of execution in a program. They are parts of a process. If threads belong to the same process, they share the same memory space and can access the data in an transparent way.</p>\n<p><strong>Processes</strong> are, in other hand, an instance of a program. Each process of a program can execute in different cores of a processor.</p>\n<h3 id=\"gil\"><a class=\"anchor\" href=\"#gil\">GIL</a></h3>\n<p>Before we talk about each approach in Python, let's talk about the global interpreter lock (GIL). In CPython, GIL exists to protect access to language objects.</p>\n<blockquote>\n<p>In practice, for the same process, the GIL only allows executing one thread at a time, that is, they do not execute in parallel, but concurrently. Without the GIL “lock”, a simple variable assignment operation could generate inconsistent data if two threads assigned a value to the same variable at the same time.</p>\n</blockquote>\n<p>For the processes, in turn, the operation is different. For each, we have a separate GIL.</p>\n<p>Multiple processes can run in parallel, while multiple threads (of the same process) can run concurrently.</p>\n<h3 id=\"what-are-threads-for-in-python\"><a class=\"anchor\" href=\"#what-are-threads-for-in-python\">What are threads for in Python?</a></h3>\n<p>Normally, we use a thread for graphical interface, database access, network access, etc., because the program cannot stop, or the interface freezes, while we wait to download a file, for example.</p>\n<h3 id=\"performance\"><a class=\"anchor\" href=\"#performance\">Performance</a></h3>\n<p>When we have a program that needs a lot of processor resources and we have a way to parallelize our program, we must choose to create multiple processes.</p>\n<p>Creating new processes can be slow and memory intensive, while creating threads is faster and consumes less memory.</p>\n<h3 id=\"creating-threads-and-processes-in-python\"><a class=\"anchor\" href=\"#creating-threads-and-processes-in-python\">Creating Threads and Processes in Python</a></h3>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> threading </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Thread</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multiprocessing </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Process</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> function_a(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(name)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main():</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  t </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Thread</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(target</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">function_a, args</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"My Thread\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  t</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">start</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  p </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Process</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(target</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">function_a, args</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"My Process\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  p</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">start</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> __name__</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '__main__'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  main</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"lock\"><a class=\"anchor\" href=\"#lock\">Lock</a></h3>\n<p>Imagine that we have a function that will increase a list of integers in 1000 new positions and increment it's value. Now, we execute this function in multiple threads. The result expected is to have a list with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1000</mn><mo>⋅</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">1000 \\cdot 10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1000</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span></span></span></span> length. But the result is different.</p>\n<p>GIL will guarantee that only one thread will be executed at a time, but it doesn't prevent this situation. For GIL, append is an atomic operation, so it is executed in safety and it's executions can't be stopped. But increment isn't atomic as it will read and write.</p>\n<p>That's called <strong>running condition</strong>. To avoid this, we can use a lock. Such an object has only two states: locked and unlocked. When created, it is in an unlocked state. This object has two methods: acquire and release.</p>\n<p>When in the unlocked state, the acquire changes its state to locked and returns immediately. When in the locked state, acquire blocks execution until another thread calls the release method and unlocks the object.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> threading </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Thread</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Lock</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> function_a(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">name</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\"> lock</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  lock</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">acquire</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(name)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  lock</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">release</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main():</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  lock </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Lock</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  t </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Thread</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(target</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">function_a, args</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"My Thread\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, lock))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  t</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">start</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> __name__</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '__main__'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  main</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"sharing-values-between-processes\"><a class=\"anchor\" href=\"#sharing-values-between-processes\">Sharing Values Between Processes</a></h3>\n<p>We can use Value class from multiprocessing module to share values between processes.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> multiprocessing </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Process</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Value</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> function_a(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">value</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  value</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">value </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main():</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  value </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Value</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'i'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> # i is the type of the value and 0 is the initial value</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  p </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Process</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(target</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">function_a, args</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(value,))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  p</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">start</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  p</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">join</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(value.value)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> __name__</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '__main__'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  main</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"web-development-with-python\"><a class=\"anchor\" href=\"#web-development-with-python\">Web Development with Python</a></h2>\n<p>Python can be used to develop web applications. For this purpose, we can use frameworks. There are two types of frameworks in this case: full-stack and non-full-stack. The main full-stack framework is Django, and for non-full-stack frameworks we have Flask and CherryPy.</p>\n<h3 id=\"flask\"><a class=\"anchor\" href=\"#flask\">Flask</a></h3>\n<p>Flask is a microframework for Python. It is very simple and easy to use.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> flask </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Flask</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">app </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Flask</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">__name__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">@app</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">route</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'/'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> hello_world():</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  return</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"Hello world.\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> __name__</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '__main__'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  app</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">run</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<p>In the first line, we import the flask class, which is the framework's main class. It is from an instance of this class that we will create our web application. In line 2, an instance of the flask class is created, where we pass <strong>name</strong> as an argument so that Flask can locate, in the application, static files, such as css and javascript, and template files (templates), if applicable.</p>\n<p>The decorator @app.route('/') is used to define the route of the application. In this case, the route is the root of the application. The function hello_world() is the function that will be executed when the route is accessed. The function associated to a route should return something.</p>\n<h3 id=\"route-parameters\"><a class=\"anchor\" href=\"#route-parameters\">Route Parameters</a></h3>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> flask </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Flask</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">app </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Flask</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">__name__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">@app</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">route</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'/user/'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">@app</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">route</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'/user/&#x3C;username>'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> show_user_profile(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">username</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Default'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  return</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> 'User </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">%s</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> %</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> username</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> __name__</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '__main__'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  app</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">run</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<p>We define two routes for the same function. The first route is the root of the application, and the second route is the root of the application followed by a parameter. The parameter is passed to the function as an argument. If the parameter is not passed, the function will use the default value.</p>\n<h3 id=\"http-methods\"><a class=\"anchor\" href=\"#http-methods\">HTTP Methods</a></h3>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> flask </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Flask</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">app </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Flask</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">__name__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">@app</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">route</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'/login'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, methods</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'GET'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'POST'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">])</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> login():</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> request</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">method </span><span style=\"color:#F97583;--shiki-dark:#F97583\">==</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> 'POST'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    return</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"POST\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  else</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    return</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"GET\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> __name__</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> '__main__'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  app</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">run</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"models\"><a class=\"anchor\" href=\"#models\">Models</a></h3>\n<p>Models are html pages with steroids. We can use delimiters to insert dynamic content in the page. The delimiters are {{ }} and {% %}.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;!</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">DOCTYPE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> html></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">html</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">head</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">title</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">>My Page&#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">title</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">head</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">body</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">h1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">>My Page&#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">h1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">p</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">>My name is {{ name }}.&#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">p</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    {% if name == 'John' %}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">p</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">>My name is John.&#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">p</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    {% else %}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      &#x3C;</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">p</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">>My name is not John.&#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">p</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    {% endif %}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  &#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">body</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">&#x3C;/</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">html</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">></span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"data-science-with-python\"><a class=\"anchor\" href=\"#data-science-with-python\">Data Science with Python</a></h2>\n<h3 id=\"kdd\"><a class=\"anchor\" href=\"#kdd\">KDD</a></h3>\n<p>KDD (Knowledge Discovery in Databases) by Fayyad, 1996. p. - “KDD is a multi-step, non-trivial, interactive and iterative process for identifying understandable, valid, new and potentially useful patterns from large datasets”</p>\n<p>This process, also called data mining, is composed of the following steps: preprocessing, data mining, and post-processing.</p>\n<h3 id=\"preprocessing\"><a class=\"anchor\" href=\"#preprocessing\">Preprocessing</a></h3>\n<p>This step is responsible for select, prepare and transform the data that will be used by the mining algorithms. Some steps of this process are:</p>\n<ul>\n<li><strong>Collect</strong>;</li>\n<li><strong>Integrate</strong>;</li>\n<li><strong>Attribute Construction</strong>;</li>\n<li><strong>Data Cleaning</strong>;</li>\n<li><strong>Data Splitting</strong>: train and test;</li>\n</ul>\n<h3 id=\"data-mining\"><a class=\"anchor\" href=\"#data-mining\">Data Mining</a></h3>\n<p>For Hand, 2001. p.6 - \"Data mining is the analysis of (almost always large) observed datasets to discover hidden relationships and to consolidate the data in such a way that they are intelligible and useful to their owners.\"</p>\n<p>This step is the most important one, since it is responsible for finding the hidden patterns in the data.</p>\n<blockquote>\n<p>Mining algorithms can be classified as supervised and unsupervised. In the former, the algorithms “learn” based on the values that each piece of data already has. Algorithms are trained (tuned) by applying a function and comparing the result with existing values.</p>\n<p>In unsupervised cases, the data were not previously classified and the algorithms try to extract some pattern by themselves.</p>\n</blockquote>\n<p>Unsupervised:\nAssociation rules One of the most used data mining techniques for e-commerce, whose objective is to find rules for products purchased in the same transaction. That is, the presence of a product in a set implies the presence of other products in another set; with this, shopping sites send us additional shopping suggestions, based on what we are buying.\nGrouping It brings together, in the same group, objects from a collection that maintain some degree of affinity. A function is used to maximize the similarity of objects of the same group and minimize between elements of other groups.\nSupervised:\nClassification Aims to discover a function capable of mapping (classifying) an item into one of several predefined classes. If we manage to obtain the function that performs this mapping, any new occurrence can also be mapped, without the need for prior knowledge of its class.\nLinear regression It is a technique to estimate a variable from a function. Regression usually aims to find a value that was not computed initially.\n// Transform the above text into a table in markdown format, please copilot</p>\n<p>| | Unsupervised |\n| --- | --- |\n| Association rules | One of the most used data mining techniques for e-commerce, whose objective is to find rules for products purchased in the same transaction. That is, the presence of a product in a set implies the presence of other products in another set; with this, shopping sites send us additional shopping suggestions, based on what we are buying. |\n| Grouping | It brings together, in the same group, objects from a collection that maintain some degree of affinity. A function is used to maximize the similarity of objects of the same group and minimize between elements of other groups. |\n| | Supervised |\n| Classification | Aims to discover a function capable of mapping (classifying) an item into one of several predefined classes. If we manage to obtain the function that performs this mapping, any new occurrence can also be mapped, without the need for prior knowledge of its class. |\n| Linear regression | It is a technique to estimate a variable from a function. Regression usually aims to find a value that was not computed initially. |</p>\n<h3 id=\"post-processing\"><a class=\"anchor\" href=\"#post-processing\">Post-processing</a></h3>\n<p>The last stage of KDD, post-processing, aims to transform the data patterns obtained in the previous stage, in order to make them intelligible, both to the data analyst and to the specialist in the application domain (SOARES, 2007).</p>\n<h4 id=\"python-data-mining-algorithms\"><a class=\"anchor\" href=\"#python-data-mining-algorithms\">Python Data Mining Algorithms</a></h4>\n<h5 id=\"linear-regression---supervised\"><a class=\"anchor\" href=\"#linear-regression---supervised\">Linear Regression - Supervised:</a></h5>\n<p>In this example, we will use a fictitious historical series of dengue cases in a given city and, with the aid of the supervised linear regression algorithm, we will predict future cases.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> matplotlib</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">pyplot </span><span style=\"color:#F97583;--shiki-dark:#F97583\">as</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> plt</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">linear_model </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> LinearRegression</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> pandas</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">############# Preprocessing ###############</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># Collection and Integration</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">file </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> pandas</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">read_csv</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'data_dengue.csv'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">years </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> file</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">[</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'year'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">cases </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> file</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">[</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'cases'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">############## Mining #################</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">regr </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> LinearRegression</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">regr</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">fit</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(X</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">years, y</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">cases)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">future_year </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> [[</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2018</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">cases_2018 </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> rule</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">predict</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(future_year)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Cases expected for 2018 ->'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">int</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(cases_2018))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">############ Post Processing ################</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">scatter</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(years, cases, color</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'black'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">scatter</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(future_year, 2018_cases, color</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'red'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plot</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(years, regr.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">predict</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(years), color</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'blue'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">xlabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Years'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ylabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Dengue cases'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">xticks</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">([</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2018</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">])</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">yticks</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">([</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">int</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(2018_cases)])</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">show</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<h5 id=\"classification---supervised\"><a class=\"anchor\" href=\"#classification---supervised\">Classification - Supervised:</a></h5>\n<p>For this example, we will use a dataset created in 1938 and still used today: the Iris Flower dataset. It contains information on fifty samples of three different classes of iris flower (Iris setosa, Iris virginica and Iris versicolor).</p>\n<p>We will train two classification algorithms, decision tree and support vector machine (SVM) to assemble two Iris flower classifiers.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">datasets </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> load_iris</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> fetch_kddcup99</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">metrics </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> accuracy_score</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">model_selection </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> train_test_split</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">tree </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> DecisionTreeClassifier</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> export_text</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> plot_tree</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">svm </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> SVC</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">################## Preprocessing ###################</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># Collection and Integration</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">iris </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> load_iris</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">characteristics </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> iris</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">data</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">labels </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> iris</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">target</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Characteristics:\\n\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, traits[:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">])</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Labels:\\n\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, labels[:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">])</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'################################################ #########'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># Partition the data</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">carac_train</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> carac_test</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> rot_train</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> rot_test </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> train_test_split</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(characteristics, labels)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">################### Mining #####################</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">############---------- Decision tree -----------############</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">tree </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> DecisionTreeClassifier</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(max_depth</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">tree</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">fit</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(X</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">carac_train, y</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">rot_train)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">rot_predicts </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> tree</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">predict</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(test_character)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">tree_accuracy </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> accuracy_score</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(test_rot, predicted_rot)</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">############-------- Vector Machine Support ------############</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">clf </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> SVC</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">clf</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">fit</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(X</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">character_training, y</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">rot_training)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">rot_predicts_svm </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> clf</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">predict</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(test_character)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">accuracy_svm </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> accuracy_score</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(test_rot, svm_predicted_rot)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">################ Post Processing #####################</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Decision Tree Accuracy:\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">round</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(tree_accuracy, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">5</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"SVM Accuracy:\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">round</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(svm_accuracy, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">5</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'################################################ #########'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">r </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> export_text</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(tree, feature_names</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">iris[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'feature_names'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">])</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Tree structure\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(r)</span></span>\n<span class=\"line\"></span></code></pre>\n<p><strong>Tip</strong>: To separate the samples into training and testing, Scikit-Learn provides a function called train_test_split, which receives a list of characteristics as its first parameter and a list of labels as its second parameter.</p>\n<p>This function returns four new lists: <strong>Training, Features test, Training, Label test</strong>.</p>\n<h5 id=\"grouping---unsupervised\"><a class=\"anchor\" href=\"#grouping---unsupervised\">Grouping - Unsupervised:</a></h5>\n<blockquote>\n<p>The purpose of a clustering algorithm is to gather objects from a collection that maintain some degree of affinity. A function is used to maximize the similarity of objects of the same group and minimize between elements of other groups.</p>\n</blockquote>\n<p>In the next example (grouping.py script), we will use the k-medias algorithm to generate groups from the Flor de Iris dataset. However, since clustering is an unsupervised algorithm, we will not use the labels to train it. The algorithm will automatically separate the samples into groups, which will be visualized in a graph.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> matplotlib</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">pyplot </span><span style=\"color:#F97583;--shiki-dark:#F97583\">as</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> plt</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> mpl_toolkits</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">mplot3d </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Axes3D</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">cluster </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> KMeans</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> sklearn</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">datasets </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> load_iris</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">################## Preprocessing ###################</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># Collection and Integration</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">iris </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> load_iris</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">characteristics </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> iris</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">data</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">################### Mining #####################</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">groups </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> KMeans</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(n_clusters</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">3</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">groups</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">fit</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(X</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">characteristics)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">labels </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> groups</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">labels_ </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># index of the group to which each sample belongs</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">################ Post Processing #####################</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">fig </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">figure</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Axes3D</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(fig)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">set_xlabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Sepal Length'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">set_ylabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Sepal Width'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">set_zlabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Petal Length'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">scatter</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(features[:, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], characteristics[:, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], characteristics[:, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], c</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">groups.labels_, edgecolor</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'k'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">target </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> iris</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">target</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">fig </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">figure</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Axes3D</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(fig)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">set_xlabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Sepal Length'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">set_ylabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Sepal Width'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">set_zlabel</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Petal Length'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ax</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">scatter</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(features[:, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], characteristics[:, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], characteristics[:, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], c</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">target, edgecolor</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'k'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">plt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">show</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Paradigms and Python Lang</li>\n<li><strong>Theme</strong>: Python In Other Paradigms</li>\n</ul>"
  },
  {
    "title": "Structured Python",
    "content": "<h2 id=\"structures-of-decision-and-loop-in-python\"><a class=\"anchor\" href=\"#structures-of-decision-and-loop-in-python\">Structures of Decision and Loop in Python</a></h2>\n<h3 id=\"if-else\"><a class=\"anchor\" href=\"#if-else\">If Else</a></h3>\n<p>Python have type <code>bool</code>, different from C that doesn't. Python also has the <code>elif</code> structure, that C also doesn't have.</p>\n<p>If structure example in Python:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">==</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> true</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'it\\'s true'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">elif</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">==</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> false</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'it\\'s false'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">else</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'value is not from type bool'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"for\"><a class=\"anchor\" href=\"#for\">For</a></h3>\n<p>For syntax:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> item </span><span style=\"color:#F97583;--shiki-dark:#F97583\">in</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> range</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">9</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">3</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(item)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Instead of range, python also allows arrays (range is like an array btw, but only using numbers, python accepts almost any data type in arrays) and strings.</p>\n<h3 id=\"while\"><a class=\"anchor\" href=\"#while\">While</a></h3>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">word </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> input</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Insert a word: \\n '</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">while</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> word </span><span style=\"color:#F97583;--shiki-dark:#F97583\">!=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> 'stop'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  word </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> input</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'Insert \\'stop\\' word to stop: \\n '</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"break-continue-pass\"><a class=\"anchor\" href=\"#break-continue-pass\">Break, Continue, Pass</a></h3>\n<ul>\n<li>Break: The instruction <code>break</code> stop repetitions of loops;</li>\n<li>Continue: The instruction <code>continue</code> stop the current repetition, making the next execution start;</li>\n<li>Pass: Then instruction <code>pass</code> is used inside an <code>if</code> and it can pass to the next execution, example:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">in</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> range</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">11</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> i </span><span style=\"color:#F97583;--shiki-dark:#F97583\">%</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    pass</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  else</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(i)</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> # only print odd numbers</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"concepts-of-subprograms-and-their-utilization-in-python\"><a class=\"anchor\" href=\"#concepts-of-subprograms-and-their-utilization-in-python\">Concepts of Subprograms and their Utilization in Python</a></h2>\n<p>Subprograms are executed when an instruction clearly demands it's execution. Subprograms take the lead in execution and only when they finish their execution, they pass the execution again to the unit that called it.</p>\n<p>Functions in C are subprograms, as they are in Python. In Python, functions are defined by <code>def</code> keyword.</p>\n<p>Functions can receive parameters in order to execute something with the values. It can also access non local variables, and make use of no variables too. Accessing variables that aren't local make the subprogram less trustable.</p>\n<p>The subprograms can be procedures (do not return value) or functions (return value).</p>\n<p>In the majority of functional programming languages the nested subprograms are allowed and it's not different for Python, meaning in Python you can have nested functions, which is functions declared inside other functions.</p>\n<h3 id=\"static-variables-and-pile-dynamic-variables\"><a class=\"anchor\" href=\"#static-variables-and-pile-dynamic-variables\">Static Variables and Pile Dynamic Variables</a></h3>\n<ul>\n<li>Pile Dynamic Variables: They're linked to storage in the beginning of the execution of the <strong>subprogram</strong> and unlinked when the execution finishes;</li>\n<li>Static: They're linked to storage before the beginning of the execution of the <strong>program</strong> and unlinked when the program execution finishes.</li>\n</ul>\n<p>Static variables has less impact on program execution since it will not have to be allocating and freeing memory slots on every execution of <strong>subprogram</strong>.</p>\n<h3 id=\"parameters\"><a class=\"anchor\" href=\"#parameters\">Parameters</a></h3>\n<p>Can be passed by value, where it will works as a local variable of the subprogram, being initialized with the value of the real parameter, and by reference, where the subprogram receives only the address of the parameter, the reference for it.</p>\n<h3 id=\"recursion\"><a class=\"anchor\" href=\"#recursion\">Recursion</a></h3>\n<p>Basically the function calls itself. It obviously can become a problem if an control of execution isn't used, because it would execute forever.</p>\n<p>Example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># docstring of the function is what function does and Python will print this description for the function with print(help(countdown))</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> countdown(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">x</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (x </span><span style=\"color:#F97583;--shiki-dark:#F97583\">&#x3C;</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'done'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  else</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(x)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    countdown</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(x </span><span style=\"color:#F97583;--shiki-dark:#F97583\">-</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"python-libs\"><a class=\"anchor\" href=\"#python-libs\">Python Libs</a></h2>\n<p>Two steps to import and use modules in Python:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> math </span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># importing module</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">x </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> math</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">sqrt</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">5</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> # accessing and using methods from module with dot</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"python-native-modules\"><a class=\"anchor\" href=\"#python-native-modules\">Python Native Modules</a></h3>\n<ul>\n<li><strong>Math:</strong> Used for math operations;</li>\n<li><strong>Random:</strong> Used to generate pseudo random int numbers or sequences;</li>\n<li><strong>Smtplib:</strong> Used for emails, it use the <strong>SMTP</strong> or <strong>ESMTP</strong> services and can send emails to any machine in the internet, example of use:\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># importing necessary modules</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> email</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">mime</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">multipart </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> MIMEMultipart</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> email</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">mime</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">text </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> MIMEText</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> smtplib</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># creating the message object</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">msg </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> MIMEMultipart</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">text </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"Sending mail\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># parameters</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">password </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"your password\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">msg</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'from'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">]</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"your email\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">msg</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'to'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">]</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"destination email address\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">msg</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'subject'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">]</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"subject\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># message body</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">msg</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">attach</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">MIMEText</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(text, </span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'plain'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># server creation</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">server </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> smtplib</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">SMTP</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'smtp.gmail.com: 587'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">server</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">starttls</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># login</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">server</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">login</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(msg[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'from'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], password)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># sending</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">server</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">sendmail</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(msg[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'from'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], msg[</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'to'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">], msg.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">as_string</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">())</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">server</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">quit</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'message sent'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span></code></pre>\n</li>\n<li><strong>Time:</strong> Has a lot of functions for timers, time values, etc;</li>\n<li><strong>Tkinter:</strong> Python standard interface for Tk GUI toolkit. Example:\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">from</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> tkinter </span><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> *</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">mainWindow </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Tk</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">text </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Label</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(master </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\"> mainWindow, text </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"My window\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">text</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">place</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(x </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 50</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">, y </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 100</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">mainWindow</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">mainloop</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span></code></pre>\n</li>\n</ul>\n<h3 id=\"external-packages\"><a class=\"anchor\" href=\"#external-packages\">External Packages</a></h3>\n<p>Pip is the program used in Python ecosystem for installing external modules. I use <code>asdf</code> so I don't have to worry about versioning or verify installation. To add fast in <code>PATH</code>, just run <code>asdf reshim</code>.</p>\n<p>In order to use external packages, the recommended approach is to use <strong>virtual envs</strong>, that way you know exactly what external packages are being used in project and avoid confusions with global packages, etc.</p>\n<p>Examples of external modules:</p>\n<ul>\n<li>Numpy: Calculations, math operations and simulations;</li>\n<li>Pandas: Data Manipulation;</li>\n<li>Scikit-learn: Machine learning models;</li>\n<li>Matplotlib: Data Visualization;</li>\n<li>Requests: HTTP protocol communication command library;</li>\n<li>Flask: Building web applications.</li>\n</ul>\n<h2 id=\"events-in-python\"><a class=\"anchor\" href=\"#events-in-python\">Events in Python</a></h2>\n<h3 id=\"errors-and-exceptions-in-python\"><a class=\"anchor\" href=\"#errors-and-exceptions-in-python\">Errors and Exceptions in Python</a></h3>\n<p>Syntax errors are those that are discovered by the parser or analyzer.</p>\n<p>Other type for error is those that occur in execution time of the program. Examples:</p>\n<ul>\n<li>Division for 0;</li>\n<li>Accessing an improper index in a list;</li>\n<li>Variable name not attributed;</li>\n<li>Incorrect operand types error.</li>\n</ul>\n<p>Some types of exceptions in Python:</p>\n<ul>\n<li>KeyboardInterrupt: Raised when the user presses CTRL+C, the interrupt combination;</li>\n<li>OverflowError: Raised when a floating point expression evaluates to a value that is too large;</li>\n<li>ZeroDivisionError Raised when trying to divide by 0;</li>\n<li>IOError: Raised when an input/output operation fails for a related reason;</li>\n<li>IndexError: Raised when a sequential index is outside the range of valid indexes;</li>\n<li>NameError: Raised when trying to evaluate an unassigned identifier (name);</li>\n<li>TypeError: Raised when a function operation is applied to an object of the wrong type;</li>\n<li>ValueError: Raised when the operation or function has an argument with the correct type but incorrect value.</li>\n</ul>\n<p>In Python, exceptions are objects. The class <strong>Exception</strong> is derivative from <strong>BaseException</strong>, a base class for exceptions classes.</p>\n<h3 id=\"treatment-of-exceptions-and-events\"><a class=\"anchor\" href=\"#treatment-of-exceptions-and-events\">Treatment of Exceptions and Events</a></h3>\n<ul>\n<li>Try Block: In this block should be inserted the normal instructions for the program;</li>\n<li>Except Block: This block will only be executed when/if an exception occurs.</li>\n</ul>\n<p>Example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">try</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  n </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> eval</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">input</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'insert value: '</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(n)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">except</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'insert a numeric value, not text'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>It's also possible to capture exceptions by it's type. Example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">try</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  n </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> eval</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">input</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'insert value: '</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(n)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">except</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> NameError</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> # specific exception type treatment</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'value wasn\\'t inserted, right? right?'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">except</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'insert a numeric value, not text'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">else</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">  # it's executed if no one exception is thrown - optional</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">finally</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">  # it's executed independent of what occurs - optional</span></span>\n<span class=\"line\"></span></code></pre>\n<p><em>Note: At least one <code>except</code> instruction is mandatory, independent if it's specific or generic.</em></p>\n<p><em>Note: Events treatment are similar to exceptions, and the events are, for example, a click in the button of the interface.</em></p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Paradigms and Python Language</li>\n<li><strong>Theme</strong>: Structured Python</li>\n</ul>"
  },
  {
    "title": "Paradigms and Python Language",
    "content": "<h2 id=\"classifying-programming-languages\"><a class=\"anchor\" href=\"#classifying-programming-languages\">Classifying Programming Languages</a></h2>\n<p>Softwares can be classified in:</p>\n<ul>\n<li>App Software: Browsers, terminals, note taking apps, etc;</li>\n<li>Basic Software: Comprehend essential programs to the functionality of the system.</li>\n</ul>\n<p>A programming language is a basic software that allows users to create another softwares making use of it. A programming language is a formalism with a set of symbols, reserved words, commands, syntactic and semantic rules and other resources, which allow specifying instructions of a program.</p>\n<p>Programming languages were created in order to abstract the inner functionality of the computer to the programmer, and like that the programmer can focus on the problems and will be easier to learn the language in higher level, with better proximity from english.</p>\n<h3 id=\"assembly\"><a class=\"anchor\" href=\"#assembly\">Assembly</a></h3>\n<p>Programmers back in the old days had to program like machines, the instructions were in binary and the only 'abstraction' that Assembly did to improve programmers life was assigning symbolic names to operations or positions in memory they used a lot.</p>\n<h3 id=\"classifying-by-level\"><a class=\"anchor\" href=\"#classifying-by-level\">Classifying by Level</a></h3>\n<p>A programming language is a formalism with a set of symbols, reserved words, commands, syntactic and semantic rules and other resources, which allow specifying instructions of a program.</p>\n<ul>\n<li>Low Level Language: Machine language is the most low level language, meaning the instructions to the processor should be written in binary. But there is also Assembly: The three lines of assembly language code below move the numeral 2 to the AX register (line 1), move the numeral 1 to the BX register (line 2), and add the contents of the 2 registers (line 3);</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>MOV AX, 0002</span></span>\n<span class=\"line\"><span>MOV BX, 0001</span></span>\n<span class=\"line\"><span>ADD AX, BX</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<ul>\n<li>High Level Language: ASP, C, C++, C#, Pascal, Delphi, Java, Javascript (bad but good), Lua (amazing), MATLAB, PHP (uh), Ruby, Rust (that one I should learn) and others. Below is the same code written in Assembly, but in Python.</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> main():</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">num1 </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">num2 </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">soma </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> num1 </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> num2</span></span>\n<span class=\"line\"></span></code></pre>\n<ul>\n<li>Other points are that for some people, C and C++ are languages of medium level, because they have, besides the proximity with human language, instructions that directly access memory and controllers, and also for some other people there is the existence of languages of highest level, those are python, ruby, elixir, javascript (enters here too I think), that are languages that delivers a lot of libraries to work with, facilitating the beginner users to learn it.</li>\n</ul>\n<h3 id=\"classifying-by-generation\"><a class=\"anchor\" href=\"#classifying-by-generation\">Classifying by Generation</a></h3>\n<ul>\n<li>First Generation: Machine language;</li>\n<li>Second Generation: Assembly uses Assembler to translate the instructions to machine language. From that generation every language will need a conversion process of the code;</li>\n<li>Third Generation: Procedural Languages. One abstracted instruction can be more than one in machine language. They commonly have variables of simple types (character, integer, real, logic) and structured (vectors, matrices, registers), conditional commands, iteration command and modular programming (functions and procedures), being aligned to structured programming. Some examples are: Fortran, BASIC, COBOL, C, PASCAL, etc. This generation have in common:\n<ul>\n<li>Store data types statically: simple, structured, and enumerated;</li>\n<li>Dynamically allocate memory through pointers, which are memory locations whose content is another memory location;</li>\n<li>Make available: sequential, conditional, repetition and unconditional branch control structures.</li>\n<li>Allow modular programming, using parameters;</li>\n<li>Operators: relational, logical and arithmetic;</li>\n<li>Emphasis on simplicity and efficiency.</li>\n</ul>\n</li>\n<li>Fourth Generation: Different from procedural languages, in this generation the programmer specifies what he wants to do in the instructions and what and how he doesn't want to do in instructions. Examples of this generation are SQL (Structured Query Language), MATLAB and PostScript;</li>\n<li>Fifth Generation: Languages in this generation are aimed to machine learning and voice recognition. Some examples are Lisp and Prolog.</li>\n</ul>\n<h2 id=\"rating-criteria-of-programming-languages\"><a class=\"anchor\" href=\"#rating-criteria-of-programming-languages\">Rating Criteria of Programming Languages</a></h2>\n<p>Util programming domains:</p>\n<ul>\n<li>Scientific apps: High precision calculus, like ENIAC which objective was ballistic calculations. The programming languages those days were machine language and Assembly. Another languages that has been created that matches it's purpose are FORTRAN and ALGOL60;</li>\n<li>Commercial apps: Supply enterprises needs. An example is COBOL;</li>\n<li>Artificial intelligence apps: Lisp and Prolog;</li>\n<li>System programming: C, C++;</li>\n<li>Web programming: JavaScript, PHP, ASP, .NET, Java, Ruby and Python;</li>\n<li>Mobile programming: Java, Kotlin and JavaScript (android), Swift, Objective-c and JavaScript (iOS).</li>\n</ul>\n<h3 id=\"evaluation-of-programming-languages\"><a class=\"anchor\" href=\"#evaluation-of-programming-languages\">Evaluation of Programming Languages</a></h3>\n<ul>\n<li>Readability: Simplicity, orthogonality, control instructions, types, data structures and syntax;</li>\n<li>Easy to write: Simplicity, orthogonality, expressiveness and abstraction support;</li>\n<li>Reliability: Type verification, exception treatment, aliasing, readability and easy to write;</li>\n<li>Price of: Training, write a program, compile program, execute program, implement the language, reliability and maintenance.</li>\n</ul>\n<p><em>Python is a language with high readability, ease of writing, and reliability. Its cost is not high, because in addition to being open source, it is easy to learn.</em></p>\n<h2 id=\"paradigms-and-their-characteristics\"><a class=\"anchor\" href=\"#paradigms-and-their-characteristics\">Paradigms and Their Characteristics</a></h2>\n<p>A paradigm groups languages with similar characteristics that emerged at the same time.</p>\n<h3 id=\"imperative-paradigm\"><a class=\"anchor\" href=\"#imperative-paradigm\">Imperative Paradigm</a></h3>\n<ul>\n<li>Structured Paradigm:\n<ul>\n<li>Do not use unconditional branches (Goto, characteristic of languages like BASIC and early versions of COBOL);</li>\n<li>Develop programs by successive refinements (top down methodology), motivating the development of routines (procedures and functions) and the vision of the program starting from the general to the particular;</li>\n<li>Develop programs using three types of structures: sequential, conditional, and repetition;</li>\n<li>Aiming at efficiency, the structured paradigm is based on the principles of Von Neumann architecture, where:\n<ul>\n<li>Programs and data reside in memory (during execution);</li>\n<li>Instructions and data travel from memory to CPU and vice versa;</li>\n<li>Results of operations travel from the CPU to memory.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Object Oriented Paradigm: Through properties such as abstraction, encapsulation, inheritance and polymorphism, greater organization, reuse and extensibility of code and, consequently, easier programs to be written and maintained. This paradigm uses concepts of structured paradigm in the specification of commands and methods, by that it is considered an evolution of structured paradigm;</li>\n<li>Concurrent Paradigm: Characterized when processes run simultaneously and compete for hardware resources (processors, disks and other peripherals), characteristics that are increasingly common in information systems. With one processor it will just compete for processor usage and resources, but with multiples processors, the processes will run in parallel (parallelism concept) and at the same time.</li>\n</ul>\n<h3 id=\"declarative-paradigm\"><a class=\"anchor\" href=\"#declarative-paradigm\">Declarative Paradigm</a></h3>\n<p>Unlike the imperative paradigm, in the declarative paradigm the programmer says what the program should do (what the task is), instead of describing how the program should do it. The programmer abstractly declares the solution to the problem.</p>\n<ul>\n<li>Functional Paradigm: It covers languages that only operate functions that take a set of values and return a value. The program boils down to function calls, which in turn can use other functions. Naturally this paradigm generates smaller programs. Example of languages are: Lisp, Haskell and ML;</li>\n<li>Logical Paradigm: The execution of programs written in logic programming languages follows an automatic deduction mechanism (inference machine), with Prolog being the most well-known language of the logical paradigm.</li>\n</ul>\n<h2 id=\"implementation-methods-of-languages\"><a class=\"anchor\" href=\"#implementation-methods-of-languages\">Implementation Methods of Languages</a></h2>\n<p>Before the execution, high level language programs should be converted to machine language. There are two ways of doing it:</p>\n<h3 id=\"translation--compilation\"><a class=\"anchor\" href=\"#translation--compilation\">Translation / Compilation</a></h3>\n<p>What most calls compilation, actually, is just one part in the process, meaning the really right name is translation. The steps in the process are: compilation, mounting, charge and connection.</p>\n<h4 id=\"compilation-steps\"><a class=\"anchor\" href=\"#compilation-steps\">Compilation Steps</a></h4>\n<ul>\n<li>Lexical Analysis: Identifies the tokens (language elements), disregards parts of the source code, such as blank spaces and comments, and generates the Symbol Table, with all these tokens, which are identifiers of variables, procedures, functions, commands, expressions, etc;</li>\n<li>Syntax Analysis: Checks if the tokens are valid syntactic structures (examples: expressions and commands), applying the grammar rules defined in the language project;</li>\n<li>Semantic Analysis: Checks if the syntactic structures make sense. For example, it checks that a variable or constant identifier is used properly, that operands and operators are compatible;</li>\n<li>Intermediate Code Generator, Code Optimizer and Code Generator: In distinct steps, generates the target code or the object code. Intermediate code might me in Assembly. The optimizer objective is reduce redundancy in intermediate code and make the object more optimized;</li>\n<li>Error Handler: At all stages there are errors: lexical, syntactic and semantic. A good compiler has good error handling;</li>\n<li>Symbol Table Manager: Keeps the symbol table updated at each compiler pass.</li>\n</ul>\n<h3 id=\"interpretation\"><a class=\"anchor\" href=\"#interpretation\">Interpretation</a></h3>\n<p>Steps:</p>\n<ol>\n<li>Get the next statement from the source code;</li>\n<li>Interpret the instruction (conversion to machine language commands);</li>\n<li>Execute instruction.</li>\n</ol>\n<p><em>Note that the procedure, described above, is very similar to that performed by computers that implement the Von Neumann machine, in the execution of an instruction, as follows:</em></p>\n<ol>\n<li>Get the next statement;</li>\n<li>CI → address of the next instruction. CI = instruction counter;</li>\n<li>RI → instruction to be executed. RI = instruction register;</li>\n<li>Decode the instruction;</li>\n<li>Execute the statement.</li>\n</ol>\n<h3 id=\"hybrid-systems\"><a class=\"anchor\" href=\"#hybrid-systems\">Hybrid Systems</a></h3>\n<p>The hybrid process of implementing a programming language combines the fast execution of translators (compilers) with the portability of interpreters. The secret is the generation of an intermediate code that is more easily interpretable, but not tied to a platform (OS/Hardware).</p>\n<h4 id=\"python-implementation-system\"><a class=\"anchor\" href=\"#python-implementation-system\">Python implementation system</a></h4>\n<p>Python uses a hybrid system, a combination of interpreter and translator (compiler). The compiler converts the Python source code into intermediate code, which runs in a virtual machine, the PVM (Python Virtual Machine).</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Paradigms and Python Language</li>\n<li><strong>Theme</strong>: Paradigms and Python Language</li>\n</ul>"
  },
  {
    "title": "Basic Python",
    "content": "<h2 id=\"python-language-and-its-characteristics\"><a class=\"anchor\" href=\"#python-language-and-its-characteristics\">Python Language and it's Characteristics</a></h2>\n<p>Created by Guido van Rossum in 1990, it's a top level language that is becoming more and more popular, mainly because of the use of it on machine learning.</p>\n<ul>\n<li>Multi-paradigm;</li>\n<li>Interactive;</li>\n<li>Hybrid Implementation Method: It uses a mixed approach to explore the advantages of the interpreter and the compiler;</li>\n<li>Portable;</li>\n<li>Extensible: Creating modules and packages is possible;</li>\n<li>Support for Databases;</li>\n<li>Support for User Interface;</li>\n<li>Can be Used as a Script Language;</li>\n<li>Support for Web Apps;</li>\n<li>Support for Commercial Apps.</li>\n</ul>\n<p>In Python, different from other languages, the blocks of code aren't delimited with '{}', instead the ':' is what defines blocks of code, ex:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">%</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> ==</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">else</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print </span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(a)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Comments can be one line (using \"//\") or multi-lines (using \"/*\" to open comment and \"*/\" to close).</p>\n<h2 id=\"variables\"><a class=\"anchor\" href=\"#variables\">Variables</a></h2>\n<p>In Python it's not necessary to define types for variables, a simple <code>a = 0</code> will work.</p>\n<p>Some words are considered reserved and cannot be used as python variable identifiers. They are: and, as, assert, break, class, continue, def, delif, else, except, exc, final, for, from, global, if, import, in, is, lambda, not, or , Print, Raise, Return, Try, While, With and Yield.</p>\n<p><em>Obs: Python has no constant variables.</em></p>\n<h3 id=\"binding\"><a class=\"anchor\" href=\"#binding\">Binding</a></h3>\n<p>We call binding the association between programming entities. See some examples:</p>\n<ul>\n<li>Variable tied to a value;</li>\n<li>Operator tied to a symbol;</li>\n<li>Identifier tied to a type.</li>\n</ul>\n<p>Each language can have the following times for binding:</p>\n<ul>\n<li>Language Project Time: The symbols are tied to the operator, such as * (multiplication), or the definition of the reserved words;</li>\n<li>Implementation Time: It usually occurs in compilers, such as the definition of range of values for a particular type;</li>\n<li>Compilation Time: Association of the variable with your type;</li>\n<li>Connection Time: The connection of several previously compiled modules, such as the call to an imported module function. In Python the connection is indicated by <code>import</code> keyword;</li>\n<li>Load Time: When the program is loaded. For example, relative memory addresses are replaced by absolute addresses;</li>\n<li>Execution Time: Values association to variables that depend on user inputs.</li>\n</ul>\n<p>The connection time can be classified as \"early binding\" or \"late binding\". The more earlier, more efficient is the execution of the program, but less is the flexibility of the available structures.</p>\n<h4 id=\"type-binding\"><a class=\"anchor\" href=\"#type-binding\">Type Binding</a></h4>\n<ul>\n<li>Static: Cannot be changed. Ex: In C, it's defined <code>int variable</code>;</li>\n<li>Dynamic: Can be changed during execution.</li>\n</ul>\n<h3 id=\"visibility-and-scope\"><a class=\"anchor\" href=\"#visibility-and-scope\">Visibility and Scope</a></h3>\n<p>Every variable it's defined within a scope. We can call a variable <code>global</code> or <code>local</code> depending on the scope.</p>\n<ul>\n<li>Global:  Variables defined in Python prompt or in modules outside of any functions can be considered global;</li>\n<li>Local: Variables defined within a scope, being the scope a function, class, whatever.</li>\n</ul>\n<p><em>Obs: Using <code>global</code> keyword inside a scope can use the global variable instead of defining other, ex:</em></p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 10</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> changing ():</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  global</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 5</span></span>\n<span class=\"line\"></span></code></pre>\n<p><em>In the example, the variable <code>a</code> will be altered to have the value 5 instead of the first defined 10.</em></p>\n<p>Types of scope:</p>\n<ul>\n<li>Static: The scope is based on the program's textual description and moorings are made in compilation time. This is the case of C, C ++ and Java, for example;</li>\n<li>Dynamic: The scope is based on the call sequence of the modules (or functions). Therefore, moorings are made at execution time.</li>\n</ul>\n<h2 id=\"data-types-and-expressions-in-python\"><a class=\"anchor\" href=\"#data-types-and-expressions-in-python\">Data Types and Expressions in Python</a></h2>\n<ul>\n<li>Numerics\n<ul>\n<li>Integers: Boolean is a subtype of int. Python allows you to use Underline (_) as a thousand. There's no limit for variable size, the limit is the available memory in the machine. In a math description, it uses elements from the integers group (Z);</li>\n<li>Floating Point Numbers: It uses elements from real numbers group (R). The dot is used to separate the integer part from the decimal part in float numbers;</li>\n<li>Complex Numbers: Is utilized to manipulate complex numbers in <code>x + yj</code> format, where <code>x</code> is the real part and <code>y</code> is the imaginary part;</li>\n</ul>\n</li>\n<li>Sequential:\n<ul>\n<li>Lists: Can be created using commas and/or [], using loops while adding values to a variable or using <code>list</code> constructor;</li>\n<li>Tuples: Can be created using commas and/or () or using <code>tuple</code> constructor. The use of '()' are optional;</li>\n<li>Range Objects: It's a range, as the name says. Can be inclusive or exclusive in loops. The code <code>range(3)</code> will create a sequence (0, 1, 2). It's possible to create more complex ranges with range(2 (initial value), 8 (limit value), 2 (increment value));</li>\n<li>Str(string): The type <code>str</code> is used for treatment of text data. There's some methods in Python for strings, like <code>split</code> (to split string), upper (turn all chars into uppercase), lower (turn all chars into lowercase);</li>\n</ul>\n</li>\n<li>Dictionaries: Allow a sequence items to receive rates defined by the user. A dictionary contains pairs of (key, value);</li>\n<li>Classes;</li>\n<li>Instances;</li>\n<li>Exceptions.</li>\n</ul>\n<p><em>Obs: There's a lot of operators for those types of data, but about precedence, in Python the programmer can define higher priority in operations by adding <code>()</code></em></p>\n<h3 id=\"boolean-operators\"><a class=\"anchor\" href=\"#boolean-operators\">Boolean Operators</a></h3>\n<ul>\n<li><code>not</code>;</li>\n<li><code>or</code>;</li>\n<li><code>and</code>.</li>\n</ul>\n<h3 id=\"type-conversions\"><a class=\"anchor\" href=\"#type-conversions\">Type Conversions</a></h3>\n<p>In an operation between two numbers, one integer and one float, the integer is converted by Python before the operation is done. Boolean values (true and false) are converted in math operations to their equivalent (1 and 0).</p>\n<p>It's also possible to explicitly convert value types using the constructor of the type, like:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">float</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> //</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> will become </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2.0</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"assignment-io-in-python\"><a class=\"anchor\" href=\"#assignment-io-in-python\">Assignment, I/O in Python</a></h2>\n<ul>\n<li>Simple Assignment: ex: <code>a = 10</code>;</li>\n<li>Multiple Assignment: ex <code>a, b = 10, 11</code>;</li>\n<li>Composite Assignment: ex1: <code>a = 10</code>, <code>a = a + 1</code>; ex2: <code>a = 10</code>, <code>a += 1</code> (operators: +=, -=, *=, /=, %=);</li>\n</ul>\n<p>Variables value can be exchanged using multiple assignment instead of creating a value to hold the last value, ex:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">b </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 2</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">temp </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">b </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> temp</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># better</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">a</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> b</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> a</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">Input</a></h3>\n<p>The <code>input()</code> is the entry method of Python, everything the user types for it will be stored as string in Python. The <code>eval()</code> method can evaluate expressions within strings, so it can be used to read the input operation as a number.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">Output</a></h3>\n<p>The method <code>format()</code> can be used to format the output showed to user. Ex:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># {} indicates where the vars will enter</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">format</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(hour, minute, second))</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># or</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F97583;--shiki-dark:#F97583\">f</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">hour</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">minute</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">:</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">second</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Also can be used to define the width of the slot, like:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:4</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:5</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">format</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">10</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">100</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># '  10,  100'</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># And to define floating point values precision</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:8.5</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">format</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">10</span><span style=\"color:#F97583;--shiki-dark:#F97583\">/</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">3</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">))</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> # 8 spaces but only 5 will be used</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># '   3.3333'</span></span>\n<span class=\"line\"></span></code></pre>\n<p>The <code>print</code> method also can output lists and sequences just by passing them to it. Example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">L </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> [</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">3</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">4</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">5</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">6</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">7</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">8</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">]</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print L</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">[::</span><span style=\"color:#F97583;--shiki-dark:#F97583\">-</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">]</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> # this will print reverse, like 8, 7, 6...</span></span>\n<span class=\"line\"></span></code></pre>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Paradigms and Python Language</li>\n<li><strong>Theme</strong>: Basic Python</li>\n</ul>"
  },
  {
    "title": "OOP With Python",
    "content": "<h2 id=\"inherit\"><a class=\"anchor\" href=\"#inherit\">Inherit</a></h2>\n<ul>\n<li>Simple Inherit: When the class inherit attributes from one superclass;</li>\n<li>Multiple Inherit: When the class inherit attributes from various superclasses;</li>\n</ul>\n<h2 id=\"polymorphism\"><a class=\"anchor\" href=\"#polymorphism\">Polymorphism</a></h2>\n<p>Polymorphism is one of the core concepts of object-oriented programming (OOP) and describes situations in which something occurs in several different forms. The same message will be executed in different ways, depending on the receiving object.</p>\n<p>In computer science, it describes the concept that you can access objects of different types through the same interface.</p>\n<p>Polymorphism happens when we reimplement a method in the subclasses of an inheritance:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">classDiagram</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  Transport &#x3C;|-- Aerial</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  Transport &#x3C;|-- Terrestrial</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  class Transport {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    -int fuel</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    -int id</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    -int speed</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    +move()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  class Aerial {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    -int path</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    +move()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  class Terrestrial {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    -int abs</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    +move()</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"></span></code></pre>\n<p>As exemplified in the previous figure, the move() behavior in an object instantiated by the Aerial class will be different from the move() in an object of the Terrestrial class. An object will be able to send a message to move, while the receiving object will decide how this will be done.</p>\n<h2 id=\"oop-code-in-python\"><a class=\"anchor\" href=\"#oop-code-in-python\">OOP Code in Python</a></h2>\n<p>Example of OOP code in Python:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">import</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> datetime</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">class</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> SavingAccount:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">   def__init__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self, repaymentTax):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">repaymentTax </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> repaymentTax</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">opening_date </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> datetime</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">datetime</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">today</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">   def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> AccountRepayment(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">self</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">balance </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">balance </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">repaymentTax</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">class</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> ClientAccount:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  def__init__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self, number, IOF, IR, investmentValue, performanceTax):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">numero </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> number</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">IOF </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> IOF</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">IR </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> IR</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> investmentValue</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> performanceTax</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> PerformanceCalc(</span><span style=\"color:#FF9800;--shiki-dark:#FF9800\">self</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">performanceTax)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue – (self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">performanceTax </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">IOF</span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">IR)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Extract</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(Self):</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(1)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    print</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F97583;--shiki-dark:#F97583\">f</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Extract of the account </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">self.number</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> is </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">{</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">self.investmentValue</span><span style=\"color:#F97583;--shiki-dark:#F97583\">:10.2f</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">}</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># NormalAccount</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">class</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> NormalAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(ClientAccount)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  def__init__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self, number, IOF, IR, investmentValue, performanceTax):</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">    super</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">().</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">__init__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(numberIOFIR, investmentValue, performanceTax)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> PerformanceCalc</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self):</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(2)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    sef</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">= (self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">performanceTax)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># MonetizedAccount</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">class</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> MonetizedAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(ClientAccount):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  def__init__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self, number, IOF, IR, investmentValue, performanceTax):</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">    super</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">().</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">__init__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(numberIOFIR, investmentValue, performanceTax)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> performanceCalc</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self):</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(3)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    sef</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">= (self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">performanceTax)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    sef</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">-</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">= self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">investmentValue </span><span style=\"color:#F97583;--shiki-dark:#F97583\">*</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">IOF</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># BankClass</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">class</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Bank</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">():</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  def__init__</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self, code, name):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">code = code</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">name = name</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">accounts = []</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> AddAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self, clientAccount):</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">accounts</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">append</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(clientAccount)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> MonthlyPerformanceCalc</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self):</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(7)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> c </span><span style=\"color:#F97583;--shiki-dark:#F97583\">in</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">accounts</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      c</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">PerformanceCalc</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> PrintAccountsExtract</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(self):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> c </span><span style=\"color:#F97583;--shiki-dark:#F97583\">in</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> self</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">accounts</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      c</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">Extract</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\"># Implementing</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">bank = Bank</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">999</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"test\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">clientAccount = ClientAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.01</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1000</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.05</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">normalAccount = NormalAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.01</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2000</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.05</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">monetizedAccount = MonetizedAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">3</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.01</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.1</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2000</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0.05</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">bank</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">AddAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(clientAccount)</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(4)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">bank</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">AddAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(normalAccount)</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(5)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">bank</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">AddAccount</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(monetizedAccount)</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(6)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">bank</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">MonthlyPerformanceCalc</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">#(7)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">bank</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">.</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">PrintAccountsExtract</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\"> #(8)</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"exceptions\"><a class=\"anchor\" href=\"#exceptions\">Exceptions</a></h2>\n<p>Like several object-oriented languages, Python allows the creation of types of exceptions to differentiate the errors generated by the language libraries from those generated by the developed applications. For this, you must use the inheritance feature to inherit new exceptions from Python's Exception class.</p>\n<p>Example:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">class</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> CustomizedException(exception):</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  pass</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  def</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> throws(): (</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">2</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    raise</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> CustomizedException</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    try</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      throws</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">()</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    except</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> CustomizedException </span><span style=\"color:#F97583;--shiki-dark:#F97583\">as</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> ex</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">:</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      print </span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"Launched exception\"</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Paradigms and Python Lang</li>\n<li><strong>Theme</strong>: OOP With Python</li>\n</ul>"
  },
  {
    "title": "Digital Logic",
    "content": "<h2 id=\"basic-operations-of-boolean-algebra\"><a class=\"anchor\" href=\"#basic-operations-of-boolean-algebra\">Basic Operations of Boolean Algebra</a></h2>\n<h3 id=\"logic-gates-and-boolean-logic\"><a class=\"anchor\" href=\"#logic-gates-and-boolean-logic\">Logic Gates and Boolean Logic</a></h3>\n<p>The operations realized by a digital computer (binary), saw as complex, can be comprehended as <strong>simple combinations of basic arithmetic and logical operations</strong>.</p>\n<ul>\n<li>Sum of bits;</li>\n<li>Complement to bits;</li>\n<li>Move bits;</li>\n<li>Compare bits.</li>\n</ul>\n<p>Those operations are implemented through electronic circuits, also known as <strong>logic gates</strong>.</p>\n<p>there are only two conditions, 1 and 0, and logic circuits use predefined voltage ranges to represent these values.</p>\n<p><strong>George Boole</strong> developed his technique from symbols and represented the expressions by letters, making their connection through connectives (algebraic symbol).</p>\n<p>Imagine that lower voltage is represented by bit 0 in it's range, passed it's range we reach high voltage, and high voltage is represented by bit 1, that way with bit 0 the equipment is off and with bit 1 the equipment is on.</p>\n<p>That was the researcher Claude Shannon, from MIT, in 1938, who proposed that boolean algebra could be used to solve problems with projects of switching circuits. From the techniques of Shannon, it was possible to apply it in analyze and development of digital electronic circuits.</p>\n<h3 id=\"truth-table\"><a class=\"anchor\" href=\"#truth-table\">Truth Table</a></h3>\n<p>It is a technique used to describe how the output of a logic circuit is dependent on the input logic levels, that is, they are tables that will contain <strong>all possible combinations of the input variables of a given function and, as a result, the output values</strong>.</p>\n<p>Representation of a circuit with two entries and one output:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">flowchart LR</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  A --> C{Circuit}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  B --> C{Circuit}</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  C{Circuit} --> X</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Now see the truth table of the circuit with two entries and one output:</p>\n<p>| A | B | X\n|---|---|---\n| 0 | 0 | 1\n| 0 | 1 | 0\n| 1 | 0 | 1\n| 1 | 1 | 0</p>\n<h3 id=\"basic-logical-functions\"><a class=\"anchor\" href=\"#basic-logical-functions\">Basic Logical Functions</a></h3>\n<p>Those are the <strong>basic logical functions</strong>:</p>\n<ul>\n<li><strong>OR</strong>;</li>\n<li><strong>AND</strong>;</li>\n<li><strong>NOT</strong>.</li>\n</ul>\n<h4 id=\"or\"><a class=\"anchor\" href=\"#or\">OR</a></h4>\n<p>When opening a car door, the light bulb in the vehicle's cabin should light up. Also when pressing the button without opening the car door. And, when closing the door, the lamp must be turned off.</p>\n<p>It means it should light up if door is open <strong>OR</strong> the button is pressed.</p>\n<p>The truth table for this situation:</p>\n<p>| A | B | X = A + B\n|---|---|----------\n| 0 | 0 | 0\n| 0 | 1 | 1\n| 1 | 0 | 1\n| 1 | 1 | 1</p>\n<p><em>Note: '+' sign here means <strong>OR</strong>.</em></p>\n<h4 id=\"and\"><a class=\"anchor\" href=\"#and\">AND</a></h4>\n<p>On an elevator, the engine will be activated only if the door is closed. The elevator will move if the door is closed <strong>AND</strong> the button is pressed.</p>\n<p>The truth table for this situation:</p>\n<p>| A | B | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>A</mi><mo>⋅</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X = A \\cdot B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>\n|---|---|----------\n| 0 | 0 | 0\n| 0 | 1 | 0\n| 1 | 0 | 0\n| 1 | 1 | 1</p>\n<p><em>Note: '<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\cdot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord\">⋅</span></span></span></span>' sign here means <strong>AND</strong>.</em></p>\n<h4 id=\"not\"><a class=\"anchor\" href=\"#not\">NOT</a></h4>\n<p>Called <strong>NOT</strong> but also known as inverter. It is the only one that can operates with one single entry.</p>\n<p>The gate's expression: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">X = \\overline A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>.</p>\n<p>The truth table for <strong>NOT</strong>:</p>\n<p>| A | X = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>\n|---|----------\n| 0 | 1\n| 1 | 0</p>\n<h4 id=\"another-logic-gates\"><a class=\"anchor\" href=\"#another-logic-gates\">Another Logic Gates</a></h4>\n<h5 id=\"nor\"><a class=\"anchor\" href=\"#nor\">NOR</a></h5>\n<p>It is possible to make the output of an <strong>OR</strong> gate the entry of the <strong>NOT</strong> gate. The gate's expression: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mover accent=\"true\"><mrow><mi>A</mi><mo>+</mo><mi>B</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">X = \\overline{A + B}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9667em;vertical-align:-0.0833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0833em;\"><span></span></span></span></span></span></span></span></span>.</p>\n<p>The truth table:</p>\n<p>| A | B | A + B | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mo>+</mo><mi>B</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{A + B}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9667em;vertical-align:-0.0833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0833em;\"><span></span></span></span></span></span></span></span></span>\n|---|---|-------|------\n| 0 | 0 | 0 | 1\n| 0 | 1 | 1 | 0\n| 1 | 0 | 1 | 0\n| 1 | 1 | 1 | 0</p>\n<h5 id=\"nand\"><a class=\"anchor\" href=\"#nand\">NAND</a></h5>\n<p>The gate's expression: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mover accent=\"true\"><mrow><mi>A</mi><mo>⋅</mo><mi>B</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">X = \\overline{A \\cdot B}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>.</p>\n<p>The gate's truth table:</p>\n<p>| A | B | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi mathvariant=\"normal\">/</mi><mi>c</mi><mi>d</mi><mi>o</mi><mi>t</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A /cdot B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mover accent=\"true\"><mrow><mi>A</mi><mo>⋅</mo><mi>B</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">X = \\overline{A \\cdot B}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>\n|---|---|-------|------\n| 0 | 0 | 0 | 1\n| 0 | 1 | 0 | 1\n| 1 | 0 | 0 | 1\n| 1 | 1 | 1 | 0</p>\n<h5 id=\"xor\"><a class=\"anchor\" href=\"#xor\">XOR</a></h5>\n<p>The <strong>XOR</strong> gate will be outputting 1 if at least one entry value is different from another. It's an particular case of the <strong>OR</strong> gate.</p>\n<p>The gate's expression: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X = A \\oplus B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.</p>\n<p>The gate's truth table:</p>\n<p>| A | B | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X = A \\oplus B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>\n|---|---|------\n| 0 | 0 | 0\n| 0 | 1 | 1\n| 1 | 0 | 1\n| 1 | 1 | 0</p>\n<h5 id=\"xnor\"><a class=\"anchor\" href=\"#xnor\">XNOR</a></h5>\n<p>Only if two values are equal. The coincidence gate.</p>\n<p>The gate's expression <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>A</mi><mo>⊙</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X = A \\odot B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.</p>\n<p>The gate's truth table:</p>\n<p>| A | B | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>A</mi><mo>⊙</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">X = A \\odot B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>\n|---|---|------\n| 0 | 0 | 1\n| 0 | 1 | 0\n| 1 | 0 | 0\n| 1 | 1 | 1</p>\n<h2 id=\"logical-gates-and-operations\"><a class=\"anchor\" href=\"#logical-gates-and-operations\">Logical Gates and Operations</a></h2>\n<h3 id=\"logical-expressions\"><a class=\"anchor\" href=\"#logical-expressions\">Logical Expressions</a></h3>\n<p>Every logical circuit will execute an boolean expression. For example:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>A</mi><mo>+</mo><mover accent=\"true\"><mi>B</mi><mo stretchy=\"true\">‾</mo></mover><mo>⋅</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">X = A + \\overline B \\cdot C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n<p>Truth table for the expression:</p>\n<p>| A | B | C | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>B</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>B</mi><mo stretchy=\"true\">‾</mo></mover><mo>⋅</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\overline B \\cdot C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mi>A</mi><mo>+</mo><mover accent=\"true\"><mi>B</mi><mo stretchy=\"true\">‾</mo></mover><mo>⋅</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">X = A + \\overline B \\cdot C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n|---|---|---|---|---|------\n| 0 | 0 | 0 | 1 | 0 | 0\n| 0 | 0 | 1 | 1 | 1 | 1\n| 0 | 1 | 0 | 0 | 0 | 0\n| 0 | 1 | 1 | 0 | 0 | 0\n| 1 | 0 | 0 | 1 | 0 | 1\n| 1 | 0 | 1 | 1 | 1 | 1\n| 1 | 1 | 0 | 0 | 0 | 1\n| 1 | 1 | 1 | 0 | 1 | 1</p>\n<h3 id=\"equivalence-of-logical-functions\"><a class=\"anchor\" href=\"#equivalence-of-logical-functions\">Equivalence of Logical Functions</a></h3>\n<p>Two logical functions are equivalent only if <strong>for the same entry, they output same values</strong>.</p>\n<p>Example: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mover accent=\"true\"><mrow><mi>A</mi><mo>⋅</mo><mi>A</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">X = \\overline{A \\cdot A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> is <strong>equivalent</strong> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>=</mo><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">Y = \\overline A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>.</p>\n<p>The truth table for the case:</p>\n<p>| A | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⋅</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A \\cdot A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>=</mo><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">Y = \\overline A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>=</mo><mover accent=\"true\"><mrow><mi>A</mi><mo>⋅</mo><mi>A</mi></mrow><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">X = \\overline{A \\cdot A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>\n|---|---|---|---\n| 0 | 0 | 1 | 1\n| 1 | 1 | 0 | 0</p>\n<h2 id=\"logical-expressions-and-diagrams\"><a class=\"anchor\" href=\"#logical-expressions-and-diagrams\">Logical Expressions and Diagrams</a></h2>\n<h3 id=\"rules-of-boolean-algebra\"><a class=\"anchor\" href=\"#rules-of-boolean-algebra\">Rules of Boolean Algebra</a></h3>\n<p>| Rule | OR | AND\n|------|----|-----\n| 1. Identity | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mn>0</mn><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X + 0 = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mn>1</mn><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X \\cdot 1 = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\n| 2. Null Element | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">X + 1 = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">X \\cdot 0 = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>\n| 3. Equivalence | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mi>X</mi><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X + X = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mi>X</mi><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X \\cdot X = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\n| 4. Complement | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">X + \\overline X = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">X \\cdot \\overline X = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>\n| 5. Involution | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">\\overline X = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">\\overline X = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\n| 6. Commutative | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mi>Y</mi><mo>=</mo><mi>Y</mi><mo>+</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X + Y = Y + X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>=</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\cdot Y = X \\cdot Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>\n| 7. Associative | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>Z</mi><mo>=</mo><mi>X</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X + Y) + Z = X + (Y + Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>Z</mi><mo>=</mo><mi>X</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>⋅</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X \\cdot Y) \\cdot Z = X \\cdot (Y \\cdot Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span>\n| 8. Distributive | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mi>Y</mi><mo>⋅</mo><mi>Z</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X + Y \\cdot Z = (X + Y) \\cdot (X + Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>+</mo><mi>X</mi><mo>⋅</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X \\cdot (Y + Z) = X \\cdot Y + X \\cdot Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>\n| 9. Absorption 1 | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X + X \\cdot Y = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X \\cdot (X + Y) = X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>\n| 10. Absorption 2 | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>⋅</mo><mi>Y</mi><mo>=</mo><mi>X</mi><mo>+</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X + \\overline X \\cdot Y = X + Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X \\cdot (\\overline X + Y) = X \\cdot Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1333em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>\n| 11. Consensus | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>+</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>⋅</mo><mi>Z</mi><mo>+</mo><mi>Y</mi><mo>⋅</mo><mi>Z</mi><mo>=</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>+</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>⋅</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X \\cdot Y + \\overline X \\cdot Z + Y \\cdot Z = X \\cdot Y + \\overline X \\cdot Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X + Y) \\cdot (\\overline X + Z) \\cdot (Y + Z) = (X + Y) \\cdot (\\overline X + Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1333em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1333em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span>\n| 12. De Morgan | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>X</mi><mo>+</mo><mi>Y</mi></mrow><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>Y</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{X + Y} = \\overline X \\cdot \\overline Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9667em;vertical-align:-0.0833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0833em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>X</mi><mo>⋅</mo><mi>Y</mi></mrow><mo stretchy=\"true\">‾</mo></mover><mo>=</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"true\">‾</mo></mover><mo>+</mo><mover accent=\"true\"><mi>Y</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{X \\cdot Y} = \\overline X + \\overline Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9667em;vertical-align:-0.0833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span></p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computer Architecture</li>\n<li><strong>Theme</strong>: Digital Logic</li>\n</ul>"
  },
  {
    "title": "Computer Basis",
    "content": "<h2 id=\"computer-evolution\"><a class=\"anchor\" href=\"#computer-evolution\">Computer Evolution</a></h2>\n<h3 id=\"turing-machine\"><a class=\"anchor\" href=\"#turing-machine\">Turing Machine</a></h3>\n<p>Turing machine was a forerunner of the computer.</p>\n<h3 id=\"computer-generations\"><a class=\"anchor\" href=\"#computer-generations\">Computer generations</a></h3>\n<ul>\n<li>Thermionic Valves: ENIAC was the first electronic computer in history and was developed by United States. It weights 30 tons;</li>\n<li>Transistors: The first transistors occupied only some milimeters, needing less energy than valves. So the computers got less big;</li>\n<li>Integrated Circuits: Silicon wafers that contain a miniaturized electronic circuit. It is what we commonly call a computer chip. It made possible that in 1970, personal computers started being created/used (by that came two big enterprises in this sector, Microsoft and Apple);</li>\n<li>Microprocessors: Videogames, LAN and Internet was the main subjects about tech in 1980. After the XX century, computers got smaller and started appearing in cars, airplanes, etc. Later, in 2010, they were already integrated in TV's and phones, called Smart TV's and smartphones.</li>\n</ul>\n<h3 id=\"today-computers\"><a class=\"anchor\" href=\"#today-computers\">Today Computers</a></h3>\n<p>Smartphones are powerful computers nowadays. The next probable advances in technology of computers might be quantum computers, since it's been harder and harder to lower the size of transistors (that's a theory that at some point it will be just impossible to do so, so they are already preparing to advance in other ways);</p>\n<h2 id=\"computer-system\"><a class=\"anchor\" href=\"#computer-system\">Computer System</a></h2>\n<h3 id=\"hardware-and-software\"><a class=\"anchor\" href=\"#hardware-and-software\">Hardware and Software</a></h3>\n<p>Hardware is the physical part and software is the logical part, they together compose the computer system.</p>\n<h3 id=\"main-hardware-components\"><a class=\"anchor\" href=\"#main-hardware-components\">Main Hardware Components</a></h3>\n<ul>\n<li>Peripherals: Where the user can communicate with the computer (like mouse, keyboard and monitor), it can send information to be processed (mouse, keyboard) or show processed information (monitor);</li>\n<li>RAM: Where The operation data being manipulated and the next steps (algorithms) are stored;</li>\n<li>Processor: Where the operations will be processed;</li>\n</ul>\n<h4 id=\"cpu\"><a class=\"anchor\" href=\"#cpu\">CPU</a></h4>\n<p>CPU clock frequency indicates the speed of the processor at executing operations. Nowadays isn't the only thing that makes a good processor, but back in past, that was the main reason that could define wether a processor is good or not.\nOverclocking is the action of customizing the CPU clock to obtain higher speeds or processing, but it can damage your processor, so it is usually practiced by experienced users.\nNowadays, CPU's have cores that are microprocessors inside the processor. That technique is called multicore. Also, using only RAM can be hard for processors, because RAM speed is a lot lower than CPU speed, so a cache memory for processors was created. So, a good amount of cache memory size can speed up the processor, so it's also a good point to look at.</p>\n<h4 id=\"ram-random-access-memory\"><a class=\"anchor\" href=\"#ram-random-access-memory\">RAM (Random Access Memory)</a></h4>\n<p>When there's no energy, the data is deleted (volatility). There's also ROM, rom is a memory that stores the BIOS (main software of each computer).</p>\n<h4 id=\"motherboard\"><a class=\"anchor\" href=\"#motherboard\">Motherboard</a></h4>\n<p>Main motherboard components are: socket for processor, peripheral bus, sockets for RAM. Main purpose of motherboard is connect the RAM, CPU and peripherals, alongside with other not necessary components of the machine by the use of bus.</p>\n<h4 id=\"secondary-memory\"><a class=\"anchor\" href=\"#secondary-memory\">Secondary Memory</a></h4>\n<p>Since RAM is volatile, the use of memories that will not be deleted when energy is down is necessary. The most used are HD's (hard disks), because they were for most time in the market and still being used. They are slow memories that make use of a disk and other technologies to write and read memory.\nNowadays hard disks are outdated and the reason is that SSD's (solid state disks), because their size are tinier but mainly because their speed are higher. Alongside with traditional SSD, it's the SSD nvme, which goes directly on the motherboards (those that have support to) and are more faster and tinier.</p>\n<h3 id=\"software\"><a class=\"anchor\" href=\"#software\">Software</a></h3>\n<ul>\n<li>Finalistics: those that are initiated by users, like web browsers, text editors, etc;</li>\n<li>System: those that allow the finalistics to run. The main System Software is the Operational System.</li>\n</ul>\n<h3 id=\"operational-system-paper\"><a class=\"anchor\" href=\"#operational-system-paper\">Operational System Paper</a></h3>\n<ul>\n<li>Serve as an abstraction layer for between hardware and finalistics software;</li>\n<li>Deal with allocation of storage and RAM;</li>\n<li>Deal with startup functions and user preferences under programs that should be prioritize or not;</li>\n<li>Inform when and what programs can have access to the processor;</li>\n<li>Choose when programs should pass the access to the processor to another programs.</li>\n</ul>\n<p>Since operational system stills a software, it needs to be loaded in memory (RAM) to be executed, that's what the BIOS (stored in ROM memory in the computer) does.</p>\n<p>Examples of operational systems:</p>\n<ul>\n<li>Unix (1970): Just a legend;</li>\n<li>MS DOS (1980): What they did to you, huh?</li>\n<li>iOS and Android (20th Century): Obviously an W for android here;</li>\n<li>Windows: Garbage;</li>\n<li>Linux: Supremacy.</li>\n</ul>\n<h3 id=\"network-comunication-with-computer-systems\"><a class=\"anchor\" href=\"#network-comunication-with-computer-systems\">Network Comunication with Computer Systems</a></h3>\n<p>In the 60's begun the idea of the web communication. ARPANET was created in the 70's by North American Defense Department. The communication was made using copper wires with communication protocols to make them understand what to talk between each other.</p>\n<ul>\n<li>Dial-up Internet: The telephone companies assumed the paper of delivering internet, so with that appeared the modem;</li>\n<li>IP Address and Router: The router is responsible for connecting the device that is connected in it with the world wide web (www), and to identify a device, the router address an IP (four numbers between 0 to 255 separated by dots) to each device connected;</li>\n<li>Search Pages, Chat Pages: With the increase of the amount of information and sites available in the www, search pages (google) alongside with chat pages/apps (like WhatsApp), became popular;</li>\n<li>Games: LAN was used to play games before, what made LAN Houses (local with LAN internet connecting the local computers) popular, nowadays it's possible to play games (only problem is latency) with anyone in any place in the world connected to the internet;</li>\n<li>Starlink: Elon Musk wants to connect the whole world with internet via satellite and provide high speeds. Isn't a thing yet, but it's promising.</li>\n</ul>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computer Architecture</li>\n<li><strong>Theme</strong>: Computer Basis</li>\n</ul>"
  },
  {
    "title": "CISC X RISC Architecture",
    "content": "<h2 id=\"cisc\"><a class=\"anchor\" href=\"#cisc\">CISC</a></h2>\n<h3 id=\"cisc-approach-on-processor-architecture\"><a class=\"anchor\" href=\"#cisc-approach-on-processor-architecture\">CISC Approach on Processor Architecture</a></h3>\n<p><strong>CISC</strong> stands for <strong>Complex Instruction Set Computer</strong>: a computer architecture that uses a large number of instructions, each of which performs a relatively complex operation. This means that the number of instructions is extensive and that the Control Unit of the processor is quite complex to decode an instruction to be executed. However, the complexity is offset by fewer memory accesses and tailored solutions for specific problems.</p>\n<h3 id=\"origin\"><a class=\"anchor\" href=\"#origin\">Origin</a></h3>\n<p>The CISC approach grew out of an evolution of processors. This acronym only began to be used after the creation of the RISC concept in the early 1980s (to be seen in the next module), when previous processors began to be called CISC retroactively.</p>\n<h3 id=\"evolution\"><a class=\"anchor\" href=\"#evolution\">Evolution</a></h3>\n<p>| Processor | Year | Instruction Size | Number of Instructions | Register Size | Addressing |\n|-----------|------|------------------|------------------------|---------------|------------|\n| IBM 370   | 1970 | 2 to 6 bytes     | 208                    | 32 bits       | R-R; R-M; M-M |\n| VAX11     | 1978 | 2 to 57 bytes    | 303                    | 32 bits       | R-R; R-M; M-M |\n| Intel 8008 | 1972 | 1 to 3 bytes    | 49                     | 8 bits        | R-R; R-M; M-M |\n| Intel 286 | 1982 | 2 to 5 bytes     | 175                    | 16 bits       | R-R; R-M; M-M |\n| Intel 386 | 1985 | 2 to 16 bytes    | 312                    | 32 bits       | R-R; R-M; M-M |</p>\n<h3 id=\"addressing\"><a class=\"anchor\" href=\"#addressing\">Addressing</a></h3>\n<ul>\n<li><strong>R-R</strong>: Registers are used for input and output.</li>\n<li><strong>R-M</strong>: When one of the elements (operands or result) must be fetched/written in memory and at least one in register.</li>\n<li><strong>M-M</strong>: When both operands must be fetched/written in memory.</li>\n</ul>\n<p>When fetching and writing in memory, the processor must perform a memory access, which is a relatively slow operation. Therefore, the fewer memory accesses, the better.</p>\n<h3 id=\"problems\"><a class=\"anchor\" href=\"#problems\">Problems</a></h3>\n<ul>\n<li><strong>Complexity</strong>: The number of instructions is extensive and the Control Unit is quite complex to decode an instruction to be executed.</li>\n<li><strong>Space</strong>: The number of instructions is extensive, which makes the Control Unit more complex and takes up more space from the registers.</li>\n<li><strong>Time</strong>: Fetching operands from memory is a relatively slow operation.</li>\n</ul>\n<blockquote>\n<p><strong>Note</strong>: This implementation is done in the processors (pipeline) in a similar way. One of the characteristics of CISC computers is the complexity of their pipelines. Some even had 31 pipeline stages.</p>\n</blockquote>\n<h3 id=\"pipelines\"><a class=\"anchor\" href=\"#pipelines\">Pipelines</a></h3>\n<p>See examples of pipeline stages on Intel microarchitectures:</p>\n<p>| Microarchitecture | Pipeline Stages |\n|-------------------|-----------------|\n| P5 (Pentium)      | 5               |\n| P6 (Pentium 3)    | 14              |\n| P6 (Pentium Pro)  | 14              |\n| NetBurst (Willamette) | 20       |\n| NetBurst (Northwood)  | 20       |\n| NetBurst (Prescott)   | 31       |\n| NetBurst (Cedar Mill) | 31       |\n| Core               | 14              |\n| Broadwell          | 14 to 19        |\n| Sandy Bridge       | 14              |\n| Silvermont         | 14 to 17        |\n| Haswell            | 14 to 19        |\n| Skylake            | 14 to 19        |\n| Kabylake           | 14 to 19        |</p>\n<blockquote>\n<p><strong>Note</strong>: The problems were not solved with pipelining. The approach still presents bottlenecks, mainly in the memory access operations.</p>\n</blockquote>\n<h2 id=\"risc\"><a class=\"anchor\" href=\"#risc\">RISC</a></h2>\n<h3 id=\"risc-approach-on-processor-architecture\"><a class=\"anchor\" href=\"#risc-approach-on-processor-architecture\">RISC Approach on Processor architecture</a></h3>\n<p><strong>RISC</strong> stands for <strong>Reduced Instruction Set Computer</strong>: This approach has few generic instructions, with which more complex operations are assembled. In addition, the instructions perform operations only on the registers, except in the case of specific instructions, which only serve to fetch or store data in memory.</p>\n<h3 id=\"problems-solved\"><a class=\"anchor\" href=\"#problems-solved\">Problems Solved</a></h3>\n<ul>\n<li><strong>Complexity</strong>: With fewer instructions, it's easier to decode an instruction to be executed.</li>\n<li><strong>Space</strong>: The number of instructions is reduced, which makes the Control Unit simpler and takes up less space from the registers.</li>\n<li><strong>Time</strong>: With RISC architecture, the number of memory accesses is reduced by only performing operations in registers.</li>\n</ul>\n<h3 id=\"origin-1\"><a class=\"anchor\" href=\"#origin-1\">Origin</a></h3>\n<p>This approach was created in the early 1980s, when trying to solve the problems of the CISC approach.</p>\n<h3 id=\"pipeline\"><a class=\"anchor\" href=\"#pipeline\">Pipeline</a></h3>\n<p>Steps of the pipeline:</p>\n<ul>\n<li><strong>SI</strong>: Search for the instruction in the instruction cache.</li>\n<li><strong>ID</strong>: Instruction decoding.</li>\n<li><strong>EXE</strong>: Execution of the instruction.</li>\n<li><strong>MA</strong>: Memory access.</li>\n<li><strong>WB</strong>: Write back.</li>\n</ul>\n<p>The execution of the instruction by clock pulse is shown below:</p>\n<p>| Clock Pulse | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 |\n|-------------|---|---|---|---|---|---|---|---|---|----|\n| Load        | <strong>SI</strong> | <strong>ID</strong> | <strong>EXE</strong> | <strong>MA</strong> | <strong>MA</strong> | <strong>WB</strong> | - | - | - | - |\n| Add         | - | <strong>SI</strong> | <strong>ID</strong> | + | + | <strong>EXE</strong> | <strong>MA</strong> | <strong>WB</strong> | - | - |\n| Store       | - | - | <strong>SI</strong> | <strong>ID</strong> | + | + | <strong>EXE</strong> | <strong>MA</strong> | <strong>MA</strong> | <strong>WB</strong> |</p>\n<blockquote>\n<p><strong>Note</strong>: The pipeline is not always executed in this order. The order of execution depends on the instruction and the microarchitecture.</p>\n</blockquote>\n<h3 id=\"example\"><a class=\"anchor\" href=\"#example\">Example</a></h3>\n<p>Here are some architectures that use the RISC approach:</p>\n<p>| Processor | Year | Addressing | Registers | Instruction Size |\n|-----------|------|------------|-----------|------------------|\n| MIPS      | 1981 | R-R        | 04 to 32  | 4 bytes          |\n| ARM/A32   | 1983 | R-R        | 15        | 4 bytes          |\n| SPARC     | 1985 | R-R        | 32        | 4 bytes          |\n| PowerPC   | 1990 | R-R        | 32        | 4 bytes          |\n|  |  | R-R |  | 4 bytes |</p>\n<p>We can see two common features of the RISC approach:</p>\n<ul>\n<li><strong>Fixed instruction size</strong>: To simplify decoding.</li>\n<li><strong>Operations with addressing</strong>: Registrar-Register.</li>\n</ul>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computer Architecture</li>\n<li><strong>Theme</strong>: CISC X RISC Architecture</li>\n</ul>"
  },
  {
    "title": "Parallel Processing",
    "content": "<h2 id=\"superscalar-processors-and-pipelines\"><a class=\"anchor\" href=\"#superscalar-processors-and-pipelines\">Superscalar Processors and Pipelines</a></h2>\n<p>Basically, I'll start with a basic concept that is important for us here.</p>\n<h3 id=\"pipeline-and-pipeline-hazards\"><a class=\"anchor\" href=\"#pipeline-and-pipeline-hazards\">Pipeline and Pipeline Hazards</a></h3>\n<p>Pipelines are a way to increase the throughput of a processor. A pipeline is a sequence of stages, each of which performs a different part of the instruction. The processor fetches the next instruction while the current instruction is being processed. The processor can execute multiple instructions at the same time, as long as they are in different stages during the clock cycle.</p>\n<p>Pipeline hazards are situations in which the processor cannot continue to execute instructions because of a dependency between instructions. There are three types of pipeline hazards:</p>\n<ul>\n<li><strong>Structural hazards</strong>: These are caused by the physical design of the processor. For example, the processor may not have enough registers to hold all the operands needed for an instruction.</li>\n<li><strong>Data hazards</strong>: These are caused by the instructions themselves. For example, an instruction may need to read a value that has not yet been written by a previous instruction.</li>\n<li><strong>Control hazards</strong>: These are caused by the program itself. For example, an instruction may need to read a value that has not yet been written by a previous instruction.</li>\n</ul>\n<h3 id=\"superscalar-processors\"><a class=\"anchor\" href=\"#superscalar-processors\">Superscalar Processors</a></h3>\n<p>Superscalar processors are processors that can execute multiple instructions per clock cycle. They are able to do this by using multiple functional units and multiple pipelines.</p>\n<p>The registers in a superscalar processor are divided into two groups: <strong>general-purpose registers and special-purpose registers</strong>. The general-purpose registers are used to hold operands and results of instructions. The special-purpose registers are used to hold control information.</p>\n<h3 id=\"superpipelining\"><a class=\"anchor\" href=\"#superpipelining\">Superpipelining</a></h3>\n<p>Superpipelining is a technique that allows a processor to execute multiple instructions per clock cycle. It is similar to superscalar processing, but it uses a single pipeline. The processor can execute multiple instructions per clock cycle by using multiple functional units.</p>\n<p>In a superpipelined processor, two stages of pipelines are executed and the functions of the stages are divided into two parts that don't overlap and each one can be executed in a half of the clock cycle.</p>\n<h2 id=\"types-of-parallel-processors\"><a class=\"anchor\" href=\"#types-of-parallel-processors\">Types of Parallel Processors</a></h2>\n<h3 id=\"flynn-taxonomy\"><a class=\"anchor\" href=\"#flynn-taxonomy\">Flynn Taxonomy</a></h3>\n<p>The Flynn taxonomy is a classification of parallel processors based on the number of instruction streams and the number of data streams. The taxonomy is named after John Flynn, who first proposed it in 1966.</p>\n<p>The taxonomy classifies processors into four categories:</p>\n<ul>\n<li><strong>Single Instruction Stream, Single Data Stream (SISD)</strong>: This is the most basic type of processor. It has a single instruction stream and a single data stream. It executes instructions sequentially, one at a time.</li>\n<li><strong>Single Instruction Stream, Multiple Data Stream (SIMD)</strong>: This type of processor has a single instruction stream and multiple data streams. It executes the same instruction on multiple data streams in parallel.</li>\n<li><strong>Multiple Instruction Stream, Single Data Stream (MISD)</strong>: This type of processor has multiple instruction streams and a single data stream. It executes different instructions on the same data stream in parallel.</li>\n<li><strong>Multiple Instruction Stream, Multiple Data Stream (MIMD)</strong>: This type of processor has multiple instruction streams and multiple data streams. It executes different instructions on different data streams in parallel.</li>\n</ul>\n<h3 id=\"symmetrical-multiprocessors\"><a class=\"anchor\" href=\"#symmetrical-multiprocessors\">Symmetrical Multiprocessors</a></h3>\n<p>Symmetrical multiprocessors (SMPs) are parallel processors that have multiple processors that are identical in function and performance. SMPs are also known as shared-memory multiprocessors.</p>\n<h3 id=\"cache-coherence-in-multiprocessors\"><a class=\"anchor\" href=\"#cache-coherence-in-multiprocessors\">Cache Coherence in Multiprocessors</a></h3>\n<p>Cache coherence is the process of keeping the caches of all the processors in a multiprocessor consistent.</p>\n<ul>\n<li><strong>UMA (Uniform Memory Access)</strong>: In a UMA system, all processors have access to the same memory. This means that all processors can access the same memory location at the same time. This is the simplest type of multiprocessor system.</li>\n<li><strong>NUMA (Non-Uniform Memory Access)</strong>: In a NUMA system, the processors have access to different parts of the memory. This means that the processors can access different memory locations at the same time. This is a more complex type of multiprocessor system. NUMA with cache coherence is called CC-NUMA.</li>\n</ul>\n<h3 id=\"memory-access-architectures\"><a class=\"anchor\" href=\"#memory-access-architectures\">Memory Access Architectures</a></h3>\n<p>Taxonomy of multiple processors and classification according to memory access. Processes organization:</p>\n<ul>\n<li><strong>SISD (Single Instruction Stream, Single Data Stream)</strong>: Single processor.</li>\n<li><strong>SIMD (Single Instruction Stream, Multiple Data Stream)</strong>: Vectorial processor and Matrix processor.</li>\n<li><strong>MISD (Multiple Instruction Stream, Single Data Stream)</strong>: Multiple processors with a single instruction stream (nothing to show).</li>\n<li><strong>MIMD (Multiple Instruction Stream, Multiple Data Stream)</strong>: Shared memory with symmetric multiprocessors (SMP) and with non-uniform memory access (NUMA). Distributed memory with clusters.</li>\n</ul>\n<h2 id=\"hardware-performance\"><a class=\"anchor\" href=\"#hardware-performance\">Hardware Performance</a></h2>\n<h3 id=\"multicore-processors\"><a class=\"anchor\" href=\"#multicore-processors\">Multicore Processors</a></h3>\n<p>Multicore processors are processors that have multiple processing cores. Each core is a separate processor that can execute instructions in parallel with the other cores. While the last generation of processors had an L1 cache for data, another for instructions and an L2 cache, multicore processors have in each processor an L1 cache and an shared L2 cache, at least.</p>\n<h3 id=\"software-performance\"><a class=\"anchor\" href=\"#software-performance\">Software Performance</a></h3>\n<p>Different analysis can be done to measure the performance of a program, starting from the measure of time for the program to run the serial parts and the parallelizable part, considering scaling overload.</p>\n<ul>\n<li><strong>Native multi-threading applications (Thread level parallelism)</strong>: They're characterized by the small number of processes with a high level of parallelism.</li>\n<li><strong>Multiple processes applications (Process level parallelism)</strong>: They're characterized by the large number of processes of a single thread (threads can be considered as flux of a process).</li>\n<li><strong>Java applications</strong>: They accept threads in a natural way, that is, the Java Virtual Machine (JVM) is a multithreaded process that allows scaling and memory management for Java applications.</li>\n<li><strong>Multiple instances applications (Application level parallelism)</strong>: Even if an individual application cannot scale to take advantage of a large number of threads, it is still possible to benefit from running multiple instances of the application in parallel.</li>\n</ul>\n<h3 id=\"multicore-organization\"><a class=\"anchor\" href=\"#multicore-organization\">Multicore Organization</a></h3>\n<ul>\n<li>Number of processors in chip;</li>\n<li>Number of levels of cache;</li>\n<li>Amount of shared memory;</li>\n<li>Use of simultaneous multithreading (SMT).</li>\n</ul>\n<h3 id=\"levels-of-cache-and-shared-cache\"><a class=\"anchor\" href=\"#levels-of-cache-and-shared-cache\">Levels of cache and shared cache</a></h3>\n<ul>\n<li><strong>Dedicated L1 cache</strong>: Each core has its own L1 cache.</li>\n<li><strong>Dedicated L2 cache</strong>: L1 caches are not shared, but in this case there enough space to have a L2 cache, like AMD Opteron or Athlon X2.</li>\n<li><strong>Shared L2 cache</strong>: An organization similar to the previous item is represented, but now the use of L2 cache is shared. The use of shared L2 caches on the chip has numerous advantages when compared to the exclusive dependence on dedicated caches, such as, for example, more efficient communication between processors and the implementation of coherent caches.</li>\n<li><strong>Shared L3 cache</strong>: The L3 cache is shared between all cores on the chip. This organization is used in the Intel Core i7.</li>\n</ul>\n<h3 id=\"smt-simultaneous-multithreading\"><a class=\"anchor\" href=\"#smt-simultaneous-multithreading\">SMT (Simultaneous Multithreading)</a></h3>\n<p>Simultaneous multithreading is a technique for improving the overall efficiency of superscalar CPUs with hardware multithreading. SMT permits multiple independent threads of execution to better use the resources provided by modern processor architectures.</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computer Architecture</li>\n<li><strong>Theme</strong>: Parallel Processing</li>\n</ul>"
  },
  {
    "title": "Hardware Components",
    "content": "<h2 id=\"basic-structure-of-a-computer\"><a class=\"anchor\" href=\"#basic-structure-of-a-computer\">Basic Structure of a Computer</a></h2>\n<p>Examples of general systems:</p>\n<ul>\n<li>Juridical System;</li>\n<li>Nervous System;</li>\n<li>Information System;</li>\n<li>Family System.</li>\n</ul>\n<p>The definition of computing can be understood as performing calculations in an orderly way or just manipulating values. Based on that, a computer system is: group of parts in concurrence to realize the objective of computing (data).</p>\n<ul>\n<li>Data: It's a group of facts or a single piece of fact that is in raw state, based in then can be stated conclusions;</li>\n<li>Information: It's derived from data, but already contextualized, so no need to state conclusions, since it's already an stated piece of knowledge.</li>\n</ul>\n<p>Data processing is a series of activities that have the objective of output information while computing data. The steps:</p>\n<ul>\n<li>Entry point: Program code and insertion of data (data);</li>\n<li>Processing: Calc and tests;</li>\n<li>Output: Print results (information).</li>\n</ul>\n<h3 id=\"programming-languages\"><a class=\"anchor\" href=\"#programming-languages\">Programming Languages</a></h3>\n<p>Two types of programming languages:</p>\n<ul>\n<li>Lower Level: Use of mnemonics instead of bits. It's directly related to CPU architecture. Ex: Assembly;</li>\n<li>High Level of Abstraction: More close of human language and more distant from mounting language. Ex: Rust, C++, Pascal, etc.</li>\n</ul>\n<h3 id=\"computing-system-organization\"><a class=\"anchor\" href=\"#computing-system-organization\">Computing System Organization</a></h3>\n<ul>\n<li>Entry Devices: peripherals (keyboard, mouse);</li>\n<li>Output Devices: also peripherals (monitor);</li>\n<li>CPU;</li>\n<li>RAM;</li>\n<li>Secondary Memory (HD, SSD, etc).</li>\n</ul>\n<p>On John von Neumann architecture, a digital machine can store it's programs in the same memory as the data, allowing like that the manipulation of programs.</p>\n<h3 id=\"bus\"><a class=\"anchor\" href=\"#bus\">Bus</a></h3>\n<p>It's a group of wires that has the function of transporting signals of information and signals of control and communication between interconnected components. Types of bus:</p>\n<ul>\n<li>(DB) Data Bus: Are bidirectional, and transport bits of data;</li>\n<li>(AB) Address Bus: Are unidirectional, and transport an address of access in memory or of one I/O device, from the CPU to the control bus;</li>\n<li>(CB) Control Bus: Have wires that send specific signals of control and communication during operations.</li>\n</ul>\n<p>The sum of all wires of the DB, AB and CB are equal to the amount of processor pins: Pins = DB + AB + CB.</p>\n<h3 id=\"processor-functions\"><a class=\"anchor\" href=\"#processor-functions\">Processor Functions</a></h3>\n<p>The processor interpret the operation and execute the step (how to properly complete the operation defined in algorithm).</p>\n<p>A machine instruction consists of the set of bits that identifies a certain primitive operation to be performed directly by the hardware, for example, 1001 00111 00001.</p>\n<p>Examples of primitive operations include:</p>\n<ul>\n<li>Arithmetic operations – Add, subtract, multiply and divide;</li>\n<li>Logical operations– AND, OR, XOR;</li>\n<li>Data input and output operations;</li>\n<li>Control deviation operations;</li>\n<li>Data movement operations.</li>\n</ul>\n<h4 id=\"instruction-cycle\"><a class=\"anchor\" href=\"#instruction-cycle\">Instruction Cycle</a></h4>\n<p><strong>Instruction sets</strong> are all possible instructions that can be interpreted and executed by a processor. For example, the Intel 8080 had 78 machine instructions, the Pentium 4 had 247;</p>\n<p><strong>Instruction cycle</strong> is a sequentially organized set of machine instructions for executing a program.</p>\n<p>The basic format of a machine instruction is based in two parts:</p>\n<ul>\n<li>Operation Code: Identify the operation to be realized;</li>\n<li>Operands: Like the args, can be many.</li>\n</ul>\n<p>Ex: ADD (O.C) A (operand), B (operand), C (operand)</p>\n<h1 id=\"subsystems-of-processing-memory-and-io\"><a class=\"anchor\" href=\"#subsystems-of-processing-memory-and-io\">Subsystems of Processing, Memory and I/O</a></h1>\n<h2 id=\"processor\"><a class=\"anchor\" href=\"#processor\">Processor</a></h2>\n<p>A CPU has two main functions:</p>\n<ul>\n<li>Processing: Actual processing of any operation;</li>\n<li>Control: Finding instructions, interpreting them, generating signals of control to execute required operations (in or out of the processor).</li>\n</ul>\n<h2 id=\"memory\"><a class=\"anchor\" href=\"#memory\">Memory</a></h2>\n<p>Types of memories:</p>\n<ul>\n<li>Registers;</li>\n<li>Caches;</li>\n<li>RAM (main memory);</li>\n<li>HD's, SSD's (secondary memory);</li>\n<li>Virtual memory.</li>\n</ul>\n<h3 id=\"registers\"><a class=\"anchor\" href=\"#registers\">Registers</a></h3>\n<ul>\n<li>Data Register: They store the data that will be processed by the calculation units, separated into units for integers and floating point numbers;</li>\n<li>Memory Buffer Register (MBR): For external data transfers;</li>\n<li>Memory Address Register (MAR): For external memory address transfers;</li>\n<li>Program Counter (PC): For searching next instruction;</li>\n<li>Instruction Register (IR): Store instruction;</li>\n<li>Segments: For storing address of segments (points to programs, data, piles, etc);</li>\n<li>Flags: Can be used to indicate the results of certain instructions.</li>\n</ul>\n<h3 id=\"cache-memory\"><a class=\"anchor\" href=\"#cache-memory\">Cache Memory</a></h3>\n<p>Stays between RAM and CPU and has low capacity but higher speed.</p>\n<h4 id=\"principle-of-locality\"><a class=\"anchor\" href=\"#principle-of-locality\">Principle of Locality</a></h4>\n<p>This principle is a programming principle that defines the mode that the instructions are executed, following the lines of the codes in sequence in the code execution, only deflect sometimes, but the sequence come back right away.</p>\n<p>This principle is separated in two parts:</p>\n<ul>\n<li>Spatial Locality: Whenever the processor performs an access to a memory address, it is likely that the next access will be to the next contiguous address;</li>\n<li>Temporal Locality: Whenever the processor performs an access to a memory address, it is likely that, in a short time, it will access the same address again.</li>\n</ul>\n<p>Every memory is divided in <strong>M bits</strong>, the value of M is different between memories, on RAM this value is 8 bits (1 byte). This minimal part is called cell. A memory that has <strong>N</strong> parts can have <strong>N</strong> addresses. This operation is:</p>\n<p>2^E = N, where <strong>E</strong> is the width of each address (like 1010110, which has 7 as his address width) and N is the amount of possible addresses.</p>\n<p>Example: if the address width is 6 bits, then the total addresses are: 2^6 = 64 addresses.</p>\n<h3 id=\"ram\"><a class=\"anchor\" href=\"#ram\">RAM</a></h3>\n<p>Random memories can be writable (RAM) and read only (ROM).</p>\n<ul>\n<li>\n<p>SRAM:</p>\n<ul>\n<li>Each bit is made up of 5 to 7 transistors;</li>\n<li>It does not require recharging, so it is faster, but takes up more space and is more expensive;</li>\n<li>Used as cache memory.</li>\n</ul>\n</li>\n<li>\n<p>DRAM:</p>\n<ul>\n<li>Each bit consists of 1 capacitor and 1 transistor;</li>\n<li>The capacitor serves to represent the value of the bit and the transistor to be used in readings/writings;</li>\n<li>As the capacitor is discharged, it is necessary to recharge periodically (refresh signal – wastes time);</li>\n<li>Used as main memory.</li>\n</ul>\n</li>\n</ul>\n<p>DRAM can be of two types, asynchronous (DRAM, FPM, BEDO, EDO), and synchronous (SDRAM, DDR, DDR2, DDR3, DDR4, DDR5).</p>\n<p>There is also a classification according to the type of memory encapsulation (module formats):</p>\n<ul>\n<li>SIMM (Single In Line Memory Module): The electrical contact on one side is the same as on the other side;</li>\n<li>DIMM (Dual In Line Memory Module): The contacts on both sides are independent.</li>\n</ul>\n<h3 id=\"io-subsystems\"><a class=\"anchor\" href=\"#io-subsystems\">I/O Subsystems</a></h3>\n<p>Every I/O component is divided in two parts, the device and the interface. Ex: (monitor - device, and video card - interface). Interface or controller has the function of match the different characteristics between the processor/memory and the device it controls while also controlling the functionality of the device.</p>\n<p>The I/O device connected needs a specific code to run properly, that code is provided by programs called drivers. Ex A: A disk driver must know about sectors, tracks, cylinders, heads, arm movement, etc. Ex B: A mouse driver must accept information saying how far it has moved and which button has been pressed.</p>\n<h1 id=\"operational-system\"><a class=\"anchor\" href=\"#operational-system\">Operational System</a></h1>\n<p>It's the intermediate between the hardware and the programs being executed. It manages the programs execution following pre-defined or user defined preferences. Also, since it's the intermediate, the S.O will deal with the compatibility issues of peripherals and abstraction of hardware for programs.</p>\n<p>The S.O is the only program executed in Kernel, pursuing complete access to hardware and any instruction execution possible.</p>\n<p>Types of Operational Systems:</p>\n<ul>\n<li>Single-programmable/single-tasking systems:</li>\n</ul>\n<p>The processor, memory and peripherals remain dedicated exclusively to the execution of a single program. An example is MS-DOS.</p>\n<ul>\n<li>Multiprogrammable/multitasking systems:</li>\n</ul>\n<p>Computational resources are shared among different users and applications. Examples are Windows, Linux, macOS.</p>\n<ul>\n<li>Systems with multiple processors:</li>\n</ul>\n<p>They have two or more CPUs (CPUs) interconnected and working together. Systems such as Linux and Windows support this. Advantages of this type of system are (scalability, availability and load balancing).</p>\n<ul>\n<li>Batch systems:</li>\n</ul>\n<p>Process routine tasks without the user's interactive presence. Example: Processing insurance company policies; sales report for a chain of stores.</p>\n<ul>\n<li>Time Sharing Systems:</li>\n</ul>\n<p>Allow multiple remote users to perform their tasks simultaneously on the computer. Example: Querying a database.</p>\n<ul>\n<li>Real-time Systems:</li>\n</ul>\n<p>They have time as a fundamental parameter. Example: Assembly line for a car.</p>\n<p>Here, see differences between <strong>tightly coupled systems</strong> and <strong>weak coupled systems</strong>:</p>\n<ul>\n<li><em>Tightly Coupled Systems</em>: There are multiple processors sharing a single physical memory and I/O devices being managed by a single OS;</li>\n<li><em>Weak Coupled Systems</em>: There are two or more computer systems connected through communication lines.</li>\n</ul>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computer Architecture</li>\n<li><strong>Theme</strong>: Hardware Components</li>\n</ul>"
  },
  {
    "title": "Data Representation",
    "content": "<h2 id=\"computer-systems\"><a class=\"anchor\" href=\"#computer-systems\">Computer Systems</a></h2>\n<h3 id=\"information-unit\"><a class=\"anchor\" href=\"#information-unit\">Information Unit</a></h3>\n<p>In a computer, as we all know, the values are represented with 0's and 1's. The group of 8 of binary values is what we call a byte. Every sequence (byte) is understandable for the computer and can be decoded, originating the characters. The lowest information unit in a computer system is the bit. We know a byte is a group of eight 0's and 1's, so a bit can only be 0 and 1.</p>\n<p>In order to convert bytes or bits to bits or bytes, we use rule of three simple. So, in general terms, from bit to byte we divide for 8 and in opposition we multiply for 8.</p>\n<ul>\n<li>An ordered group of bytes = word;</li>\n<li>An ordered group of words = registry;</li>\n<li>An ordered group of registries = archive;</li>\n<li>An ordered group of  archives = database.</li>\n</ul>\n<h3 id=\"multiples-and-submultiples\"><a class=\"anchor\" href=\"#multiples-and-submultiples\">Multiples and Submultiples</a></h3>\n<p>4.000 Kb (4.000 x 103 = 4.000.000 bits) - bit abbreviation;\n567 MB (567 x 106 = 567.000.000 bytes) - byte abbreviation;</p>\n<p><code>Obs: approximated, not real, numbers.</code></p>\n<ul>\n<li>K (kilo) = refer to values in 2¹⁰ or 10³;</li>\n<li>M (mega) = refer to values in 2²⁰ or 10⁶;</li>\n<li>G (giga) = refer to values in 2³⁰ or 10⁹;</li>\n<li>T (tera) = refer to values in 2⁴⁰ or 10¹².</li>\n</ul>\n<p>To convert from one value to another, we need to multiply (choose the power of two or then for it). And we consider the distance between each, not the value itself.</p>\n<p>Ex: to convert from G to T, we multiply with negative power since the result will be tinier than the previous value. Here's 52,9 G to T:</p>\n<ul>\n<li><em>52,9 x 10⁻³ = 0,0529 TB; see? the power is negative.</em></li>\n</ul>\n<p>On opposition, if the are converting to a lower unit abbreviation, then the power will be positive.</p>\n<h3 id=\"information-representation-in-computer\"><a class=\"anchor\" href=\"#information-representation-in-computer\">Information Representation in Computer</a></h3>\n<ul>\n<li>Ascii: The Ascii standard can make association of a binary number that contains 7 bits with each of the 128 distinct characters;</li>\n<li>Mp3, .png, etc: every file extension, format, is an encoded group of bits.</li>\n</ul>\n<h2 id=\"numeric-systems-and-arithmetic-operations\"><a class=\"anchor\" href=\"#numeric-systems-and-arithmetic-operations\">Numeric Systems and Arithmetic Operations</a></h2>\n<h3 id=\"numeric-systems\"><a class=\"anchor\" href=\"#numeric-systems\">Numeric Systems</a></h3>\n<p>Before everything:</p>\n<p>Numeric Base:</p>\n<ul>\n<li>Decimal (0, 1, 2, 3, 4, 5, 6, 7, 8, 9): Most used numeric base;</li>\n<li>Binary (0, 1): Base used by computers on data processing;</li>\n<li>Octal (0, 1, 2, 3, 4, 5, 6, 7) and Hexadecimal (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, F): Multiples of binary base.</li>\n</ul>\n<p>Now, the numeric systems:</p>\n<ul>\n<li>Positional: Every digit have a different relative value according to it's position in the number. Ex: 444 (first value is 400, second is 40 and last is 4); Ex 2: 36¹⁰ (10 is the base), can be written as 3 * 10¹ (10 = base, 1 = position) + 6 * 10⁰ (10 = base, 0 = position);</li>\n<li>Non-positional: Every digit has the same value independent of his position. Ex: X is roman numeric system is always 10 (XXX = 30, XL = 40, LX = 60);</li>\n</ul>\n<h3 id=\"operations\"><a class=\"anchor\" href=\"#operations\">Operations</a></h3>\n<ul>\n<li>Sum:\n<ul>\n<li>Base 10: Normal sum, when the sum exceeds the value goes to sum with the next result, etc;</li>\n<li>Base 2: Same applies here, 1 + 1 = 10, so it's 0 and the 1 that remains go sum with next result;</li>\n<li>Base 16: Same applies here too, but remembering matches. Comparing to decimal system, 10 = A, 11 = B, until 15 = F, then it returns to numbers, but with a little difference of values, since 16 = 10 in hexadecimal, and again when it comes to 26, it returns to 26 = 1A, 27 = 1B, etc;</li>\n<li>Base 8: Same goes here, imagine 4 + 5 = 9, but there's no 9 on base 8, so we do 9 - 8 = 1, and that 1 goes to sum with the next result.</li>\n</ul>\n</li>\n<li>Subtraction:</li>\n</ul>\n<p><code>Obs: if minuendo is bigger than subtraendo, just subtract value and write down, else if subtraendo is bigger, take one from the number in right.</code></p>\n<ul>\n<li>Base 10: Is as everyone knows;</li>\n<li>Base 16: The take one value has 16 as value. Ex: if I have 4 - 7, it's impossible, so 4 gets one value from right, so it's not 14, but 20, since we are getting 16 as value, and the result is D;</li>\n<li>Base 2:\n<ul>\n<li>0 - 1 = 1 (taking a value from the digit on the right of it);</li>\n<li>1 - 1 = 0;</li>\n<li>1 - 0 = 1;</li>\n<li>0 - 1 = 0, but:\n<ul>\n<li>The zero of this column is worth 2.</li>\n<li>All zeros on the left to the first \"number 1\" are worth 1.</li>\n<li>This \"first number 1\" is worth 0 (zero).</li>\n<li>If it happens again 0 - 1, the process will be repeated.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"conversion\"><a class=\"anchor\" href=\"#conversion\">Conversion</a></h2>\n<h3 id=\"convert-x-base-number-to-base-10-number\"><a class=\"anchor\" href=\"#convert-x-base-number-to-base-10-number\">Convert X Base Number to Base 10 Number</a></h3>\n<p>Ex. 214 in base 5: 2 * 5² + 1 * 5¹ + 4 * 5⁰; 50 + 5 + 4 = 59 in base 10.</p>\n<h3 id=\"convert-from-base-x-to-base-y\"><a class=\"anchor\" href=\"#convert-from-base-x-to-base-y\">Convert From Base X to Base Y</a></h3>\n<p>Ex. 214 in base 5; We always do the step before, so first convert to base 10, base 10 will always be the intermediate, and then convert to, let's say, base 7; We do divisions until the quotient is equal to zero, and then use the rests from right to left as the result (numbers between parenthesis are the rest):\n59 / 7 = 8 <strong>(3)</strong>; 8 / 7 = 1 <strong>(1)</strong>; 1 / 7 = 0 <strong>(1)</strong>; Result, 113 in base 7.</p>\n<h3 id=\"binary\"><a class=\"anchor\" href=\"#binary\">Binary</a></h3>\n<p>In binary, a bit that has the value of 0 should not be counted on conversion, so the number 101 in binary would be: <strong>1 * 2² + 1 * 2⁰; 4 + 1 = 5</strong>; see? the bit with value zero doesn't count.</p>\n<p><strong>TODO: DIDN'T UNDERSTOOD THE CONVERSION WITHOUT INTERMEDIATE OF BASE 10, SHOULD REVIEW!</strong></p>\n<h2 id=\"data-representation\"><a class=\"anchor\" href=\"#data-representation\">Data Representation</a></h2>\n<ul>\n<li>Primitive data:\n<ul>\n<li>Character: Non-numeric symbols, primary way to introduce text in some idiom;</li>\n<li>Logic: False or true;</li>\n<li>Numeric: Representation of numbers.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"ascii-american-standard-code-for-information-interchange\"><a class=\"anchor\" href=\"#ascii-american-standard-code-for-information-interchange\">ASCII (American Standard Code for Information Interchange)</a></h3>\n<p>Every character has 7 bits and ASCII have an amount of 128 characters (2⁷) that can be expressed in hexadecimal. The 0 and 1F characters cannot be impressed because they are characters of controlling.\nASCII has letters (uppercase and lowercase), punctuation marks (=+,.;:~...) and math symbols (+=-*...).</p>\n<h3 id=\"unicode\"><a class=\"anchor\" href=\"#unicode\">Unicode</a></h3>\n<p>Since ASCII, besides being a good option for english idiom, did not provide well for other idioms like chinese, japanese, etc. So a group of enterprises has created Unicode, in which each character has 16 bits. With Unicode we can have an amount of 65.536 characters (2¹⁶). It also have codes for emojis, geometric forms, monetary symbols and more.</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computer Architecture</li>\n<li><strong>Theme</strong>: Data Representation</li>\n</ul>"
  },
  {
    "title": "Introduction to Fundamental Computational Principles",
    "content": "<h2 id=\"essential-equation-of-computers\"><a class=\"anchor\" href=\"#essential-equation-of-computers\">Essential Equation of Computers</a></h2>\n<h3 id=\"fundamental-equation\"><a class=\"anchor\" href=\"#fundamental-equation\">Fundamental Equation</a></h3>\n<p>Computer = Absolute Capacity of Processing * Terrible Capacity of Thinking;</p>\n<p><em>Obs: Clearly the guys didn't saw chatGPT in action!</em></p>\n<p>It's essential to know what computers can do and cannot. Nowadays, even if the professional isn't in some technology role, technology is everywhere in work places.</p>\n<p>Since some people are too engaged in technology and others are doing their first steps, some institutions had gave up on the use of technology, which just increased the segregation.</p>\n<p>So the main key here is that everyone can understand how a computer works. They're powerful, since they can make billions of operations per second and can generate data in an absurd speed, but in other hand the calculations they can make are simple, they can't do complex operations on their own.</p>\n<h3 id=\"human-versus-machine\"><a class=\"anchor\" href=\"#human-versus-machine\">Human Versus Machine</a></h3>\n<p>Even about artificial intelligence, the thing remains: the computer has the ability to carry out actions based on a defined logical sequence, with a set of variations and high speeds, as the storage and processing capacities are expanded. On the other hand, if the commands are not established, if the parameters are not arranged and structured, the machine reaches a limit.</p>\n<p><em>Obs: in this topic one of the subjects addressed was the allegory of Plato.</em></p>\n<h2 id=\"exploration-process-of-computers-potential\"><a class=\"anchor\" href=\"#exploration-process-of-computers-potential\">Exploration Process of Computers Potential</a></h2>\n<h3 id=\"between-codes-and-algorithms-learning-computers-logic\"><a class=\"anchor\" href=\"#between-codes-and-algorithms-learning-computers-logic\">Between Codes and Algorithms: Learning Computers Logic</a></h3>\n<p>Every computer needs initial instructions and/or parameters in order to execute something.</p>\n<h4 id=\"code\"><a class=\"anchor\" href=\"#code\">Code</a></h4>\n<p>The code is a bunch of instructions written in order to make the computer execute something. Those instructions will be very simple if you take piece by piece of their execution, but the point in here is the logic the programmer uses to write the instruction. With the right lines of code is possible to make the computer execute very hard and complex logic.</p>\n<p>So the programmers are the ones who make possible for the computers to execute hard and complex tasks. The programmers are the intermediate between the demand of human needs (laugh, travel, etc) and the computer inability of doing tasks by themselves, needing code/instructions to do so.</p>\n<h4 id=\"algorithm\"><a class=\"anchor\" href=\"#algorithm\">Algorithm</a></h4>\n<p>The algorithm is nothing more then the result of the sequencing of comprehensive instructions for to realize a task.</p>\n<p>Let's suppose you thought about an algorithm that can calculate the average age in offices in Seattle, then you started creating your code in order to be executed and achieve the desired solution. Until the code does what it is supposed to do, it's not an algorithm.</p>\n<h3 id=\"how-computers-evolve\"><a class=\"anchor\" href=\"#how-computers-evolve\">How Computers Evolve</a></h3>\n<h4 id=\"moore-law\"><a class=\"anchor\" href=\"#moore-law\">Moore Law</a></h4>\n<p>Moore was defending that the computers would be smaller and smaller while the time passes, because the amount of components onto integrated circuits would be increasing since they would be smaller and smaller (2x smaller by year). So in near 6/7 years (from now, 2023), we would be reaching the limit of decreasing the size of those components, meaning we should have another ways to improve computers capacity.</p>\n<p>By this law, the evolution of computers turns out decreasing their prices, making them more accessible.</p>\n<h2 id=\"instruction-code-of-computers\"><a class=\"anchor\" href=\"#instruction-code-of-computers\">Instruction Code of Computers</a></h2>\n<h3 id=\"code-in-execution\"><a class=\"anchor\" href=\"#code-in-execution\">Code in Execution</a></h3>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computational Thinking</li>\n<li><strong>Theme</strong>: Introduction to Fundamental Computational Principles</li>\n</ul>"
  },
  {
    "title": "Computational Thinking And Application In Knowledge Areas",
    "content": "<h2 id=\"computational-thinking\"><a class=\"anchor\" href=\"#computational-thinking\">Computational Thinking</a></h2>\n<p>Computational thinking is the step that precedes programming. It is the process of elaborating the instructions that the machine will receive in order to produce a solution.</p>\n<h3 id=\"the-4-pillars-of-computational-thinking\"><a class=\"anchor\" href=\"#the-4-pillars-of-computational-thinking\">The 4 Pillars of Computational Thinking</a></h3>\n<ul>\n<li>Decomposition</li>\n<li>Pattern Recognition</li>\n<li>Abstraction</li>\n<li>Algorithm Design</li>\n</ul>\n<h4 id=\"decomposition\"><a class=\"anchor\" href=\"#decomposition\">Decomposition</a></h4>\n<p>Decomposition is the process of breaking down a problem into smaller parts. This is the first step in the process of solving a problem.</p>\n<h4 id=\"pattern-recognition\"><a class=\"anchor\" href=\"#pattern-recognition\">Pattern Recognition</a></h4>\n<p>Pattern recognition is the process of identifying patterns in a problem. This is the second step in the process of solving a problem. The objective is to reuse solutions that had worked in the past for newer problems that are sufficiently similar.</p>\n<h4 id=\"abstraction\"><a class=\"anchor\" href=\"#abstraction\">Abstraction</a></h4>\n<p>Abstraction is the process of identifying the essential features of a problem. This is the third step in the process of solving a problem. The objective is to ignore information and details that are not useful to elaborate a solution.</p>\n<h4 id=\"algorithm-design\"><a class=\"anchor\" href=\"#algorithm-design\">Algorithm Design</a></h4>\n<p>Algorithm design is the process of elaborating the instructions that the machine will receive in order to produce a solution. This is the fourth step in the process of solving a problem. This step is important because automating tasks has became an important thing in the current world, and it can be made through algorithms.</p>\n<h3 id=\"work-market\"><a class=\"anchor\" href=\"#work-market\">Work Market</a></h3>\n<p>Computational thinking is included into <em><strong>soft skills</strong></em>. This means that it is not a technical skill, but it is a skill that is useful to work in the industry. It is highly used not just into tech jobs but also in the majority of jobs nowadays.</p>\n<h2 id=\"computational-thinking-in-creative-economy-and-business\"><a class=\"anchor\" href=\"#computational-thinking-in-creative-economy-and-business\">Computational Thinking In Creative Economy And Business</a></h2>\n<h3 id=\"creative-economy\"><a class=\"anchor\" href=\"#creative-economy\">Creative Economy</a></h3>\n<p>It is a new concept that is being used to describe the new economy that is being created by the digital revolution. It is a new economy that is based on the creation of new products and services, and it is based on the creation of new ways to produce and distribute products and services.</p>\n<p>Computational thinking is used in the creative economy to create new products and services, and to create new ways to produce and distribute products and services, like softwares, games and other digital produce.</p>\n<h3 id=\"business\"><a class=\"anchor\" href=\"#business\">Business</a></h3>\n<p>Independent of the industry, technology is being used to automate tasks and to improve the client experience. The concern about efficiency, resilience and security is directly related to technology.</p>\n<p>A good example of how important technology is for business nowadays is that Blockbuster, a company that was the biggest video rental company in the world, went bankrupt because it did not adapt to the new technology. While Netflix became the biggest streaming platform in the world.</p>\n<p>Like media and entertainment services, various other industries are being disrupted by technology. Nowadays even banks can be accessed and used by a software in a smartphone.</p>\n<p>Even monetary transactions got recently impacted by technology with the creation of cryptocurrencies, and a lot of other ways to make transactions with facial recognition, approximation and qr codes.</p>\n<h2 id=\"computational-thinking-in-education\"><a class=\"anchor\" href=\"#computational-thinking-in-education\">Computational Thinking In Education</a></h2>\n<p>\"The insertion of computational thinking in school is not only aimed at employability, competitiveness and economic growth, but mainly at building competences and skills that are fundamental to human beings for the effective exercise of citizenship in a digital society.\" - Blikstein, 2008, n. p.</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computational Thinking</li>\n<li><strong>Theme</strong>: Computational Thinking And Application In Knowledge Areas</li>\n</ul>"
  },
  {
    "title": "Hardware Fundamentals",
    "content": "<h2 id=\"what-is-it\"><a class=\"anchor\" href=\"#what-is-it\">What Is It?</a></h2>\n<p>Hardware is basically the physical part of a computer. Meaning it comprehends the components: GPU, CPU, Coolers, Motherboard, USB Hub's, RAM memory cards, SSD's, HD's, removable media, peripherals, etc.</p>\n<p>In a comparison, as an analogy, you can think about the difference between hardware and software as the difference between body and soul, respectively.</p>\n<p>Another analogy with different purpose is: CPU is the brain and transistors are the neurons. Transistors, one of the biggest inventions of the century, are embedded into components called chips. For an example, Intel Core i9 9900k contains 12 billions of transistors.</p>\n<h3 id=\"moore-law\"><a class=\"anchor\" href=\"#moore-law\">Moore Law</a></h3>\n<p>Basically it just states that the industry is being able to double the number of transistors embedded into a chip, which means more performance and less cost. It isn't exactly a law but okay.</p>\n<p>Smartphones nowadays are a lot faster than the computer used for trajectory calculation at Apollo XI. An international accepted way for measuring the performance power of a computer is the <strong>FLOPS</strong> (Floating-point operations per second).</p>\n<h2 id=\"basic-components-of-hardware\"><a class=\"anchor\" href=\"#basic-components-of-hardware\">Basic Components of Hardware</a></h2>\n<p>The fundamental ones are:</p>\n<ul>\n<li>CPU;</li>\n<li>RAM;</li>\n<li>Persisted Memory: SSD's, HD's, SD Cards, etc. By itself, those memories aren't ready for use, so they need something called file system. There is a lot of file systems out there and a lot of softwares for applying file systems into those devices, being it entirely or only for a partition;</li>\n<li>Motherboard: Is responsible for connecting all the electronic components.</li>\n</ul>\n<h3 id=\"microcontroller\"><a class=\"anchor\" href=\"#microcontroller\">Microcontroller</a></h3>\n<p>A small computer built on a single chip is known as a microcontroller, which has all the basic components like CPU, RAM and persistent storage on a really small scale. Logically, its computational power, when compared to desktop computers, is quite limited.</p>\n<p>Examples of equipments that make use of microcontrollers are: cars, thermostats and microwaves. Another good example of microcontroller is an arduino.</p>\n<h2 id=\"data-storage-units\"><a class=\"anchor\" href=\"#data-storage-units\">Data Storage Units</a></h2>\n<ul>\n<li>1B (byte) = 1 byte (one);</li>\n<li>1KB (kilobyte) = 1024 bytes or ≃ 1.000 bytes (thousand);</li>\n<li>1MB (megabyte) = 1024 kilobytes or ≃ 1.000.000 bytes (million);</li>\n<li>1GB (gigabyte) = 1024 megabytes or ≃ 1.000.000.000 bytes (billion);</li>\n<li>1TB (terabyte) = 1024 gigabytes or ≃ 1.000.000.000.000 bytes (trillion);</li>\n<li>1PB (petabyte) = 1024 terabytes or ≃ 1.000.000.000.000.000 bytes (quadrillion);</li>\n<li>1EB (exabyte) = 1024 petabytes or ≃ 1.000.000.000.000.000.000 bytes (quintillion);</li>\n<li>1ZB (zettabyte) = 1024 exabytes or ≃ 1.000.000.000.000.000.000.000 bytes (sextillion);</li>\n<li>1YB (yottabyte) = 1024 zettabytes or ≃ 1.000.000.000.000.000.000.000.000 bytes (septillion).</li>\n</ul>\n<h3 id=\"bits-and-bytes\"><a class=\"anchor\" href=\"#bits-and-bytes\">Bits and Bytes</a></h3>\n<p>Basically bits are only 0's or 1's, and a group of 8 bits is equal to one byte.</p>\n<p>Any group of bits have a number of possible combinations. 2 bits have four combinations possible, while 1 bit just have 2. This means that n (combinations) is equal to 2 elevated to x (where x is the number of bits). That said, a byte has 256 possible combinations of bits.</p>\n<p>That said, a byte can represent numbers (from 0-255). A good example of this is the representation of colors in computers, where red, green and blue are represented in computer memory as one byte each. So, in RGB standard we have 256 distinct levels of red, 256 distinct levels of green and 256 distinct levels blue. Using that standard the computer can represents 256x256x256 = 16,777,216 colors (16.77 million colors).</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computational Thinking</li>\n<li><strong>Theme</strong>: Hardware Fundamentals</li>\n</ul>"
  },
  {
    "title": "Programming Notions: Examples With Digital Images Manipulation",
    "content": "<h2 id=\"data-manipulation\"><a class=\"anchor\" href=\"#data-manipulation\">Data Manipulation</a></h2>\n<p>Example: Manipulate a digital image with simple javascript code.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> img</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> SimpleImage(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"smallpanda.png\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> pixel</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> img</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.getPixel(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#BBBBBB;--shiki-dark:#BBBBBB\">,</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.setRed(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">255</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print(img);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"for\"><a class=\"anchor\" href=\"#for\">For</a></h2>\n<p>It will loop through whatever it is said to loop through. It is mostly used with iterables since it can iterate through them with a logical condition. Example using for to manipulate all the pixels of an image:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> img</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> SimpleImage(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"smallpanda.png\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (pixel: img) {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">  pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.setRed(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">255</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print(img);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Transform the image into a grayscale image:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> img</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> SimpleImage(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"smallpanda.png\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (pixel: img) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> avg</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.getRed() </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.getGreen() </span><span style=\"color:#F97583;--shiki-dark:#F97583\">+</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.getBlue()) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">/</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 3</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">  pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.setRed(avg);</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">  pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.setGreen(avg);</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">  pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.setBlue(avg);</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print(img);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"if\"><a class=\"anchor\" href=\"#if\">If</a></h2>\n<p>It will execute the code inside the if statement if the condition is true. Example using if to manipulate all the pixels of an image:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">const</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\"> img</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> SimpleImage(</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">\"smallpanda.png\"</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">for</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (pixel: img) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">  if</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.getRed() </span><span style=\"color:#F97583;--shiki-dark:#F97583\">></span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 200</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF;--shiki-dark:#79B8FF\">    pixel</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">.setRed(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">255</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  }</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">print(img);</span></span>\n<span class=\"line\"></span></code></pre>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computational Thinking</li>\n<li><strong>Theme</strong>: Programming Notions: Examples With Digital Images Manipulation</li>\n</ul>"
  },
  {
    "title": "Image Representation in Computers",
    "content": "<h2 id=\"pixel-fundaments\"><a class=\"anchor\" href=\"#pixel-fundaments\">Pixel Fundaments</a></h2>\n<p>Basically every image is composed by pixels. Pixels are colored visual squares. The amount of pixels tells the resolution of the media.</p>\n<h2 id=\"rgb-scheme\"><a class=\"anchor\" href=\"#rgb-scheme\">RGB Scheme</a></h2>\n<p>Newton Prism as the experiment of Isaac Newton to demonstrate that light, when passing by a prisma, can be divided in a lot of colors, exactly how it happen with rainbow. That experiment showed that white light isn't pure and indivisible.</p>\n<p>From those colors, we call green, red and blue 'constituent colors', because they can be used to recreate other colors, even the white light. And that's how computers pixels get colored, it's by using RGB scheme.</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computational Thinking</li>\n<li><strong>Theme</strong>: Image Representation in Computers</li>\n</ul>"
  },
  {
    "title": "Computer Software Fundamentals",
    "content": "<h2 id=\"basic-software-concepts\"><a class=\"anchor\" href=\"#basic-software-concepts\">Basic Software Concepts</a></h2>\n<p>On mechanic machines, the human operating is responsible for executing the work, instead nowadays the software programmed by humans have a set of functions to execute the work as the user, also human mostly, wants.</p>\n<p>Computers are sons of Turing and second world war. The urge to have better communications, data processing and storage for those information made the way for the creation of the computer.</p>\n<h3 id=\"hardware-instructions-representation-and-storage\"><a class=\"anchor\" href=\"#hardware-instructions-representation-and-storage\">Hardware Instructions Representation and Storage</a></h3>\n<p>CPU's have their machine code or native code different from each other. Instructions can be in high level (high level programming languages, like javascript, c, c++, etc) or in that native code (low level language).</p>\n<p>High level languages should be interpreted or compiled to generate low level code (machine/native code) so the computer can understand and process the instructions. One instruction in high level language can generate 1, 2, ... 5, or more instructions in low level language.</p>\n<h3 id=\"open-source-code\"><a class=\"anchor\" href=\"#open-source-code\">Open Source Code</a></h3>\n<p>Basically the compiled or bundled app will be distributed but also, the source code in which it's originated will be accessible. Generally the source code have a license that says something like: \"here's the source code, feel free to create your own version of the app you the changes you want to make\".</p>\n<h3 id=\"program\"><a class=\"anchor\" href=\"#program\">Program</a></h3>\n<p>A program basically is a block of instructions stored in the memory RAM, or waiting in a swap memory for example, that are executed for the CPU in order to achieve it's purpose.</p>\n<p>There's tons of types of instructions, two are important to see now:</p>\n<ul>\n<li>Loop or Goto Instructions: Like after instruction 4, the instruction five says to return to 1, so the processor executes again instruction 1, 2, 3, 4, 5 and cycle again; or goto that just says execute again the instruction 3, for example, and continues the process after;</li>\n<li>Conditional Instructions: If an condition is true or false determines whether the computer goes to instruction 5 or 6, for example.</li>\n</ul>\n<h2 id=\"functional-softwares\"><a class=\"anchor\" href=\"#functional-softwares\">Functional Softwares</a></h2>\n<p>Operational System is what manages the computer resources (memory, permissions, peripherals, etc) and the execution of programs. It's an abstraction layer to hardware specificities for the programs that will be executed.</p>\n<p>The SO is also initialized by a program. This is the <strong>firmware</strong> of initialization, also called <strong>BIOS</strong>, it is written by the facture of the computer and is stored in a special memory called <strong>ROM</strong>. The firmware is responsible for knowing when the machine was off and has turned on and for looking into connected storages looking for a system to be initialized (other important things too). Boot ordering is when multiple systems where found by the firmware, so it will have an ordering of initialization, starting with the first in the list.</p>\n<h2 id=\"programming-language-types\"><a class=\"anchor\" href=\"#programming-language-types\">Programming Language Types</a></h2>\n<ul>\n<li>Compiled Languages: Those are compiled by a compiler to generate machine code to be executed by computer. Those have highest performance speed. The reverse process is not possible;</li>\n<li>Interpreted/Dynamic Languages: Those are interpreted by an special program (interpreter) that executes the code.</li>\n</ul>\n<p>here are also JIT's, those can read the source code to interpret and compile in the fastest way possible, and that works very well. Modern Internet browsers such as Firefox, Chrome, Microsoft Internet Explorer and Microsoft Edge now embed JIT's for JavaScript code. JIT examines dynamic code snippets (Javascript) that are being executed very frequently and compiles native code from these snippets in real time.</p>\n<p><em>Obs: Even with JIT's, interpreted languages have lower speeds in execution than compiled languages.</em></p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Computational Thinking</li>\n<li><strong>Theme</strong>: Computer Software Fundamentals</li>\n</ul>"
  },
  {
    "title": "Demonstration Methods",
    "content": "<h1 id=\"understanding-about-trivial-direct-indirect-and-vacuum-demonstrations\"><a class=\"anchor\" href=\"#understanding-about-trivial-direct-indirect-and-vacuum-demonstrations\">Understanding About Trivial, Direct, Indirect, and Vacuum Demonstrations</a></h1>\n<h2 id=\"what-is-a-demonstration\"><a class=\"anchor\" href=\"#what-is-a-demonstration\">What is a Demonstration?</a></h2>\n<p>A sequence of affirmations where each affirmation have to be justified by the previous affirmations.</p>\n<h2 id=\"direct-demonstration\"><a class=\"anchor\" href=\"#direct-demonstration\">Direct Demonstration</a></h2>\n<ul>\n<li><strong>Modus Ponens (Modus Ponendo Ponens)</strong>: Is a deductive argument form and rule of inference.</li>\n<li>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is true, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> is true, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>⇒</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">p \\Rightarrow q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> is true.</li>\n</ul>\n<h2 id=\"demonstration-by-contradiction-or-by-reduction-to-absurdity\"><a class=\"anchor\" href=\"#demonstration-by-contradiction-or-by-reduction-to-absurdity\">Demonstration by Contradiction or by Reduction to Absurdity</a></h2>\n<p>| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>⇒</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">p \\Rightarrow q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span>\n|-----|-----|-----------------\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></p>\n<p>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is true and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> is false, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>⇒</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">p \\Rightarrow q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> is false? this is an impossible situation, meaning it leads to an absurdity.</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>[ (p \\land \\neg q) \\Rightarrow F ] \\\\</span></span>\n<span class=\"line\"><span>A = \\mathbb{U} \\texttt{ of all possible values of x} \\\\</span></span>\n<span class=\"line\"><span>\\emptyset \\subset A = F \\\\</span></span>\n<span class=\"line\"><span>\\texttt{ but if } \\emptyset \\not\\subset A \\\\</span></span>\n<span class=\"line\"><span>\\texttt{ then, must have some } x \\in \\emptyset | x \\not\\in A \\\\</span></span></code></pre>\n<ul>\n<li><strong>But it is not possible to have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"normal\">∅</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\emptyset</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.0556em;\"></span><span class=\"mord\">∅</span></span></span></span></strong>, since it is an absurdity.</li>\n<li>Then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>⇒</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">p \\Rightarrow q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> is true.</li>\n</ul>\n<h2 id=\"other-demonstrations\"><a class=\"anchor\" href=\"#other-demonstrations\">Other Demonstrations</a></h2>\n<p>| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x) | q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>⇒</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x) \\Rightarrow q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>\n|-------|-------|------------------------\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>   | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>   | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>   | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>\n| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>   | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></p>\n<ul>\n<li><strong>Trivial Demonstration</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>⇒</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x) \\Rightarrow q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is true for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is true.</li>\n<li><strong>Vacuum Demonstration</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>⇒</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x) \\Rightarrow q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is true for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is false.</li>\n<li><strong>Indirect Demonstration</strong>: For an arbitrary <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span>, if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is false and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>⇒</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x) \\Rightarrow q(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is true, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is false.</li>\n</ul>\n<h2 id=\"demonstrations-in-propositions-with-quantifiers\"><a class=\"anchor\" href=\"#demonstrations-in-propositions-with-quantifiers\">Demonstrations in Propositions with Quantifiers</a></h2>\n<ul>\n<li>i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\forall x \\in \\mathbb{R}) (x^2 \\geq 0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>, this is a proposition with a quantifier that is <strong>true</strong>, we can demonstrate it.\n<ul>\n<li>Negation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>&#x3C;</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\exists x \\in \\mathbb{R}) (x^2 &#x3C; 0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>+</mo><mn>1</mn><mrow><mtext> </mtext><mtext mathvariant=\"monospace\">is</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">prime</mtext></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\exists n \\in \\mathbb{N}) (2^n + 1 \\texttt{ is prime})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">N</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord text\"><span class=\"mord texttt\"> is prime</span></span><span class=\"mclose\">)</span></span></span></span>, this is a proposition with a quantifier that is <strong>true</strong>, we can demonstrate it.\n<ul>\n<li>Negation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>+</mo><mn>1</mn><mrow><mtext> </mtext><mtext mathvariant=\"monospace\">is</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">not</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">prime</mtext></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\forall n \\in \\mathbb{N}) (2^n + 1 \\texttt{ is not prime})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">N</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord text\"><span class=\"mord texttt\"> is not prime</span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi><mi>y</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>=</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\forall y \\in \\mathbb{R}) (\\exists x \\in \\mathbb{R}) (x^2 = y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>, this is a proposition with a quantifier that is <strong>false</strong>, we can demonstrate it.\n<ul>\n<li>Negation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>y</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo mathvariant=\"normal\">≠</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\exists y \\in \\mathbb{R}) (\\forall x \\in \\mathbb{R}) (x^2 \\neq y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"principle-of-induction\"><a class=\"anchor\" href=\"#principle-of-induction\">Principle of Induction</a></h2>\n<ul>\n<li>i.e. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊂</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">A \\subset \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">1 \\in A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>∈</mo><mi>A</mi><mo>⇒</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo>∈</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\forall n \\in \\mathbb{N} (n \\in A \\Rightarrow n + 1 \\in A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">A = \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span>.</li>\n<li>Basically, we make a supposition that if it's true for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>, then it is true for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, and so on.</li>\n</ul>\n<p><em>I should probably make a good review of those topics...</em></p>"
  },
  {
    "title": "Graphics and Their Interpretations",
    "content": "<h2 id=\"1-interval-concepts\"><a class=\"anchor\" href=\"#1-interval-concepts\">1. Interval Concepts</a></h2>\n<h3 id=\"11-closed-interval-on-real-line\"><a class=\"anchor\" href=\"#11-closed-interval-on-real-line\">1.1. Closed Interval on Real Line</a></h3>\n<ul>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo>:</mo><mi>a</mi><mo>≤</mo><mi>x</mi><mo>≤</mo><mi>b</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">[a, b] = \\{ x \\in \\mathbb{R}: a \\leq x \\leq b \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n<p><img src=\"./assets/02-02-math-closed-interval.svg\" alt=\"Interval Closed on Real Line\"></p>\n<h3 id=\"11-open-interval-on-real-line\"><a class=\"anchor\" href=\"#11-open-interval-on-real-line\">1.1. Open Interval on Real Line</a></h3>\n<ul>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">]</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">[</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo>:</mo><mi>a</mi><mo>&#x3C;</mo><mi>x</mi><mo>&#x3C;</mo><mi>b</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">]a, b[ = \\{ x \\in \\mathbb{R}: a &#x3C; x &#x3C; b \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">]</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">[</span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n<p><img src=\"./assets/02-02-math-open-interval.svg\" alt=\"Interval Closed on Real Line\"></p>\n<h3 id=\"11-half-open-real-half-line\"><a class=\"anchor\" href=\"#11-half-open-real-half-line\">1.1. Half-Open Real Half-Line</a></h3>\n<ul>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">[</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo>:</mo><mi>x</mi><mo>≥</mo><mi>a</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">[a, +\\infty[ = \\{ x \\in \\mathbb{R}: x \\geq a \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mopen\">[</span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n<p><img src=\"./assets/02-02-math-half-open-line.svg\" alt=\"Interval Closed on Real Line\"></p>\n<h3 id=\"11-open-real-half-line\"><a class=\"anchor\" href=\"#11-open-real-half-line\">1.1. Open Real Half-Line</a></h3>\n<ul>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">]</mo><mi>a</mi><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">[</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo>:</mo><mi>x</mi><mo>></mo><mi>a</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">]a, +\\infty[ = \\{ x \\in \\mathbb{R}: x > a \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">]</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mopen\">[</span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n<p><img src=\"./assets/02-02-math-open-line.svg\" alt=\"Interval Closed on Real Line\"></p>\n<h3 id=\"11-interval-amplitude\"><a class=\"anchor\" href=\"#11-interval-amplitude\">1.1. Interval Amplitude</a></h3>\n<ul>\n<li>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>L</mi><mo>−</mo><mi>I</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">SL - IL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">L</span></span></span></span> (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">SL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">L</span></span></span></span> is the superior limit and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">IL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">L</span></span></span></span> is the inferior limit)</li>\n<li>Amplitude will be the same independently of the interval type, open or closed.</li>\n</ul>\n<h2 id=\"2-definitions-and-characteristics-of-a-function\"><a class=\"anchor\" href=\"#2-definitions-and-characteristics-of-a-function\">2. Definitions and Characteristics of a Function</a></h2>\n<p><img src=\"./assets/02-02-math-cartesian-plane.svg\" alt=\"Cartesian Plane\"></p>\n<ul>\n<li>The values that appears in the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> axis are the independent variable</li>\n<li>The values that appears in the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> axis are the dependent variable (depend on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> value).</li>\n</ul>\n<h3 id=\"21-ambiguity\"><a class=\"anchor\" href=\"#21-ambiguity\">2.1 Ambiguity</a></h3>\n<ul>\n<li>Occurs when by each value of the independent variable, we have more than one value of the dependent variable.</li>\n<li>When this happens, we say that the cartesian plane <strong>doesn't represent a function</strong>.</li>\n</ul>\n<h3 id=\"22-roots\"><a class=\"anchor\" href=\"#22-roots\">2.2. Roots</a></h3>\n<ul>\n<li>The roots of a graph are the values of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> that makes the function equals to zero.</li>\n<li>We can have multiple roots.</li>\n<li>We can have no roots.</li>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f(x) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></li>\n</ul>\n<h3 id=\"23-domain-from-wikipedia\"><a class=\"anchor\" href=\"#23-domain-from-wikipedia\">2.3. Domain (from Wikipedia)</a></h3>\n<ul>\n<li>It's the set of inputs accepted by the function (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>o</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dom(f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span>).</li>\n<li>In layman's terms, the domain of a function can generally be taught as \"what <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> can be\".</li>\n</ul>\n<p>In the special case that <strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> are both subsets of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb {R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span></strong>, the function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> can be graphed in the Cartesian coordinate system.</p>\n<blockquote>\n<p>In this case, <strong>the domain is represented on the x-axis of the graph</strong>, as the projection of the graph of the function onto the x-axis.</p>\n</blockquote>\n<h3 id=\"23-maximum-and-minimum\"><a class=\"anchor\" href=\"#23-maximum-and-minimum\">2.3. Maximum and Minimum</a></h3>\n<ul>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>></mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∀</mi><mi>y</mi><mo stretchy=\"false\">(</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x) > f(y) \\forall y (-)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span> (local maximum) and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>&#x3C;</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∀</mi><mi>y</mi><mo stretchy=\"false\">(</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x) &#x3C; f(y) \\forall y (-)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span> (local minimum)\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(-)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mclose\">)</span></span></span></span> means interval, because we are defining maximum and minimum for a certain interval.</li>\n<li>Sometimes we can assume that the minimum and maximum are global and not local.</li>\n</ul>\n</li>\n</ul>"
  },
  {
    "title": "Getting Deeper Into Functions",
    "content": "<h2 id=\"concept-of-function-domain-images-and-codomain\"><a class=\"anchor\" href=\"#concept-of-function-domain-images-and-codomain\">Concept of Function (Domain, Images and Codomain)</a></h2>\n<p>A function is a relation between two sets, where every element of the first set is related to exactly one element of the second set.</p>\n<ul>\n<li>\n<p>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mi mathvariant=\"normal\">∣</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">D(f) = \\{x \\in \\mathbb{R} | f(x) \\in \\mathbb{R} \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">}</span></span></span></span></p>\n</li>\n<li>\n<p>Ex:</p>\n</li>\n</ul>\n<p><img src=\"./assets/02-02-math-function-image.svg\" alt=\"Function Image\"></p>\n<blockquote>\n<p><em>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>6</mn><mi>x</mi><mo>+</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">f(x) = x^2 - 6x + 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">6</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span></span></span></span></em></p>\n</blockquote>\n<h2 id=\"injective-function\"><a class=\"anchor\" href=\"#injective-function\">Injective Function</a></h2>\n<p>A function is injective if every element of the codomain is mapped to by at most one element of the domain.</p>\n<blockquote>\n<p>In other terms: If you trace a horizontal line across the graph of an injective function, the line will only cross the graph in at most one place.</p>\n</blockquote>\n<ul>\n<li>Ex:</li>\n</ul>\n<blockquote>\n<p><em>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">f(x) = 2x + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></em></p>\n</blockquote>\n<h2 id=\"surjective-function\"><a class=\"anchor\" href=\"#surjective-function\">Surjective Function</a></h2>\n<p>A function is surjective if every element of the codomain is mapped to by at least one element of the domain.</p>\n<ul>\n<li>Ex:</li>\n</ul>\n<blockquote>\n<p><em>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">f(x) = x^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></em></p>\n</blockquote>\n<h2 id=\"bijective-function\"><a class=\"anchor\" href=\"#bijective-function\">Bijective Function</a></h2>\n<p>A function is bijective if it is both injective and surjective.</p>\n<ul>\n<li>Ex:</li>\n</ul>\n<blockquote>\n<p><em>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">f(x) = x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span></em></p>\n</blockquote>\n<h2 id=\"inverse-function\"><a class=\"anchor\" href=\"#inverse-function\">Inverse Function</a></h2>\n<blockquote>\n<p>For a function to have an inverse, it must be bijective.</p>\n</blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>a</mi><mi>l</mi><mo>:</mo><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Normal: f: X \\rightarrow Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>e</mi><mo>:</mo><msup><mi>f</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>:</mo><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Inverse: f^{-1}: Y \\rightarrow X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">erse</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span></p>\n<p>So:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>f(x) = y \\iff f^{-1}(y) = x \\\\ Dom(f) = Im(f^{-1}) \\\\ Dom(f^{-1}) = Im(f) \\\\ x = f^{-1}(f(x)) \\\\ y = f(f^{-1}(y))</span></span></code></pre>\n<h2 id=\"increasing-function\"><a class=\"anchor\" href=\"#increasing-function\">Increasing Function</a></h2>\n<p>A function is increasing if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>&#x3C;</mo><msub><mi>x</mi><mn>2</mn></msub><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>&#x3C;</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x_1 &#x3C; x_2 \\implies f(x_1) &#x3C; f(x_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.675em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li>Ex:</li>\n</ul>\n<blockquote>\n<p><em>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">f(x) = x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span></em></p>\n</blockquote>\n<h2 id=\"decreasing-function\"><a class=\"anchor\" href=\"#decreasing-function\">Decreasing Function</a></h2>\n<p>A function is decreasing if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>&#x3C;</mo><msub><mi>x</mi><mn>2</mn></msub><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>></mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x_1 &#x3C; x_2 \\implies f(x_1) > f(x_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.675em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<h2 id=\"periodic-function\"><a class=\"anchor\" href=\"#periodic-function\">Periodic Function</a></h2>\n<p>A period is the interval of a periodic function after which the function repeats itself.</p>\n<ul>\n<li>Ex:</li>\n</ul>\n<blockquote>\n<p>Notation: Being <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> the period of the function and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>></mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">T > 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x) = f(x + T)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<ul>\n<li><em>Note: Trigonometric functions are periodic.</em></li>\n</ul>\n<p>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is a periodic function with period <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is also periodic with period <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">kT</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">k \\in \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span>.</p>\n<ul>\n<li>In math terms:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>f(x) = f(x + T) = f(x + 2T) = ... = f(x + kT)</span></span></code></pre>\n<h2 id=\"graph-of-a-function\"><a class=\"anchor\" href=\"#graph-of-a-function\">Graph of a Function</a></h2>\n<p>It can be defined as:</p>\n<ul>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>∈</mo><mi>D</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">G(f) = \\{(x, f(x)) | x \\in D(f) \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">))</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)}</span></span></span></span></li>\n</ul>\n<p>Therefore, the ordinate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> of a point on the graph of the function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is the value of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> on the corresponding abscissa <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>.</p>"
  },
  {
    "title": "Predicate Calculus",
    "content": "<h1 id=\"simple-and-composed-open-sentences\"><a class=\"anchor\" href=\"#simple-and-composed-open-sentences\">Simple and Composed Open Sentences</a></h1>\n<h2 id=\"open-sentence-and-proposition\"><a class=\"anchor\" href=\"#open-sentence-and-proposition\">Open Sentence and Proposition</a></h2>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">P:</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span></span></span></span> Filipe is a CSS student (proposition)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>5</mn><mi>x</mi><mo>+</mo><mn>6</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">p(x): x^2 - 5x + 6 = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> (open sentence)</li>\n</ul>\n<p>The open sentence is a functional proposition, i.e., it is a proposition that depends on a variable, so by that I cannot say if it is true or false, unlike a normal proposition.</p>\n<h3 id=\"universal-set\"><a class=\"anchor\" href=\"#universal-set\">Universal Set</a></h3>\n<p>Universal set, Universe, or Domain of Discourse is the set of all possible values for the variable.</p>\n<p>i.e.,</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>+</mo><mn>15</mn><mo>=</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">x + 15 = 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">15</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mn>7</mn></mrow><annotation encoding=\"application/x-tex\">x = -7</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">7</span></span></span></span> (truth value)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">U</mi><mo>=</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{U} = \\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span></li>\n</ul>\n<h3 id=\"truth-set\"><a class=\"anchor\" href=\"#truth-set\">Truth Set</a></h3>\n<p>The truth set is the set of all values that make the open sentence true. Following the latest example, the truth set is:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mo stretchy=\"false\">{</mo><mo>−</mo><mn>7</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">T_p = \\{-7\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">−</span><span class=\"mord\">7</span><span class=\"mclose\">}</span></span></span></span></li>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi><mo>∧</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T_p = x | x \\in \\mathbb{U} \\land p(x) = T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></li>\n<li>This <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span> is scoped, so it the universal set might have different possible values depending on the sentence.</li>\n</ul>\n<p><strong>What if the sentence has more than one variable?</strong></p>\n<p>i.e., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>:</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">p(x, y): x^2 + y^2 = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">T_p = \\{(0, 1), (0, -1), (1, 0), (-1, 0)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)}</span></span></span></span></li>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi><mo>∧</mo><mi>y</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi><mo>∧</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>T</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">T_p = \\{(x, y) | x \\in \\mathbb{U} \\land y \\in \\mathbb{U} \\land p(x, y) = T\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n<h2 id=\"predicates\"><a class=\"anchor\" href=\"#predicates\">Predicates</a></h2>\n<p>A predicate assigns to the subject a property or a relation.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">p(x): x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is a student (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is the subject, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is the predicate and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is the proposition, <strong>at least is how I understood it</strong>)</li>\n</ul>\n<h2 id=\"quantified-propositions\"><a class=\"anchor\" href=\"#quantified-propositions\">Quantified Propositions</a></h2>\n<p>i.e., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><msup><mi>x</mi><mn>2</mn></msup><mo>></mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">p(x): x^2 > 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span></p>\n<ul>\n<li>Where the universe is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">U</mi><mo>=</mo><mrow><mn>3</mn><mo separator=\"true\">,</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>7</mn></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbb{U} = {3,4,5,6,7}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">7</span></span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">T_p = \\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span></li>\n<li>So, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">\\forall</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi><mo>:</mo><msup><mi>x</mi><mn>2</mn></msup><mo>></mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}: x^2 > 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span></li>\n<li>This is called a <strong>universal quantifier</strong> because it is true for all values of the universe</li>\n</ul>\n</li>\n<li>Where the universe is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">U</mi><mo>=</mo><mrow><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>4</mn></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbb{U} = {0,1,2,3,4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span></span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">T_p = {5}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord\">5</span></span></span></span></span></li>\n<li>So, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi></mrow><annotation encoding=\"application/x-tex\">\\exists</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∃</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi><mo>:</mo><msup><mi>x</mi><mn>2</mn></msup><mo>></mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}: x^2 > 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span></li>\n<li>This is called a <strong>existential quantifier</strong> because it is true for some values of the universe</li>\n</ul>\n</li>\n<li>Where the universe is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">U</mi><mo>=</mo><mrow><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbb{U} = {-1,0,1,2,3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span></span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mrow><mn>3</mn><mo separator=\"true\">,</mo><mn>4</mn></mrow></mrow><annotation encoding=\"application/x-tex\">T_p = {3,4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span></span></span></span></span></li>\n<li>So, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">\\exists!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∃</span><span class=\"mclose\">!</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi><mo>:</mo><msup><mi>x</mi><mn>2</mn></msup><mo>></mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}: x^2 > 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">\\exists!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∃</span><span class=\"mclose\">!</span></span></span></span> means that there is only one element that satisfies the proposition)</li>\n<li>This is called a <strong>unique existential quantifier</strong> because it is true for only one value of the universe</li>\n</ul>\n</li>\n</ul>\n<p><strong>What if the sentence has more than one variable?</strong></p>\n<p>i.e., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mn>2</mn><mi>x</mi><mo>+</mo><mi>y</mi><mo>&#x3C;</mo><mn>11</mn></mrow><annotation encoding=\"application/x-tex\">p(x, y): 2x + y &#x3C; 11</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">11</span></span></span></span></p>\n<ul>\n<li>Let's say that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">y \\in \\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">U</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>4</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{U} = \\{1,2,3,4\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">}</span></span></span></span></li>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">(\\forall</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∀</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>∈</mo><mi mathvariant=\"double-struck\">U</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>x</mi><mo>+</mo><mi>y</mi><mo>&#x3C;</mo><mn>11</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y \\in \\mathbb{U})(2x + y &#x3C; 11)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">U</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">11</span><span class=\"mclose\">)</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub><mo>=</mo><mi mathvariant=\"normal\">∅</mi></mrow><annotation encoding=\"application/x-tex\">T_p = \\emptyset</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.0556em;\"></span><span class=\"mord\">∅</span></span></span></span>, because if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">x = 6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span></span></span></span>, then it's false for every value of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span></li>\n<li>We can also have <strong>free variables</strong>, as we gonna see right now...</li>\n</ul>\n<h2 id=\"free-variables-and-bound-variables\"><a class=\"anchor\" href=\"#free-variables-and-bound-variables\">Free Variables and Bound Variables</a></h2>\n<ul>\n<li>i.e., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mn>10</mn></msubsup><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S(n) = \\sum\\limits_{k=1}^{10} f(n, k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.5032em;vertical-align:-1.0021em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5011em;\"><span style=\"top:-2.0979em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.95em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0021em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>It means that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is a free variable, because it is not bounded by the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo></mrow><annotation encoding=\"application/x-tex\">\\sum</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span></span></span></span> operator</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> is a bound variable, because it is bounded by the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo></mrow><annotation encoding=\"application/x-tex\">\\sum</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span></span></span></span> operator (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> will be a value from 1 to 10)</li>\n</ul>\n<h2 id=\"negation-of-quantified-propositions\"><a class=\"anchor\" href=\"#negation-of-quantified-propositions\">Negation of Quantified Propositions</a></h2>\n<ul>\n<li>i.e., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x): (\\forall x \\in \\mathbb{R})(x^2 \\geq 0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∃</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>&#x3C;</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\neg p(x): (\\exists x \\in \\mathbb{R})(x^2 &#x3C; 0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∃</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<hr>\n<p>Doesn't take too much to understand the obvious importance of those topics for programming, anybody that has ever programmed in any language can make parallels with the topics presented and programming concepts.</p>"
  },
  {
    "title": "Sets Theory and Count Principles",
    "content": "<h2 id=\"set-representation\"><a class=\"anchor\" href=\"#set-representation\">Set Representation</a></h2>\n<p>One of the ways to represent:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>n</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mn>2</mn><mo separator=\"true\">,</mo><mi>n</mi><mn>3...</mn><mi>n</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">A = \\{ n1, n2, n3 ... n \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord\">3...</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">}</span></span></span></span> <em><strong>--> Infinite Set</strong></em></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>n</mi><mn>2</mn><mo separator=\"true\">,</mo><mi>n</mi><mn>3</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">B = \\{ n2, n3 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord\">3</span><span class=\"mclose\">}</span></span></span></span> <em><strong>--> Finite Set</strong></em></p>\n<p>We can say so that:</p>\n<ul>\n<li><strong>Belongs to</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mn>1</mn><mo>∈</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">n1 \\in N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></li>\n<li><strong>Does not belong to</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo mathvariant=\"normal\">∉</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">x \\notin N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"llap\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.0556em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></li>\n<li><strong>Subset / Supset</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>⊂</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">B \\subset A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊃</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\supset B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊃</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span></li>\n<li><strong>Union</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∪</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">A \\cup \\{ x \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">}</span></span></span></span></li>\n<li><strong>Intersection</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∩</mo><mi>B</mi><mo>=</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\cap B = B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span></li>\n</ul>\n<p>Symbols:</p>\n<ul>\n<li><em><strong>Empty Set: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∅</mi></mrow><annotation encoding=\"application/x-tex\">\\emptyset</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.0556em;\"></span><span class=\"mord\">∅</span></span></span></span></strong></em> or <em><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mclose\">}</span></span></span></span></strong></em></li>\n<li><em><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⇔</mo></mrow><annotation encoding=\"application/x-tex\">\\Leftrightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">⇔</span></span></span></span> means \"if and only if\" in logic.</strong></em></li>\n<li><em><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∨</mo></mrow><annotation encoding=\"application/x-tex\">\\lor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∨</span></span></span></span> means \"or\" in logic.</strong></em></li>\n<li><em><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∧</mo></mrow><annotation encoding=\"application/x-tex\">\\land</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∧</span></span></span></span> means \"and\" in logic.</strong></em></li>\n</ul>\n<h2 id=\"brief-explanation-of-progressions\"><a class=\"anchor\" href=\"#brief-explanation-of-progressions\">Brief Explanation of Progressions</a></h2>\n<p>Aritmetic Progression: a1, a2, a3 ... an</p>\n<p>Formula: an = a1 + (n - 1) * r\na1 = first element\nn = position we want to know\nr = ratio</p>\n<p>This is not very relevant besides the result of progressions can be defined as sets.</p>\n<p>So I basically just learned something and inserted here to not forget :P</p>\n<h2 id=\"implicit-sets-representation\"><a class=\"anchor\" href=\"#implicit-sets-representation\">Implicit Sets Representation</a></h2>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">A = \\{ x | p(x) \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)}</span></span></span></span></p>\n<p>Basically, it means that A is a set of all x that satisfies the property p(x).</p>\n<p><em><strong>Example:</strong></em></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><msup><mi>x</mi><mn>2</mn></msup><mo>=</mo><mn>9</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">A = \\{ x | x^2 = 9 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">9</span><span class=\"mclose\">}</span></span></span></span></p>\n<ul>\n<li>So, the only values that elevates to 2 and results in 9 are 3 and -3. Then, the solution in steps is:</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>=</mo><mn>9</mn><mo>⇔</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>9</mn><mo>=</mo><mn>0</mn><mo>⇔</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">x^2 = 9 \\Leftrightarrow x^2 - 9 = 0 \\Leftrightarrow (x - 3)(x + 3) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> <em><strong>[notable product]</strong></em></p>\n<ul>\n<li><em><strong>The product of two numbers is zero if and only if one of them is zero.</strong></em></li>\n</ul>\n<p>So, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn><mo>⇔</mo><mi>x</mi><mo>−</mo><mn>3</mn><mo>=</mo><mn>0</mn><mo>∨</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>=</mo><mn>0</mn><mo>⇔</mo><mi>x</mi><mo>=</mo><mn>3</mn><mo>∨</mo><mi>x</mi><mo>=</mo><mo>−</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">(x - 3)(x + 3) = 0 \\Leftrightarrow x - 3 = 0 \\lor x + 3 = 0 \\Leftrightarrow x = 3 \\lor x = -3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">3</span></span></span></span></p>\n<p>Result: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mn>3</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>3</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">A = \\{ 3, -3 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">3</span><span class=\"mclose\">}</span></span></span></span></p>\n<ul>\n<li><em><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>9</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">x^2 -9 = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> is a quadratic equation. So we could also use the Bhaskara's Formula to solve it.</strong></em></li>\n</ul>\n<p><em><strong>Example 2:</strong></em></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">∣</mi><msup><mi>x</mi><mn>2</mn></msup><mo>=</mo><mn>9</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">B = \\{ x \\in \\mathbb{Z} | x^2 = 9 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">9</span><span class=\"mclose\">}</span></span></span></span></p>\n<ul>\n<li>Only difference is that we are saying that x is an integer. We do it before the pipe.</li>\n</ul>\n<p>Result: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mn>3</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>3</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">B = \\{ 3, -3 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">3</span><span class=\"mclose\">}</span></span></span></span></p>\n<h2 id=\"empty-set\"><a class=\"anchor\" href=\"#empty-set\">Empty Set</a></h2>\n<p>It's valid to say that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∅</mi><mo>⊂</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">\\emptyset \\subset X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.0556em;\"></span><span class=\"mord\">∅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> for any set <em>X</em>.</p>\n<h2 id=\"numerical-sets\"><a class=\"anchor\" href=\"#numerical-sets\">Numerical Sets</a></h2>\n<ul>\n<li><em><strong>Natual Numbers ( <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> )</strong></em>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{ 1, 2, 3, ... \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mclose\">}</span></span></span></span>\n<ul>\n<li><em>Some authors include 0 in the set of natural numbers and others don't.</em></li>\n</ul>\n</li>\n<li><em><strong>Integers ( <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> )</strong></em>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{ ..., -2, -1, 0, 1, 2, ... \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mclose\">}</span></span></span></span></li>\n<li><em><strong>Rational Numbers ( <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span> )</strong></em>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mfrac><mi>p</mi><mi>q</mi></mfrac><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mo separator=\"true\">,</mo><mi>q</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Z</mi><mo>∧</mo><mi>q</mi><mo mathvariant=\"normal\">≠</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{ \\frac{p}{q} | p, q \\in \\mathbb{Z} \\land q \\neq 0 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2311em;vertical-align:-0.4811em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7475em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span>\n<ul>\n<li><em><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> is the numerator and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> is the denominator.</em></li>\n<li>Every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span> can be represented as a fraction.</li>\n</ul>\n</li>\n<li><em><strong>Real Numbers ( <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> )</strong></em>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Q</mi><mo>∨</mo><mi>x</mi><mo mathvariant=\"normal\">∉</mo><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{ x | x \\in \\mathbb{Q} \\lor x \\notin \\mathbb{Q} \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"llap\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.0556em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mclose\">}</span></span></span></span></li>\n<li><em><strong>Irrational Numbers ( <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi><mo>−</mo><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R} - \\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7722em;vertical-align:-0.0833em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span> )</strong></em>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo mathvariant=\"normal\">∉</mo><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{ x | x \\notin \\mathbb{Q} \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord\"><span class=\"mrel\">∈</span></span><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"llap\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.0556em;\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mclose\">}</span></span></span></span>\n<ul>\n<li><em>Irrational numbers are real numbers that cannot be represented as a fraction, because their decimal part is infinite and non-repeating.</em></li>\n<li><em>Example: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span></em></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"interval-sets\"><a class=\"anchor\" href=\"#interval-sets\">Interval Sets</a></h2>\n<ul>\n<li><em>We can represent numbers as a line, where each point is a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\in \\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>.</em></li>\n<li><em>So we can represent sets of numbers as intervals between points in the line.</em></li>\n</ul>\n<p><em><strong>Example:</strong></em></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mo>&#x3C;</mo><mi>x</mi><mo>&#x3C;</mo><mi>b</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{x \\in \\mathbb{R} | a &#x3C; x &#x3C; b\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">}</span></span></span></span></p>\n<ul>\n<li><em>This set represents all real numbers between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>, being <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> excluded.</em></li>\n</ul>\n<p><em><strong>Example 2:</strong></em></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>≥</mo><mi>a</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{x \\in \\mathbb{R} | x \\geq a\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">}</span></span></span></span></p>\n<ul>\n<li><em>This set represents all real numbers greater than or equal to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>. It's the same as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[a, +\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> (other representation form).</em></li>\n</ul>\n<h2 id=\"absolute-value\"><a class=\"anchor\" href=\"#absolute-value\">Absolute Value</a></h2>\n<p>We can relate algebraic representations with geometric representations with the concept of axies in a cartesian plane.</p>\n<ul>\n<li><em>Example, we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>−</mo><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">|x - 1| = 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span>, that means the distance between x and 1 corresponds to 3 units. The solution is a set of the possible X values, as we see below:</em></li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mn>4</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">S = \\{4, -2\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mclose\">}</span></span></span></span></p>\n<h2 id=\"operations-between-sets\"><a class=\"anchor\" href=\"#operations-between-sets\">Operations Between Sets</a></h2>\n<h3 id=\"venn-diagrams\"><a class=\"anchor\" href=\"#venn-diagrams\">Venn Diagrams</a></h3>\n<ul>\n<li><em>The logic is simple: Basically we have a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> set called universe and all the sets in the operaton must be a subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>.</em></li>\n</ul>\n<p>By that we can have:</p>\n<ul>\n<li><em><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo>−</mo><mi>X</mi><mo>=</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">U - X = X'</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">X'</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is the complementary set of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, meaning is what it needs to be equal to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>)</em></li>\n</ul>\n<p>Notation for operatons:</p>\n<ul>\n<li>All basic stuff, ex: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∩</mo><mi>B</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi>U</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>∈</mo><mi>A</mi><mo>∧</mo><mi>x</mi><mo>∈</mo><mi>B</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">A \\cap B = \\{ x \\in U | x \\in A \\land x \\in B \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">}</span></span></span></span>, and etc, etc.</li>\n</ul>\n<h2 id=\"multiplication-principle\"><a class=\"anchor\" href=\"#multiplication-principle\">Multiplication Principle</a></h2>\n<h3 id=\"factorial\"><a class=\"anchor\" href=\"#factorial\">Factorial</a></h3>\n<ul>\n<li><em>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo stretchy=\"false\">!</mo><mo>=</mo><mi>n</mi><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>∗</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n! = n * (n - 1) * (n - 2) * ... * 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></em></li>\n<li><em>Conventions: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo stretchy=\"false\">!</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0! = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></em></li>\n<li><strong>Note that the product of consecutive integers can be represented as a factorial.</strong>\n<ul>\n<li>Ex: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn><mo>∗</mo><mn>11</mn><mo>∗</mo><mn>12</mn><mo>∗</mo><mn>13</mn><mo>∗</mo><mn>14</mn><mo>=</mo><mfrac><mrow><mn>9</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mn>9</mn><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>∗</mo><mn>10</mn><mo>∗</mo><mn>11</mn><mo>∗</mo><mn>12</mn><mo>∗</mo><mn>13</mn><mo>∗</mo><mn>14</mn><mo>=</mo><mfrac><mrow><mn>14</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mn>9</mn><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">10 * 11 * 12 * 13 * 14 = \\frac{9!}{9!} * 10 * 11 * 12 * 13 * 14 = \\frac{14!}{9!}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">11</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">12</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">13</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">14</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">9</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">9</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">11</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">12</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">13</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">14</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">9</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">14</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"arrangements\"><a class=\"anchor\" href=\"#arrangements\">Arrangements</a></h3>\n<ul>\n<li><em>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>A</mi><mi>n</mi><mi>p</mi></msubsup><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">A_{n}^{p} = \\frac{n!}{(n - p)!}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9303em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4001em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mclose mtight\">)!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></em>\n<ul>\n<li>Ex (10 objects for 3 piles): <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn><mo>∗</mo><mn>9</mn><mo>∗</mo><mn>8</mn><mo>=</mo><mfrac><mrow><mn>10</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mn>10</mn><mo>−</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>10</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mn>7</mn><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>=</mo><mn>10</mn><mo>∗</mo><mn>9</mn><mo>∗</mo><mn>8</mn><mo>=</mo><mn>720</mn></mrow><annotation encoding=\"application/x-tex\">10 * 9 * 8 = \\frac{10!}{(10 - 3)!} = \\frac{10!}{7!} = 10 * 9 * 8 = 720</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4001em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">10</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">3</span><span class=\"mclose mtight\">)!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">7</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">720</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"permutation\"><a class=\"anchor\" href=\"#permutation\">Permutation</a></h4>\n<ul>\n<li><em>Particular arrangement case where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">p = n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></em></li>\n<li>*Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>A</mi><mi>n</mi><mi>n</mi></msubsup><mo>=</mo><msub><mi>P</mi><mi>n</mi></msub><mo>=</mo><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">A_{n}^{n} = P_{n} = n!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9303em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">!</span></span></span></span></li>\n<li><em>A good example of it are anagrams.</em></li>\n</ul>\n<h4 id=\"combination\"><a class=\"anchor\" href=\"#combination\">Combination</a></h4>\n<ul>\n<li><em><strong>Ordination doesn't matter.</strong></em>\n<ul>\n<li>Ex. with sets: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">}</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{a, b\\} = \\{b, a\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">}</span></span></span></span></li>\n</ul>\n</li>\n<li><em>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>C</mi><mi>p</mi><mi>n</mi></msubsup><mo>=</mo><mfrac><msubsup><mi>A</mi><mi>p</mi><mi>n</mi></msubsup><mrow><mi>p</mi><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mi>p</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">C_{p}^{n} = \\frac{A_{p}^{n}}{p!} = \\frac{n!}{(n-p)!p!}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0664em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6055em;vertical-align:-0.4811em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1244em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6074em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385em;\"><span style=\"top:-2.214em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4249em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4001em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mclose mtight\">)!</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></em></li>\n<li><em><strong>Basically we divide by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">p!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">!</span></span></span></span> the permutation result to eliminate the repetitions/copies of sets.</strong></em></li>\n</ul>\n<h4 id=\"with-repetition\"><a class=\"anchor\" href=\"#with-repetition\">With Repetition</a></h4>\n<ul>\n<li><em>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><msubsup><mi>R</mi><mi>p</mi><mi>n</mi></msubsup><mo>=</mo><mi>n</mi><mo>∗</mo><mi>n</mi><mo>∗</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>∗</mo><mi>n</mi><mo>=</mo><msup><mi>n</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">AR_{p}^{n} = n * n * ... * n = n^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0664em;vertical-align:-0.3831em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span></em></li>\n</ul>\n<h5 id=\"permutation-with-repetition\"><a class=\"anchor\" href=\"#permutation-with-repetition\">Permutation With Repetition</a></h5>\n<ul>\n<li><em>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><msubsup><mi>R</mi><mrow><mi>p</mi><mo separator=\"true\">,</mo><mi>q</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi></mrow><mi>n</mi></msubsup><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mi>p</mi><mo stretchy=\"false\">!</mo><mo>∗</mo><mi>q</mi><mo stretchy=\"false\">!</mo><mo>∗</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>∗</mo><mi>t</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">AR_{p, q, ... t}^{n} = \\frac{n!}{p! * q! * ... * t!}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0664em;vertical-align:-0.3831em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">...</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3612em;vertical-align:-0.4811em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mclose mtight\">!</span><span class=\"mbin mtight\">∗</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mclose mtight\">!</span><span class=\"mbin mtight\">∗</span><span class=\"mord mtight\">...</span><span class=\"mbin mtight\">∗</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></em>\n<ul>\n<li>Ex. The anagram of the word ARARAQUARA: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><msubsup><mi>R</mi><mrow><mn>5</mn><mo separator=\"true\">,</mo><mn>3</mn></mrow><mn>10</mn></msubsup><mo>=</mo><mfrac><mrow><mn>10</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mn>5</mn><mo stretchy=\"false\">!</mo><mo>∗</mo><mn>3</mn><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>=</mo><mn>7</mn><mo>∗</mo><mn>8</mn><mo>∗</mo><mn>9</mn><mo>∗</mo><mn>10</mn><mo>=</mo><mn>5040</mn></mrow><annotation encoding=\"application/x-tex\">AR_{5, 3}^{10} = \\frac{10!}{5!*3!} = 7 * 8 * 9 * 10 = 5040</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1983em;vertical-align:-0.3842em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">3</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3842em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span><span class=\"mclose mtight\">!</span><span class=\"mbin mtight\">∗</span><span class=\"mord mtight\">3</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5040</span></span></span></span>\n<ul>\n<li>5 is the number of times A appears in the word</li>\n<li>3 is the number of times R appears in the word</li>\n<li><strong>If you trade positions between these letters, you will end up with the same anagram.</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"circular-permutation\"><a class=\"anchor\" href=\"#circular-permutation\">Circular Permutation</a></h6>\n<ul>\n<li>*Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><msub><mi>C</mi><mi>n</mi></msub><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mi>n</mi></mfrac><mo>=</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">PC_{n} = \\frac{n!}{n} = (n - 1)!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)!</span></span></span></span></li>\n</ul>\n<h5 id=\"combination-with-repetition\"><a class=\"anchor\" href=\"#combination-with-repetition\">Combination With Repetition</a></h5>\n<ul>\n<li><em>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><msubsup><mi>R</mi><mi>p</mi><mi>n</mi></msubsup><mo>=</mo><mi>P</mi><msubsup><mi>R</mi><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">CR_{p}^{n} = PR_{n, p - 1}^{n + p - 1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0664em;vertical-align:-0.3831em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3344em;vertical-align:-0.4024em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.932em;\"><span style=\"top:-2.4337em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.1809em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4024em;\"><span></span></span></span></span></span></span></span></span></span></em>\n<ul>\n<li>Ex. 3 types, 8 items:\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><msubsup><mi>R</mi><mn>3</mn><mn>8</mn></msubsup><mo>=</mo><mi>P</mi><msubsup><mi>R</mi><mrow><mn>8</mn><mo separator=\"true\">,</mo><mn>2</mn></mrow><mn>10</mn></msubsup><mo>=</mo><mfrac><mrow><mn>10</mn><mo stretchy=\"false\">!</mo></mrow><mrow><mn>8</mn><mo stretchy=\"false\">!</mo><mo>∗</mo><mn>2</mn><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>=</mo><mn>45</mn></mrow><annotation encoding=\"application/x-tex\">CR_{3}^{8} = PR_{8, 2}^{10} = \\frac{10!}{8! * 2!} = 45</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0622em;vertical-align:-0.2481em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">8</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1983em;vertical-align:-0.3842em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">8</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3842em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">8</span><span class=\"mclose mtight\">!</span><span class=\"mbin mtight\">∗</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">45</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"
  },
  {
    "title": "Propositional Calculus",
    "content": "<h2 id=\"composed-and-simple-propositions\"><a class=\"anchor\" href=\"#composed-and-simple-propositions\">Composed and Simple Propositions</a></h2>\n<ul>\n<li>A <strong>proposition</strong> is a statement that is either true or false.</li>\n<li>A <strong>simple proposition</strong> is a proposition that is not composed of other propositions.</li>\n<li>A <strong>composed proposition</strong> is a proposition that is composed of other propositions.\n<ul>\n<li>Notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo separator=\"true\">,</mo><mi>q</mi><mo separator=\"true\">,</mo><mi>r</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(p, q, r, ...)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>Symbols:\n<ul>\n<li>~ or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\neg</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">¬</span></span></span></span> (negation)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∧</mo></mrow><annotation encoding=\"application/x-tex\">\\land</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∧</span></span></span></span> (conjunction)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∨</mo></mrow><annotation encoding=\"application/x-tex\">\\lor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∨</span></span></span></span> (disjunction)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊻</mo></mrow><annotation encoding=\"application/x-tex\">\\veebar</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8867em;vertical-align:-0.1944em;\"></span><span class=\"mord amsrm\">⊻</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding=\"application/x-tex\">\\oplus</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊕</span></span></span></span> (exclusive or)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span> (implication)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>↔</mo></mrow><annotation encoding=\"application/x-tex\">\\leftrightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">↔</span></span></span></span> (biconditional)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>↑</mo></mrow><annotation encoding=\"application/x-tex\">\\uparrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mrel\">↑</span></span></span></span> (nand - not and)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>↓</mo></mrow><annotation encoding=\"application/x-tex\">\\downarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mrel\">↓</span></span></span></span> (nor - not or)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"aristotles-logic\"><a class=\"anchor\" href=\"#aristotles-logic\">Aristotle's Logic</a></h2>\n<ul>\n<li>Syllogism: A form of deductive reasoning consisting of a <strong>major premise, a minor premise, and a conclusion</strong>.\n<ul>\n<li>Ex: <em>\"Every man is mortal. Socrates is a man. Therefore, Socrates is mortal.\"</em></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"truth-tables\"><a class=\"anchor\" href=\"#truth-tables\">Truth Tables</a></h1>\n<h2 id=\"simple-proposition\"><a class=\"anchor\" href=\"#simple-proposition\">Simple Proposition</a></h2>\n<p>| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> |\n| --- |\n| T   |\n| F   |</p>\n<h2 id=\"composed-proposition\"><a class=\"anchor\" href=\"#composed-proposition\">Composed Proposition</a></h2>\n<p>| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> |\n| --- | --- |\n| T   | T   |\n| T   | F   |\n| F   | T   |\n| F   | F   |</p>\n<h2 id=\"example\"><a class=\"anchor\" href=\"#example\">Example</a></h2>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\underbrace{\\left(\\underbrace{p \\land q}_{T}\\right) \\rightarrow</span></span>\n<span class=\"line\"><span>\\left(\\underbrace{\\underbrace{\\neg q}_{F} \\rightarrow \\underbrace{p}_{T}}_{T}\\right)}_{T}</span></span></code></pre>\n<p><em><strong>And the truth table:</strong></em></p>\n<p>| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∧</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">p \\land q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">\\neg q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi>q</mi><mo>→</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\neg q \\rightarrow p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∧</mo><mi>q</mi><mo>→</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">¬</mi><mi>q</mi><mo>→</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p \\land q \\rightarrow (\\neg q \\rightarrow p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">¬</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span>  |\n| --- | --- | ----------- | -------- | ---------------------- | ----------------------------------------------- |\n| T   | T   | T           | F        | T                      | T                                               |\n| T   | F   | F           | T        | T                      | T                                               |\n| F   | T   | F           | F        | T                      | T                                               |\n| F   | F   | F           | T        | F                      | T                                               |</p>\n<h1 id=\"introduction-to-boolean-algebra\"><a class=\"anchor\" href=\"#introduction-to-boolean-algebra\">Introduction to Boolean Algebra</a></h1>\n<h2 id=\"contradiction\"><a class=\"anchor\" href=\"#contradiction\">Contradiction</a></h2>\n<ul>\n<li>A proposition that is always false.</li>\n</ul>\n<h2 id=\"tautology\"><a class=\"anchor\" href=\"#tautology\">Tautology</a></h2>\n<ul>\n<li>A proposition that is always true.</li>\n</ul>\n<h2 id=\"contingency\"><a class=\"anchor\" href=\"#contingency\">Contingency</a></h2>\n<ul>\n<li>A proposition that is neither a tautology nor a contradiction.</li>\n</ul>\n<h2 id=\"boolean-algebra\"><a class=\"anchor\" href=\"#boolean-algebra\">Boolean Algebra</a></h2>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">T = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">F = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∧</mo><mo>=</mo><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">\\land = *</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∧</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord\">∗</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∨</mo><mo>=</mo><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">\\lor = +</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord\">∨</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi><mi>x</mi><mo>=</mo><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\neg x = \\overline{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">¬</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6306em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<h2 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">Example</a></h2>\n<p>| <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>p</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.825em;vertical-align:-0.1944em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>p</mi><mo stretchy=\"true\">‾</mo></mover><mo>+</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">\\overline{p} + q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.825em;vertical-align:-0.1944em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> |\n| --- | --- | -------------- | ------------------ |\n| 1   | 1   | 0              | 1                  |\n| 1   | 0   | 0              | 0                  |\n| 0   | 1   | 1              | 1                  |\n| 0   | 0   | 1              | 1                  |</p>\n<h1 id=\"logical-implication-logical-equivalence-and-inference-rules\"><a class=\"anchor\" href=\"#logical-implication-logical-equivalence-and-inference-rules\">Logical Implication, Logical Equivalence and Inference Rules</a></h1>\n<ul>\n<li><strong>Logical Implication</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∧</mo><mi>q</mi><mo>⇒</mo><mi>p</mi><mo>∨</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">p \\land q \\Rightarrow p \\lor q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span></li>\n<li><strong>Logical Equivalence</strong>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>∧</mo><mi>q</mi><mo>⇔</mo><mi>p</mi><mo>∨</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">p \\land q \\Leftrightarrow p \\lor q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∨</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span></li>\n</ul>\n<h2 id=\"inference-rules\"><a class=\"anchor\" href=\"#inference-rules\">Inference Rules:</a></h2>\n<ul>\n<li><em>Modus Ponens</em>:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\underbrace{p \\rightarrow q}_{T} \\land \\underbrace{p}_{T} \\therefore \\underbrace{q}_{T}</span></span></code></pre>\n<ul>\n<li><em>Modus Tollens</em>:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\underbrace{p \\rightarrow q}_{T} \\land \\underbrace{\\neg q}_{T} \\therefore \\underbrace{\\neg p}_{T}</span></span></code></pre>\n<ul>\n<li><em>Hypothetical Syllogism</em>:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\underbrace{p \\rightarrow q}_{T} \\land \\underbrace{q \\rightarrow r}_{T} \\therefore \\underbrace{p \\rightarrow r}_{T}</span></span></code></pre>\n<ul>\n<li><em>Disjunctive Syllogism</em>:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\underbrace{p \\land q}_{T} \\land \\underbrace{\\neg p}_{T} \\therefore \\underbrace{q}_{T}</span></span></code></pre>\n<ul>\n<li>etc.</li>\n</ul>"
  },
  {
    "title": "Create and Manipulate Objects in Postgresql",
    "content": "<h2 id=\"architecture\"><a class=\"anchor\" href=\"#architecture\">Architecture</a></h2>\n<p>Postgresql uses client-server model.</p>\n<p><em><strong>Server Processes:</strong></em></p>\n<ul>\n<li>Manage database archives</li>\n<li>Manage connections between applications and SGDB</li>\n<li>Verify and execute commands sent by clients on the database</li>\n</ul>\n<p><em><strong>Client Processes:</strong></em></p>\n<ul>\n<li>Require SGDB access</li>\n<li>Send manipulation commands</li>\n<li>Send query commands</li>\n</ul>\n<p>This architecture allows the database and clients to be on different machines/locations.</p>\n<ul>\n<li>Postgresql supports multiple clients at the same time.</li>\n</ul>\n<h2 id=\"managing-postgresql-database-with-psql\"><a class=\"anchor\" href=\"#managing-postgresql-database-with-psql\">Managing Postgresql Database With psql</a></h2>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">CREATE</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> TABLE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Client (</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">NAME</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> CHAR</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">100</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">),</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">ID </span><span style=\"color:#F97583;--shiki-dark:#F97583\">INT</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> NOT NULL</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> DEFAULT</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">CREATE</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> TABLE</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ \\dp</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">                             Access privileges</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\"> Schema</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> |  </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  | Access privileges | Column privileges | Policies</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">--------+--------+-------+-------------------+-------------------+----------</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> dtsf   | client | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">table</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> |                   |                   |</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> row</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ \\d client</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">                   Table</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"dtsf.client\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Column |      </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      | Collation | Nullable | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Default</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">--------+----------------+-----------+----------+---------</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\"> name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">   | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">character</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">100</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) |           |          |</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> id     | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">integer</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        |           | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">not null</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> | </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">ALTER</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> TABLE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client </span><span style=\"color:#F97583;--shiki-dark:#F97583\">ADD</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> BIRTHDATE </span><span style=\"color:#F97583;--shiki-dark:#F97583\">DATE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">ALTER</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> TABLE</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ \\d client</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">                     Table</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"dtsf.client\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">  Column   |      </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      | Collation | Nullable | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Default</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">-----------+----------------+-----------+----------+---------</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\"> name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">character</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">100</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) |           |          |</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> id        | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">integer</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        |           | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">not null</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> | </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> birthdate | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">date</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">           |           |          |</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">ALTER</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> TABLE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client </span><span style=\"color:#F97583;--shiki-dark:#F97583\">DROP</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> COLUMN birthdate;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">ALTER</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> TABLE</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ \\d client</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">                   Table</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> \"dtsf.client\"</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> Column |      </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Type</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">      | Collation | Nullable | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">Default</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">--------+----------------+-----------+----------+---------</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">   | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">character</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">100</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">) |           |          |</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">id     | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">integer</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">        |           | </span><span style=\"color:#F97583;--shiki-dark:#F97583\">not null</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> | </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">INSERT INTO</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client (</span><span style=\"color:#F97583;--shiki-dark:#F97583\">name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">, id) </span><span style=\"color:#F97583;--shiki-dark:#F97583\">VALUES</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\">'John'</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">, </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">INSERT</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 0</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">SELECT</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> *</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> FROM</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\"> name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> | id</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">------+----</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> John |  </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> (</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> row</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">UPDATE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client </span><span style=\"color:#F97583;--shiki-dark:#F97583\">SET</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> name</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> =</span><span style=\"color:#FFAB70;--shiki-dark:#FFAB70\"> 'John Doe'</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> WHERE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> id </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">UPDATE</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">SELECT</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> *</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> FROM</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">    name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    | id</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">------------+----</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    John Doe   |  </span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">    (</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">1</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> row</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">DELETE</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> FROM</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client </span><span style=\"color:#F97583;--shiki-dark:#F97583\">WHERE</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> id </span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">DELETE</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">dtsf</span><span style=\"color:#F97583;--shiki-dark:#F97583\">=</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">$ </span><span style=\"color:#F97583;--shiki-dark:#F97583\">SELECT</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> *</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> FROM</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> client;</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\"> name</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\"> | id</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">------+----</span></span>\n<span class=\"line\"><span style=\"color:#B392F0;--shiki-dark:#B392F0\">(</span><span style=\"color:#F8F8F8;--shiki-dark:#F8F8F8\">0</span><span style=\"color:#F97583;--shiki-dark:#F97583\"> rows</span><span style=\"color:#B392F0;--shiki-dark:#B392F0\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"constraints\"><a class=\"anchor\" href=\"#constraints\">Constraints</a></h2>\n<p><em><strong>What are constraints?</strong></em></p>\n<ul>\n<li>Constraints are rules that can be applied to a column or a table.</li>\n<li>They are part of the database schema definition.</li>\n<li>They define certain properties that data in a database must comply with.</li>\n</ul>\n<p><em><strong>Common kinds of constraints are:</strong></em></p>\n<ul>\n<li><strong>not null</strong> - each value in a column must not be NULL</li>\n<li><strong>unique</strong> - value(s) in specified column(s) must be unique for each row in a table</li>\n<li><strong>primary key</strong> - value(s) in specified column(s) must be unique for each row in a table and not be NULL; normally each table in a database should have a primary key - it is used to identify individual records</li>\n<li><strong>foreign key</strong> - value(s) in specified column(s) must reference an existing record in another table (via it's primary key or some other unique constraint)</li>\n<li><strong>check</strong> - an expression is specified, which must evaluate to true for constraint to be satisfied</li>\n</ul>\n<h2 id=\"transactions\"><a class=\"anchor\" href=\"#transactions\">Transactions</a></h2>\n<h3 id=\"states-of-a-transaction\"><a class=\"anchor\" href=\"#states-of-a-transaction\">States of a Transaction</a></h3>\n<ul>\n<li><em><strong>Active</strong></em>: The transaction is running, executing queries (read and/or write).</li>\n<li><em><strong>Partially Committed</strong></em>: The transaction has finished executing.\n<ul>\n<li><em><strong>Committed</strong></em>: After succeeded validation, the transaction is committed and the changes are made permanent.</li>\n<li><em><strong>Failed</strong></em>: If validation fails or the transaction is aborted, the transaction is failed.</li>\n</ul>\n</li>\n<li><em><strong>Finished</strong></em>: Transaction get out of the system.</li>\n</ul>\n<h3 id=\"postgresql-transactions\"><a class=\"anchor\" href=\"#postgresql-transactions\">Postgresql Transactions</a></h3>\n<p>Transactions in Postgresql follows the structure:</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">BEGIN</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">-- Start a transaction</span></span>\n<span class=\"line\"><span style=\"color:#6B737C;--shiki-dark:#6B737C\">    -- SQL commands</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">COMMIT</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">-- Commit the transaction</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">ROLLBACK</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">-- Rollback the transaction</span></span>\n<span class=\"line\"><span style=\"color:#F97583;--shiki-dark:#F97583\">END</span><span style=\"color:#6B737C;--shiki-dark:#6B737C\">-- End the transaction</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"multiple-clients-and-uncontrolled-transactions\"><a class=\"anchor\" href=\"#multiple-clients-and-uncontrolled-transactions\">Multiple Clients and Uncontrolled Transactions</a></h3>\n<p>This scenario might bring the following problems:</p>\n<ul>\n<li><em><strong>Problem 1: Lost Update</strong></em>: When two transactions that access the same data have their operations intercalated in a way that might left the data incorrect.</li>\n<li><em><strong>Problem 2: Temporary Update</strong></em>: When a transaction updates a database item and then fails for some reason, while in the meantime the item is read by another transaction before being changed back to its original value.</li>\n<li><em><strong>Problem 3: Incorrect Summary</strong></em>: When a transaction reads a database item that is being updated by another transaction and then performs a calculation based on the old value.</li>\n<li><em><strong>Problem 4: Non-Repeatable Read</strong></em>: When a transaction reads the same item twice and the value is altered by another transaction between the two reads.</li>\n</ul>\n<p><strong>OBS: These problems occurs only with uncontrolled transactions and multiple clients.</strong></p>"
  },
  {
    "title": "Data Modeling: Conceptual Modeling",
    "content": "<h2 id=\"01\"><a class=\"anchor\" href=\"#01\">01</a></h2>\n<h3 id=\"steps\"><a class=\"anchor\" href=\"#steps\">Steps</a></h3>\n<ol>\n<li>Conceptual: Entity-Relationship Diagram (ERD) or UML Class Diagram.</li>\n<li>Logical: Tables and relationships originated from the conceptual model.</li>\n<li>Physical: Tables and relationships with the physical characteristics of the database (indexes, partitions, data types, etc).</li>\n</ol>\n<h2 id=\"02\"><a class=\"anchor\" href=\"#02\">02</a></h2>\n<h3 id=\"entity\"><a class=\"anchor\" href=\"#entity\">Entity</a></h3>\n<p>According to Heuser (2009), it's the representation of a set of objects from the modelling reality which it's relevant to keep information about in the database.</p>\n<h3 id=\"relationship\"><a class=\"anchor\" href=\"#relationship\">Relationship</a></h3>\n<p>According to Heuser (2009), it's the property of the entity that specifies the associations between the objects. It corresponds to a set of associations between occurrencies of entities.</p>\n<h3 id=\"self-relationship\"><a class=\"anchor\" href=\"#self-relationship\">Self-Relationship</a></h3>\n<p>Occurs when there's a prerequisite relationship between the entity and itself. For example, in order to course Calculus 2, the student must have passed Calculus 1. That way, there's a self-relation for Discipline entity.</p>\n<h3 id=\"cardinality\"><a class=\"anchor\" href=\"#cardinality\">Cardinality</a></h3>\n<p>(min, max) notation. It doesn't change relative to the entity, it's always from left to right and means the participation of the entity in the relationship. (0, n) means it can participate <strong>n</strong> times and also don't participate.</p>\n<h3 id=\"attributes\"><a class=\"anchor\" href=\"#attributes\">Attributes</a></h3>\n<p>Entities and relationships can have properties that are specified by the attributes. By definition attributes corresponds to a data that is associed with every occurrence of one entity or relationship.</p>\n<h4 id=\"cardinality-in-attributes\"><a class=\"anchor\" href=\"#cardinality-in-attributes\">Cardinality in Attributes</a></h4>\n<p>| Min | Max | Meaning |\n| --- | --- | ------- |\n| 0 | 1 | Optional, Monovalued |\n| 0 | n | Optional, Multivalued |\n| 1 | 1 | Mandatory, Monovalued |\n| 1 | n | Mandatory, Multivalued |</p>\n<h4 id=\"composed-attributes\"><a class=\"anchor\" href=\"#composed-attributes\">Composed Attributes</a></h4>\n<p>An address attribute can be subdivided in street, number, city, state, etc.</p>\n<h3 id=\"specialization--generalization\"><a class=\"anchor\" href=\"#specialization--generalization\">Specialization / Generalization</a></h3>\n<p>Let's say we have a Employee entity, but we want to, besides having employees that are not managers, have managers that are also employees.</p>\n<p>We can create <strong>a specialization of the Employee entity, called Manager, that will inherit all the attributes of the Employee entity</strong>.</p>\n<p>We can also specify attributes that only refers to managers in that way.</p>\n<p>Also we could have other specializations, like Analyst, and we could have a Employee that is both a Manager and a Analyst (we can define those rules of wether the specializatins are shared or exclusive).</p>\n<h2 id=\"04\"><a class=\"anchor\" href=\"#04\">04</a></h2>\n<h3 id=\"attribute-x-specialization\"><a class=\"anchor\" href=\"#attribute-x-specialization\">Attribute X Specialization</a></h3>\n<p>To decide wether attribute or specialization should be used to represent an object, the criteria is: <strong>if the object has attributes or relationships, then it should be represented by a relationship</strong>.</p>\n<h3 id=\"optional-attributes\"><a class=\"anchor\" href=\"#optional-attributes\">Optional Attributes</a></h3>\n<p>When an entity has a lot of optional attributes, a closer look is needed to see if any of those attributes is one probable specialization.</p>\n<h3 id=\"composed-attributes-1\"><a class=\"anchor\" href=\"#composed-attributes-1\">Composed Attributes</a></h3>\n<p>It's also common to model composed attributes as entities, for example, an address attribute can be modeled as an Address entity. This way the outcome is less dense.</p>"
  },
  {
    "title": "Discussing about databases - From Fabio Akita YouTube channels",
    "content": "<h2 id=\"b-tree\"><a class=\"anchor\" href=\"#b-tree\">B-tree</a></h2>\n<p>It's a self-balancing tree data structure. It takes almost the same time to access each node.</p>\n<h2 id=\"dbase\"><a class=\"anchor\" href=\"#dbase\">dBase</a></h2>\n<p>dBase was one of the first database management systems for microcomputers and the most successful in its day.</p>\n<p>It used append-only files, that represented tables, which are called dbf files. You could generate indexes for these files.</p>\n<p>The index files used a B-tree structure.</p>\n<h2 id=\"sqlite\"><a class=\"anchor\" href=\"#sqlite\">SQLite</a></h2>\n<p>SQLite differs from dBase in the sense that it uses only one file with a B-tree structure. This file represents the whole database instead of just one table.</p>"
  },
  {
    "title": "Data Modeling: Logical & Physical Modeling",
    "content": "<h1 id=\"01\"><a class=\"anchor\" href=\"#01\">01</a></h1>\n<h2 id=\"primary-key\"><a class=\"anchor\" href=\"#primary-key\">Primary Key</a></h2>\n<p>Every PK has the following properties:</p>\n<ul>\n<li><strong>Unique</strong>: No two tables can have the same PK value.</li>\n<li><strong>Mandatory</strong>: A PK value cannot be null.</li>\n<li><strong>Monovalued</strong>: Maximum one value of PK.</li>\n</ul>\n<h2 id=\"composed-primary-key\"><a class=\"anchor\" href=\"#composed-primary-key\">Composed Primary Key</a></h2>\n<p>Basically it happens when a single PK isn't enough to identify a row.</p>\n<p>Ex:</p>\n<p><strong>Dependents Table</strong>:</p>\n<p>| Employee ID (FK) | Dependent ID | Dependent Name | Date of Birth |\n| ---------------- | ------------ | -------------- | ------------- |\n| 2                | 1            | John Doe       | 01/01/2000    |\n| 1                | 2            | Jane Doe       | 01/01/2001    |</p>\n<p>In this case, the PK is composed by the columns <strong>Employee ID</strong> and <strong>Dependent ID</strong>.</p>\n<p>It happens because not the <strong>Employee ID</strong> nor the <strong>Dependent ID</strong> alone is enough to identify a row.</p>\n<h2 id=\"some-concepts\"><a class=\"anchor\" href=\"#some-concepts\">Some Concepts</a></h2>\n<ul>\n<li><strong>Minimal Key</strong>: Every column of the PK have to be necessary and sufficient to identify a row.</li>\n<li><strong>Candidate Key</strong>: A minimal key that can be used as PK. Ex: <strong>Employee ID</strong> and <strong>Employee CPF</strong>. In this case, both are candidate keys.</li>\n<li><strong>Alternate Key</strong>: A candidate key that is not the PK. Ex: <strong>Employee CPF</strong>.</li>\n</ul>\n<h2 id=\"foreign-key\"><a class=\"anchor\" href=\"#foreign-key\">Foreign Key</a></h2>\n<p>Let's use the <strong>Dependents Table</strong> again, but now with the <strong>Employees Table</strong> as well.</p>\n<p><strong>Employees Table</strong>:</p>\n<p>| Employee ID | Employee Name | Employee Birth Date |\n| ----------- | ------------- | ------------------- |\n| 1           | John Doe      | 01/01/1980          |\n| 2           | Jane Doe      | 01/01/1981          |</p>\n<p><strong>Employee ID</strong> is the PK of the <strong>Employees Table</strong> and the <strong>Dependents Table</strong> has a FK to it.</p>\n<p>The reason of it is because the tables are related, so we should have a way to access what is the responsible employee from the dependent table, and we do that by referring the employee with a FK.</p>\n<ul>\n<li><em>The value of the FK must exist in the PK of the table that it refers to</em>.</li>\n</ul>\n<h1 id=\"02\"><a class=\"anchor\" href=\"#02\">02</a></h1>\n<h2 id=\"normalization\"><a class=\"anchor\" href=\"#normalization\">Normalization</a></h2>\n<p>It's a process that consists in 5 normal forms: 1NF, 2NF, 3NF, 4NF and 5NF. Normally we use until the 3NF. Let's see how it works untill the 3FN:</p>\n<ul>\n<li>Identify the data origin;</li>\n<li>Build a not normalized table from the data;</li>\n<li>Apply the 1NF rules;</li>\n<li>Apply the 2NF rules;</li>\n<li>Apply the 3NF rules.</li>\n</ul>\n<h3 id=\"1nf\"><a class=\"anchor\" href=\"#1nf\">1NF</a></h3>\n<p>A table is in agreement with the 1NF when:</p>\n<ul>\n<li>There's no multivalued attributes and no composite attributes;</li>\n</ul>\n<h3 id=\"2nf\"><a class=\"anchor\" href=\"#2nf\">2NF</a></h3>\n<p>A table is in agreement with the 2NF when:</p>\n<ul>\n<li>It is in agreement with the 1NF;</li>\n<li>It has no partial functional dependencies.</li>\n</ul>\n<h4 id=\"partial-functional-dependency\"><a class=\"anchor\" href=\"#partial-functional-dependency\">Partial Functional Dependency</a></h4>\n<p>It happens when a non-key column depends on a part of the PK. Ex:</p>\n<p><strong>Teacher Table</strong>:</p>\n<p>| Project ID | Teacher ID | Teacher Name | Teacher Birth Date | Initial Date | Duration | Category | Salary |\n| ---------- | ---------- | ------------ | ------------------ | ------------ | -------- | -------- | ------ |\n| 1          | 1          | John Doe     | 01/01/1980         | 01/01/2020   | 6        | BIO      | 2000   |\n| 2          | 3          | John Doe     | 01/01/1980         | 01/01/2020   | 12       | MED      | 5100   |\n| 3          | 2          | Jane Doe     | 01/01/1981         | 01/01/2020   | 6        | TECH     | 1100   |</p>\n<p>Notice that <strong>Teacher Name</strong> depends on <strong>Teacher ID</strong> and not on <strong>Project ID</strong>. So, it's a partial functional dependency.</p>\n<p>The resolution is to create a new table for the partial dependency:</p>\n<p><strong>Project Table</strong>:</p>\n<p>| Project ID | Initial Date | Duration | Teacher ID |\n| ---------- | ------------ | -------- | ---------- |\n| 1          | 01/01/2020   | 6        | 1          |\n| 2          | 01/01/2020   | 12       | 3          |\n| 3          | 01/01/2020   | 6        | 2          |</p>\n<p><strong>Teacher Table</strong>:</p>\n<p>| Teacher ID | Teacher Name | Teacher Birth Date | Category | Salary |\n| ---------- | ------------ | ------------------ | -------- | ------ |\n| 1          | John Doe     | 01/01/1980         | BIO      | 2000   |\n| 2          | Jane Doe     | 01/01/1981         | TECH     | 1100   |\n| 3          | John Doe     | 01/01/1980         | MED      | 5100   |</p>\n<h3 id=\"3nf\"><a class=\"anchor\" href=\"#3nf\">3NF</a></h3>\n<p>A table is in agreement with the 3NF when:</p>\n<ul>\n<li>It is in agreement with the 2NF;</li>\n<li>It has no transitive dependencies.</li>\n</ul>\n<p>Notice that <strong>Salary</strong> depends on <strong>Category</strong> and not on <strong>Teacher ID</strong>. So, it's a transitive dependency.</p>\n<p>The resolution is to create a new table for the transitive dependency:</p>\n<p><strong>Category Table</strong>:</p>\n<p>| Category | Salary |\n| -------- | ------ |\n| BIO      | 2000   |\n| TECH     | 1100   |\n| MED      | 5100   |</p>\n<h1 id=\"04\"><a class=\"anchor\" href=\"#04\">04</a></h1>\n<h2 id=\"denormalization\"><a class=\"anchor\" href=\"#denormalization\">Denormalization</a></h2>\n<p>Sometimes we need to denormalize a table to improve the performance of the database.</p>\n<p>Besides normalization brings a lot of benefits, it also has some disadvantages, like the need to access multiple tables to retrieve information in some transactions.</p>\n<p>Because of that, we can denormalize a table to improve the performance of the database.</p>\n<h2 id=\"indexes\"><a class=\"anchor\" href=\"#indexes\">Indexes</a></h2>\n<p>Indexes are used to improve the performance of the database. It's a data structure that allows the database to find data fast.</p>\n<p>But it brings some disadvantages as well, like if a table is updatted frequently, the indexes will need to be updated as well, which can cause a performance issue.</p>\n<h3 id=\"what-should-be-indexed\"><a class=\"anchor\" href=\"#what-should-be-indexed\">What should be indexed?</a></h3>\n<p>The columns that are used in the <strong>WHERE</strong> clause of the <strong>SELECT</strong> statement more frequently.</p>"
  },
  {
    "title": "Database System",
    "content": "<h1 id=\"1\"><a class=\"anchor\" href=\"#1\">1</a></h1>\n<h3 id=\"history\"><a class=\"anchor\" href=\"#history\">History</a></h3>\n<ul>\n<li>IBM with the invention of the Hard Disk, and previously, the Von Neumann architecture, initiated the age of the data processing.</li>\n<li>The databases were an natural evolution from file systems.</li>\n<li>The duty to manage the data was given to intermediary software, called Database Management Systems (DBMS), istead of the applications programs.</li>\n</ul>\n<h4 id=\"relational-model\"><a class=\"anchor\" href=\"#relational-model\">Relational Model</a></h4>\n<ul>\n<li>Invention by Edgar Codd, 1970.</li>\n<li>The data structure is a math function denominated <strong>relation</strong>.</li>\n<li>SQL was the language created by IBM to manipulate the data in the relational model.</li>\n<li>LAMP (Linux, Apache, MySQL, PHP) is a stack of technologies that was very popular in the 2000s.\n<ul>\n<li>MySQL is a DBMS, by Oracle, that implements the relational model.</li>\n</ul>\n</li>\n<li>The Ingres project, from the University of California, Berkeley, has originated some cool things:\n<ul>\n<li>Sybase, which was later associated with Microsoft to create SQL Server.</li>\n<li>Postgres (from Post Ingres), which extends the model with POO concepts.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"2\"><a class=\"anchor\" href=\"#2\">2</a></h1>\n<p>Basically what differentiates a database system from a file based system used as database is the independence of the data from the applications.</p>\n<p>Other differences are:</p>\n<ul>\n<li>Self contained nature: In addition to the data, the DBMS also stores the metadata, which is the data about the data (like the restrictions and the structure of the data).</li>\n<li>Data abstraction: Allows conceptual representation of the data by the use of data models that hide storage details and implementations, which supports the data independence and the multiple logic visions of the data.</li>\n<li>Support to data sharing and concurrent transactions: Allows multiple users to access the database simultaneously.</li>\n</ul>\n<h2 id=\"data-models\"><a class=\"anchor\" href=\"#data-models\">Data Models</a></h2>\n<p>The data models that supports the data abstraction and allows logical and physical data independence are:</p>\n<ul>\n<li>Physical Models: Describe how the data is stored in the computer (archive types, formats, ordering, paths, etc).</li>\n<li>Logical Models: As the relational model being one example, the logical models represents the implementation of the database in an abstract way, hiding how the data is stored and accessed in the disk.</li>\n<li>Conceptual Models: They represent the view of the data from the user perspective. An example is the model of entity-relationship, created by Peter Chen in 1976.</li>\n</ul>\n<h2 id=\"dbms\"><a class=\"anchor\" href=\"#dbms\">DBMS</a></h2>\n<p>It's DBMS resposability to guarantee transactions properties, known as ACID:</p>\n<ul>\n<li>Atomicity: Every transaction is treated as an composed unity, and it's either executed successfully for all operations or failed for all operations.</li>\n<li>Consistency: A transaction can only bring the database from a valid state to another valid state, according to the rules of integrity of the database.</li>\n<li>Isolation: This guarantees that the concurrent execution of transactions produces the same result as if they were executed sequentially.</li>\n<li>Durability: Once a transaction is completed, the changes made to the database persist, even in the case of system failure.</li>\n</ul>\n<h3 id=\"disadvantages\"><a class=\"anchor\" href=\"#disadvantages\">Disadvantages</a></h3>\n<ul>\n<li>Performance: Adding the DBMS between the application and the data can cause a performance loss.</li>\n</ul>\n<h1 id=\"3\"><a class=\"anchor\" href=\"#3\">3</a></h1>\n<h2 id=\"dbs\"><a class=\"anchor\" href=\"#dbs\">DBS</a></h2>\n<p>Those can include DBMS, the database itself and applications that manipulate the data.</p>\n<h2 id=\"postgresql\"><a class=\"anchor\" href=\"#postgresql\">PostgreSQL</a></h2>\n<p>It uses a client/server model of computation.</p>\n<h1 id=\"footer\"><a class=\"anchor\" href=\"#footer\">Footer</a></h1>\n<ul>\n<li><strong>Class</strong>: Databases</li>\n<li><strong>Theme</strong>: Database System</li>\n</ul>"
  },
  {
    "title": "Basic Concepts of Uml Systems Modeling",
    "content": "<h1 id=\"01\"><a class=\"anchor\" href=\"#01\">01</a></h1>\n<p>Model is an abstract representation of the reality.</p>\n<p>The purpose of the model is to anticipate the existence of any reality so it's possible to evaluate the structure and behavior of the reality before it exists.</p>\n<h2 id=\"fields\"><a class=\"anchor\" href=\"#fields\">Fields</a></h2>\n<ul>\n<li>External: The model of the ambient where the system will be.</li>\n<li>Behavioral: The model of the system's dynamic behavior.</li>\n<li>Structural: The model of the system's organizational structure and the data the system processes.</li>\n<li>Interaction: The model of the system's interaction with it's componenets and the external environment.</li>\n</ul>\n<h2 id=\"process-of-development-of-a-system\"><a class=\"anchor\" href=\"#process-of-development-of-a-system\">Process of Development of a System</a></h2>\n<p>There's a hiatus between a nebulous idea and a concrete system. This hiatus is called \"semantic gap\".</p>\n<h3 id=\"organizing-the-process-to-develop-a-system\"><a class=\"anchor\" href=\"#organizing-the-process-to-develop-a-system\">Organizing the Process to Develop a System</a></h3>\n<ul>\n<li>Identifying the Requirements: The system's requirements are defined.</li>\n<li>Analysis: With the requirements, it's understandable what the system should do.</li>\n<li>Project: The system is designed. Defining the architecture, the components, the infrastructure, etc.</li>\n<li>Implementation: Coding the system (yahu).</li>\n</ul>\n<h1 id=\"02\"><a class=\"anchor\" href=\"#02\">02</a></h1>\n<p>That was just O.O.P.</p>\n<h2 id=\"system-development-layers\"><a class=\"anchor\" href=\"#system-development-layers\">System Development Layers</a></h2>\n<ul>\n<li>Presentation: Allows interaction with the system.</li>\n<li>Business: The system's business logic.</li>\n<li>Data: Responsible for storing and retrieving persistent system data.</li>\n</ul>\n<h1 id=\"03\"><a class=\"anchor\" href=\"#03\">03</a></h1>\n<h2 id=\"uml\"><a class=\"anchor\" href=\"#uml\">UML</a></h2>\n<p>UML stands for Unified Modeling Language.</p>\n<p>Basically diagrams everywhere. That's it, great notes.</p>"
  },
  {
    "title": "Cloud Computing Fundamentals",
    "content": "<h2 id=\"cloud-computing\"><a class=\"anchor\" href=\"#cloud-computing\">Cloud Computing</a></h2>\n<p>Cloud computing is the on-demand availability of computer system resources, especially data storage and computing power, without direct active management by the user. <em>Ty Wikipedia.</em></p>\n<h3 id=\"in-short\"><a class=\"anchor\" href=\"#in-short\">In short:</a></h3>\n<ul>\n<li>Cloud users can store files, data and applications on remote servers and access this data with the help of the internet.</li>\n<li>Therefore, users do not need to be in a certain location to access data and can retrieve it from anywhere.</li>\n</ul>\n<h3 id=\"utility-computing\"><a class=\"anchor\" href=\"#utility-computing\">Utility computing</a></h3>\n<p>We can also say that cloud computing is the evolution of on-demand information technology services and products, called utility computing. This type of service aims to provide the basic components such as storage, processing and bandwidth of a network through specialized providers at a low cost.</p>\n<h3 id=\"advantages\"><a class=\"anchor\" href=\"#advantages\">Advantages</a></h3>\n<ul>\n<li><strong>Cost reduction</strong>: Paying for the use of a service is much cheaper than buying and maintaining equipment and software, most of the time.</li>\n<li><strong>Scalability</strong>: It's possible to increase the use of resources as needed, compatible with horizontal and vertical scaling.</li>\n<li><strong>Elasticity</strong>: It's possible to adapt the disposal of resources according to the demand of the moment.</li>\n<li><strong>Constant updates</strong>: The cloud provider is responsible for updating the infrastructure, which is done automatically.</li>\n<li><strong>Fast Implantation</strong>: The services requested are available in a no time.</li>\n<li><strong>Global Access</strong>: The services are available anywhere in the world, at any time, as long as there is an internet connection.</li>\n<li><strong>Availability</strong>: The provider offers backup services and disaster recovery, which guarantees the availability of the services.</li>\n<li><strong>Security</strong>: The provider is responsible for the security of the infrastructure.</li>\n</ul>\n<h3 id=\"disadvantages\"><a class=\"anchor\" href=\"#disadvantages\">Disadvantages</a></h3>\n<ul>\n<li><strong>No Control</strong>: The user has no control over the infrastructure, which can be a problem in some cases.</li>\n<li><strong>Interruption</strong>: If the provider suffers an interruption (energy, conectivity or even a cyber attack), the user will not be able to access the services.</li>\n<li><strong>Security</strong>: Attacks might happen to the provider, which is a risk to the user. Other than that, you can suffer from attacks  to other clients of the provider.</li>\n</ul>\n<h3 id=\"main-cloud-providers\"><a class=\"anchor\" href=\"#main-cloud-providers\">Main Cloud Providers</a></h3>\n<ul>\n<li>AWS (The best one so far)</li>\n<li>MS Azure</li>\n<li>Google Cloud</li>\n<li>IBM Cloud</li>\n<li>Oracle Cloud</li>\n</ul>\n<h3 id=\"virtualization\"><a class=\"anchor\" href=\"#virtualization\">Virtualization</a></h3>\n<p>Having various servers to do the job is complicated, because it's expensive and usually the server would not operate in full capacity.</p>\n<p>With <strong>virtualization</strong>, it's possible to have multiple operational system in one server, simulating multiple servers. The physical server hosts several virtual servers, configured according to the company's service demand, with independent operating systems and resources (memory, processor, storage, etc.).</p>\n<blockquote>\n<p>That's what the <strong>hypervisor</strong> does.</p>\n</blockquote>\n<h2 id=\"models-of-cloud-computing\"><a class=\"anchor\" href=\"#models-of-cloud-computing\">Models of Cloud Computing</a></h2>\n<h3 id=\"iaas---infrastructure-as-a-service\"><a class=\"anchor\" href=\"#iaas---infrastructure-as-a-service\">IaaS - Infrastructure as a Service</a></h3>\n<p>The provider offers the infrastructure, such as servers, storage, network, etc, with virtualization. The user is responsible for the operating system, middleware, applications, data and security.</p>\n<h3 id=\"paas---platform-as-a-service\"><a class=\"anchor\" href=\"#paas---platform-as-a-service\">PaaS - Platform as a Service</a></h3>\n<p>The provider offers the infrastructure, the operating system and all the tools needed to develop and run applications, with virtualization.</p>\n<h3 id=\"saas---software-as-a-service\"><a class=\"anchor\" href=\"#saas---software-as-a-service\">SaaS - Software as a Service</a></h3>\n<p>This model allows users to connect and use cloud-based applications over the Internet, such as email, storage services, etc. In this model the user just use the applications.</p>\n<h3 id=\"private-cloud-and-public-cloud\"><a class=\"anchor\" href=\"#private-cloud-and-public-cloud\">Private Cloud and Public Cloud</a></h3>\n<p>Basically private cloud is dedicated to a single or multiple selected clients, while public cloud is available to the general public.</p>\n<h3 id=\"hybrid-cloud-community-cloud-and-distributed-cloud\"><a class=\"anchor\" href=\"#hybrid-cloud-community-cloud-and-distributed-cloud\">Hybrid Cloud, Community Cloud and Distributed Cloud</a></h3>\n<ul>\n<li><strong>Hybrid Cloud</strong>: It's a combination of two or more cloud infrastructures, such as private and public cloud, for example.</li>\n<li><strong>Community Cloud</strong>: It's a cloud infrastructure shared by several organizations that have common interests, such as security, compliance, jurisdiction, etc.</li>\n<li><strong>Distributed Cloud</strong>: It's a public cloud infrastructure that is physically located in different geographic locations, but the operation is centralized.</li>\n</ul>\n<h2 id=\"infrastructure-on-premise-x-on-cloud\"><a class=\"anchor\" href=\"#infrastructure-on-premise-x-on-cloud\">Infrastructure on Premise x on Cloud</a></h2>\n<ul>\n<li><strong>On Premise</strong>: The infrastructure is located in the company's own data center.</li>\n<li><strong>On Cloud</strong>: The infrastructure is located in the provider's data center.</li>\n</ul>"
  },
  {
    "title": "Cloud Computing Architecture",
    "content": "<h2 id=\"aspects-of-it-infrastructure\"><a class=\"anchor\" href=\"#aspects-of-it-infrastructure\">Aspects of IT Infrastructure</a></h2>\n<h3 id=\"on-premise-x-in-the-cloud\"><a class=\"anchor\" href=\"#on-premise-x-in-the-cloud\">On-premise x in the cloud**</a></h3>\n<ul>\n<li>On-premise: the infrastructure is managed by the company itself.</li>\n<li>In the cloud: the infrastructure is managed by a third party.</li>\n</ul>\n<h3 id=\"cloud-infrastructure\"><a class=\"anchor\" href=\"#cloud-infrastructure\">Cloud Infrastructure</a></h3>\n<ul>\n<li><strong>Server Layer</strong>\n<ul>\n<li>Physical Servers</li>\n<li>Virtual Servers</li>\n<li>Hybrid Servers</li>\n</ul>\n</li>\n<li><strong>Storage Layer</strong>\n<ul>\n<li>File Storage</li>\n<li>Database</li>\n<li>And other types of storage</li>\n</ul>\n</li>\n<li><strong>Network Layer</strong>\n<ul>\n<li>Connectivity Services</li>\n<li>Network Security</li>\n<li>Applications Management</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"management-of-servers-layers\"><a class=\"anchor\" href=\"#management-of-servers-layers\">Management of Servers Layers</a></h2>\n<p>The main cloud providers (AWS, Azure, GCP) offers platforms to manage the servers layer, like (EC2, VMs, Compute Engine).</p>\n<h2 id=\"architecture-by-solution\"><a class=\"anchor\" href=\"#architecture-by-solution\">Architecture by Solution</a></h2>\n<ul>\n<li><strong>IaaS (Infrastructure as a Service)</strong>:\n<ul>\n<li>Virtual Servers</li>\n<li>Servers Instances</li>\n<li>Storage Systems</li>\n<li>Data Management Systems</li>\n<li>Load Balancing Tools</li>\n<li>Deal with multiple scenarios (e.g. elasticity scenario, load balancing scenario, high availability scenario, multicloud scenario, hybrid cloud scenario, etc.)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"edge-computing\"><a class=\"anchor\" href=\"#edge-computing\">Edge Computing</a></h2>\n<p>It allows to process data closer to the source, reducing latency and bandwidth usage.</p>"
  },
  {
    "title": "Quantitative Data Analysis With Python",
    "content": "<h2 id=\"introduction\"><a class=\"anchor\" href=\"#introduction\">Introduction</a></h2>\n<ul>\n<li>column graph: value x quantitative / qualitative</li>\n<li>how variables are classified:\n<ul>\n<li>quantitative\n<ul>\n<li>discrete\n<ul>\n<li>which we can count</li>\n<li>(e.g. number of children, number of voters, etc)</li>\n</ul>\n</li>\n<li>continues\n<ul>\n<li>which we can't count</li>\n<li>(e.g. height, temperature, etc)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>qualitative\n<ul>\n<li>nominal\n<ul>\n<li>no order indication</li>\n<li>(e.g. sexuality, civil state, etc)</li>\n</ul>\n</li>\n<li>ordinal\n<ul>\n<li>has order indication</li>\n<li>(e.g. age group, QI, etc)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"basic-concepts\"><a class=\"anchor\" href=\"#basic-concepts\">Basic Concepts</a></h2>\n<ul>\n<li>Population:</li>\n</ul>\n<blockquote>\n<p>Set of individuals or objects with at least one characteristic in common.</p>\n</blockquote>\n<ul>\n<li>Sample:</li>\n</ul>\n<blockquote>\n<p>Part of population.</p>\n</blockquote>\n<ul>\n<li>Raw Data:</li>\n</ul>\n<blockquote>\n<p>Data set that has no evident order.</p>\n</blockquote>\n<ul>\n<li>Rol:</li>\n</ul>\n<blockquote>\n<p>Data set that has ordering, being it ascending or descending.</p>\n</blockquote>\n<ul>\n<li>Total Amplitude</li>\n</ul>\n<blockquote>\n<p>Difference between the biggest and lowest values presented in the data set.</p>\n</blockquote>\n<h2 id=\"graphics\"><a class=\"anchor\" href=\"#graphics\">Graphics</a></h2>\n<ul>\n<li>Bars / columns: most utilized; can be used to represent any quantitative data.</li>\n<li>Histogram: typical for frequency distribution; difference from bars graph is that the columns in this one have no space in between.</li>\n<li>Lines: most appropriate to work with series of time.</li>\n<li>Sector: most appropriate to work with percentages; it's known in Brazil as Pizza graph. :D</li>\n<li>Boxplot: brings information about the data set; it's possible to verify the middle trend, the variability and the simetry of the data distribution; another advantage of this graph is that we can observe the presence of atypical values (outliers).</li>\n</ul>\n<h2 id=\"middle-trend\"><a class=\"anchor\" href=\"#middle-trend\">Middle Trend</a></h2>\n<h3 id=\"for-non-grouped-data\"><a class=\"anchor\" href=\"#for-non-grouped-data\">For non-grouped data:</a></h3>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\overline{X} = \\frac{\\displaystyle\\sum_{i=1}^n X_{i}}{n}</span></span></code></pre>\n<ul>\n<li>e.g. for <code>1, 2, 3, 4, 5</code>:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\overline{X} = \\frac{1 + 2 + 3 + 4 + 5}{5} = 3</span></span></code></pre>\n<h3 id=\"for-grouped-data\"><a class=\"anchor\" href=\"#for-grouped-data\">For grouped data:</a></h3>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\overline{X} = \\frac{\\displaystyle\\sum_{i=1}^n X_{i}F_{i}}{n}</span></span></code></pre>\n<blockquote>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the middle point of <code>i</code> class.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the absolute frequency of <code>i</code> class.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is the size of the data set or sample.</li>\n</ul>\n</blockquote>\n<ul>\n<li>e.g.</li>\n</ul>\n<p>| Class | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">F_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> | <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><msub><mi>F</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_{i}F_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> |\n|--- | --- |--- | --- |\n| 2,0 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊢</mo></mrow><annotation encoding=\"application/x-tex\">\\vdash</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mrel\">⊢</span></span></span></span> 2,5 | 2 | 2,25 | 4,5 |\n| 2,5 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊢</mo></mrow><annotation encoding=\"application/x-tex\">\\vdash</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mrel\">⊢</span></span></span></span> 3,0 | 4 | 2,75 | 11 |\n| 3,0 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊢</mo></mrow><annotation encoding=\"application/x-tex\">\\vdash</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mrel\">⊢</span></span></span></span> 3,5 | 7 | 3,25 | 22,75 |\n| 3,5 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊢</mo></mrow><annotation encoding=\"application/x-tex\">\\vdash</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mrel\">⊢</span></span></span></span> 4,0 | 5 | 3,75 | 18,75 |\n| 4,0 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊢</mo></mrow><annotation encoding=\"application/x-tex\">\\vdash</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mrel\">⊢</span></span></span></span> 4,5 | 5 | 4,25 | 21,25 |\n| 4,5 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊢</mo></mrow><annotation encoding=\"application/x-tex\">\\vdash</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mrel\">⊢</span></span></span></span> 5,0 | 7 | 4,75 | 33,25 |\n| Sum | 30 | - | 111,5 |</p>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\overline{X} = \\frac{\\displaystyle\\sum_{i=1}^n X_{i}F_{i}}{n} = \\frac{111,5}{30} = 3,72</span></span></code></pre>\n<h2 id=\"median-m_d\"><a class=\"anchor\" href=\"#median-m_d\">Median (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>D</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>)</a></h2>\n<h3 id=\"for-non-grouped-data-1\"><a class=\"anchor\" href=\"#for-non-grouped-data-1\">For non-grouped data</a></h3>\n<ul>\n<li>odd</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>E_{M_{D}} = \\frac{n + 1}{2}</span></span></code></pre>\n<ul>\n<li>even</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>\\begin{drcases}</span></span>\n<span class=\"line\"><span>E_{M_{d_{1}}} = \\frac{n}{2} \\rightarrow M_{d_{1}} \\\\</span></span>\n<span class=\"line\"><span>E_{M_{d_{2}}} = \\frac{n}{2} + 1 \\rightarrow M_{d_{2}}</span></span>\n<span class=\"line\"><span>\\end{drcases} M_{d} = \\frac{M_{d_{1}} + M_{d_{2}}}{2}</span></span></code></pre>\n<blockquote>\n<p>This process is like finding an index in an array, and then the result (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><msub><mi>d</mi><mn>1</mn></msub></msub></mrow><annotation encoding=\"application/x-tex\">M_{d_{1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><msub><mi>d</mi><mn>2</mn></msub></msub></mrow><annotation encoding=\"application/x-tex\">M_{d_{2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span></span></span></span>) are the indexed value deferred.</p>\n</blockquote>\n<h3 id=\"for-grouped-data-1\"><a class=\"anchor\" href=\"#for-grouped-data-1\">For grouped data</a></h3>\n<blockquote>\n<p>3 steps</p>\n</blockquote>\n<ul>\n<li>Find the median element:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>E_{M_{d}} = \\frac{n}{2}</span></span></code></pre>\n<ul>\n<li>Find median class; <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><msub><mi>M</mi><mi>d</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">C_{M_{d}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9392em;vertical-align:-0.2559em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2559em;\"><span></span></span></span></span></span></span></span></span></span> is the class that contains the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><msub><mi>M</mi><mi>d</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">E_{M_{d}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9392em;vertical-align:-0.2559em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2559em;\"><span></span></span></span></span></span></span></span></span></span> (it does not stand for commandline in this context).</li>\n<li>Apply the formula:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>M_{d} = L_{M_{d}} + \\Bigl( \\frac{E_{M_{d}} - F_{aac}}{F_{M_{d}}} \\Bigr) \\space \\ast\\space h</span></span></code></pre>\n<blockquote>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><msub><mi>M</mi><mi>d</mi></msub></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">L_{M_{d}} =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9392em;vertical-align:-0.2559em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2559em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span> inferior limit of median class.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>a</mi><mi>c</mi></mrow></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">F_{aac} =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">aa</span><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span> accumulated frequency before median class.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>F</mi><msub><mi>M</mi><mi>d</mi></msub></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">F_{M_{d}} =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9392em;vertical-align:-0.2559em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2559em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span> absolute frequency of median class.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">h =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span> amplitude of median class (difference between amplitudes of superior and inferior classes).</li>\n</ul>\n</blockquote>\n<h2 id=\"moda-m_o\"><a class=\"anchor\" href=\"#moda-m_o\">Moda (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>M</mi><mi>O</mi></msub></mrow><annotation encoding=\"application/x-tex\">M_{O}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">O</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>)</a></h2>\n<blockquote>\n<ul>\n<li><code>1, 2, 2, 3, 5</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo><msub><mi>M</mi><mi>o</mi></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\rightarrow M_{o} = 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span></li>\n<li><code>1, 3, 6, 7</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span></span></span></span> <code>amodal</code>, cause there's no repetition.</li>\n<li><code>1, 2, 3, 3, 4, 5, 5</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo><msub><mi>M</mi><mi>o</mi></msub><mo>=</mo><mn>3</mn><mi>e</mi><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">\\rightarrow M_{o} = 3e5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">5</span></span></span></span> (<code>bimodal</code>).</li>\n</ul>\n</blockquote>\n<h3 id=\"for-non-grouped-data-2\"><a class=\"anchor\" href=\"#for-non-grouped-data-2\">For non-grouped data</a></h3>\n<ul>\n<li>Find modal class <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>M</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{M}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</li>\n<li>Apply <code>Czuber</code> formula:</li>\n</ul>\n<pre class=\"shiki shiki-themes min-dark min-dark\" style=\"background-color:#1f1f1f;--shiki-dark-bg:#1f1f1f;color:#b392f0;--shiki-dark:#b392f0\" tabindex=\"0\"><code><span class=\"line\"><span>M_{o} = L_{I_{M_{o}}} + \\Bigl( \\frac{\\varDelta_{1}}{\\varDelta_{1} + \\varDelta_{2}} \\Bigr) \\ast h</span></span></code></pre>\n<blockquote>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><msub><mi>I</mi><msub><mi>M</mi><mi>o</mi></msub></msub></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">L_{I_{M_{o}}} =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0336em;vertical-align:-0.3503em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567em;margin-left:-0.0785em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2306em;\"><span style=\"top:-2.3em;margin-left:-0.109em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2862em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3503em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span> inferior limit of modal class.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Δ</mi><mn>1</mn></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">\\varDelta_{1} =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathit\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span> absolute frequency of modal class minus absolute frequency of class immediately before.</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Δ</mi><mn>2</mn></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">\\varDelta_{2} =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathit\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span> absolute frequency of modal class minus absolute frequency of class immediately after.</li>\n</ul>\n</blockquote>\n<h2 id=\"separatrices\"><a class=\"anchor\" href=\"#separatrices\">Separatrices</a></h2>\n<p>Their function is to divide the data set into a certain number of equal parts.</p>\n<h3 id=\"quartile\"><a class=\"anchor\" href=\"#quartile\">Quartile</a></h3>\n<p>The data set is divided in four equal parts.</p>\n<h3 id=\"decile\"><a class=\"anchor\" href=\"#decile\">Decile</a></h3>\n<p>The data set is divided in ten equal parts.</p>\n<h3 id=\"percentile\"><a class=\"anchor\" href=\"#percentile\">Percentile</a></h3>\n<p>The data set is divided in one hundred equal parts.</p>"
  },
  {
    "title": "digging-into-web3-and-blockchain-stuff",
    "content": "<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">Crypto</a></h2>\n<ul>\n<li>South Korean in the middle of a polithical crisis couldn't take place soon in the cryptocurrencies ascenssion and that led an so much connected society to have the biggest number of investors in crypto in the world.</li>\n<li><strong>ICO</strong> stands for Initial Coin Offer, it's a cheaper alternative for IPO's. Basically investors could by \"Tokens\" or \"Security tokens\" in the hope that it'll have a higher value in the future or to exchange for company's products/services.\n<ul>\n<li>There's no intermediary taxes (banks, brokers).</li>\n<li>Of course, the token will only has value on the network it operates.</li>\n<li>Security Tokens: the owners of these tokens have a stake in an asset (that has real value such as equity, a company, real estate, etc.). Owners receive a share from the profits of the asset; like owning stock from the company.</li>\n</ul>\n</li>\n<li><strong>DAO</strong> stands for Descentralized Autonomous Organization. A structure with no central authority. Members of a DAO own <strong>tokens</strong> of the DAO. Those members are like <strong>shareholders</strong> and they can vote on initiatives.</li>\n</ul>\n<h2 id=\"blockchain\"><a class=\"anchor\" href=\"#blockchain\">Blockchain</a></h2>\n<ul>\n<li>Blockchains introduced for the first time in the internet the concept of non-fungibility: you can have a non-duplicable digital asset which the propriety can be transmitted from a user to another and there's a public consensus about this propriety. That's the oppositte of piracy.</li>\n<li><strong>Off-chain</strong> refers to transactions or data that are conducted or stored outside of the main blockchain network.</li>\n<li>Every step linked to an <strong>On-chain</strong> transaction occurs on the blockchain, and the blockchain status is modified to reflect the occurrence and validity of the transaction.</li>\n<li>Combining descentralization with speed: Off-chains can be used to operate side by side with more secure blockchains to gain speed.</li>\n<li>Hybrid blockchain means a blockchain that has a public and a private layer. It suits for organizations who want to keep sensitive data in the private layer but still need to expose some data in the public layer for transparency.</li>\n<li>Blockchains are like append-only databases with timestamps for the registries. We can only add new entries and not ever modify the past.</li>\n</ul>\n<h2 id=\"transactions\"><a class=\"anchor\" href=\"#transactions\">Transactions</a></h2>\n<ul>\n<li>Cryptographic hashes are the essence of blockchain addresses.</li>\n<li>Digest is essentially taking <strong>ANYTHING</strong> and generate a digital impression (cryptographic hash) with it.</li>\n<li>Transactions are basically a structure like ```json\n{\n\"from\": \"0xaaaaaaaaaaa\",\n\"to\": \"0xbbbbbbbbbbb\",\n\"value\": 0.22\n}</li>\n</ul>\n<pre><code>- Transactions accumulates in blocks. Another analogy can be done with git. It's like if I created a new `branch` (block), added my changes to `commit` and push to remote, then I'll open a `PR` accumulate transactions in this until someone reviews it and `merge` into the `main` branch (chain).\n- Another analogy to understand a block is to visualize it as an amount of `hex` colors (each transaction) that are interligated until a root color that is generated using all the other ones, so if any color changes, the root color also changes and the `block` is invalid. So it's basically like if we have unions of hashes that generates another, and then those have unions with other unions of hashes from others transactions, until all them converge into a main hash that represents the block.\n- Crypto miners are basically algorithms to find the correct hashes to assign a block in a blockchain that will be valid.\n- To avoid the easiness to assign blocks in Bitcoin blockchain for example, zeros are used as prefixes to the hashes, the aim is to only permit block assigns from 10 to 10 minutes.\n- **POW** vs **POS** mineration of crypto: in the first one the reward is when you find the hash, not very sustainable in some cases. In the second each miner puts his money in stake and if he's cheating he loses that money, so there's more incentive to do it correctly.\n\n## Fun Fact\n\nThere was a discussion regarding the use of blockchains for political elections to store people's vote. The phrase that answers this question is: \"Blockchains can be used for private elections in which the vote itself is public, but **not** for public elections in which the vote is private\" - by Diego F. Aranha. Basically blockchain can guarantee the integrity of the vote, but not it's secret.\n\n# References\n\n- [@akitando on YouTube about blockchain &#x26; crypto [PT-BR]](https://www.youtube.com/watch?v=BEaVdiTiiH4&#x26;list=PL9vIjH64-q-v4vf9XtHzdS_ffycQ7w5DC&#x26;index=1)\n</code></pre>"
  },
  {
    "title": "Fork My Brain",
    "content": "<h1 id=\"fork-my-brain\"><a class=\"anchor\" href=\"#fork-my-brain\">Fork My Brain</a></h1>\n<p><a href=\"https://github.com/datsfilipe/brain/stargazers\"><img src=\"https://img.shields.io/github/stars/datsfilipe/brain.svg\" alt=\"GitHub stars\"></a>\n<img src=\"https://img.shields.io/github/repo-size/datsfilipe/brain.svg\" alt=\"Repository Size\">\n<img src=\"https://img.shields.io/github/last-commit/datsfilipe/brain.svg\" alt=\"Last Commit\"></p>\n<p>You're welcome! I'm Filipe Lima and those are notes I took while studying. The experience will be much better if you read the notes <a href=\"https://datsfilipe.dev/brain\">in my website</a>. The notes are messy and even might be wrong, so if you find any problems within them, please create an issue at <a href=\"https://github.com/datsfilipe/brain/issues\">this repository</a>. Any constructive feedbacks or corrections are welcome. Consider this an experiment in <a href=\"https://anaisurl.com/learning-in-public\">Learning in public</a>.</p>\n<h2 id=\"how-to-read\"><a class=\"anchor\" href=\"#how-to-read\">How to read</a></h2>\n<p>If you are in my website already, use the sidebar to navigate through the notes. You might as well use the search bar to find something specific. If you are in GitHub, you can use the file tree of the repository to navigate through the notes.</p>\n<p>Have a good read!</p>\n<h2 id=\"contributors\"><a class=\"anchor\" href=\"#contributors\">Contributors</a></h2>\n<h2 id=\"license\"><a class=\"anchor\" href=\"#license\">License</a></h2>\n<p>This project is licensed under the <a href=\"./_LICENSE\">CC BY-NC-SA 4.0</a>.</p>"
  },
  {
    "title": "Jokenpo Arena v2",
    "content": "<ul>\n<li>Multiplayer</li>\n<li>The user will be only one of the emojis in the arena</li>\n<li>Better animations (animate on collision, when spawning, etc, etc)</li>\n<li>Better assets (use proper svg beautiful shapes instead of emojis)</li>\n<li>New UI (make a better pleasant UI, with a great and concise colorscheme)</li>\n</ul>"
  },
  {
    "title": "Virtualization",
    "content": "<h2 id=\"vms\"><a class=\"anchor\" href=\"#vms\">VM's</a></h2>\n<p>VM stands for Virtual Machine, so VM's are Virtual Machines that has access to a portion of hardware resources to execute. They have their own OS and cannot access processes or resources outside of what's defined. And what defines it???</p>\n<h2 id=\"hypervisor\"><a class=\"anchor\" href=\"#hypervisor\">Hypervisor</a></h2>\n<p>It is a piece of software that coordinates VM's. It serves as an interface between the VM's and the hardware. Ensuring the access to the physical resources it needs to execute. It is also what ensure that the VM's don't interfere with each other by impinging on each other’s memory space or compute cycles.</p>\n<h3 id=\"types-of-hypervisors\"><a class=\"anchor\" href=\"#types-of-hypervisors\">Types of Hypervisors</a></h3>\n<h4 id=\"type-1-or-bare-metal-hypervisors\"><a class=\"anchor\" href=\"#type-1-or-bare-metal-hypervisors\">Type 1 or \"Bare-metal\" Hypervisors</a></h4>\n<p>It takes the place of the host OS and interacts directly with the physical resources (cpu, memory, etc), that's why they're called \"bare-metal\". They're highly efficient.</p>\n<h4 id=\"type-2\"><a class=\"anchor\" href=\"#type-2\">Type 2</a></h4>\n<p>Those run as an application on the host OS. They carry performance overhead, since they have to use the host OS to access and coordinate the physical resources.</p>\n<h2 id=\"types-of-virtualization\"><a class=\"anchor\" href=\"#types-of-virtualization\">Types of Virtualization</a></h2>\n<ul>\n<li>Desktop virtualization</li>\n<li>Network virtualization</li>\n<li>Storage virtualization</li>\n<li>Data virtualization</li>\n<li>Application virtualization</li>\n<li>Data center virtualization</li>\n<li>CPU virtualization</li>\n<li>GPU virtualization</li>\n<li>Linux virtualization</li>\n<li>Cloud virtualization</li>\n</ul>\n<h3 id=\"desktop-virtualization\"><a class=\"anchor\" href=\"#desktop-virtualization\">Desktop virtualization</a></h3>\n<p>Desktop virtualization lets you run multiple desktop operating systems, each in its own VM on the same computer.</p>\n<h3 id=\"network-virtualization\"><a class=\"anchor\" href=\"#network-virtualization\">Network virtualization</a></h3>\n<p>It uses a software to create a \"view\" of the network that can be used to manage the network from a single console. It also hardware elements and funcitons (e.g., connections, switches, routers, etc). So you can modify and control those elements without having to touch the underlying physical components.</p>\n<h3 id=\"storage-virtualization\"><a class=\"anchor\" href=\"#storage-virtualization\">Storage Virtualization</a></h3>\n<p>Allows all the storage devices to be viewed as a single, large storage device. It creates a single storage pool that can be assigned to any VM on the network.</p>\n<h3 id=\"application-virtualization\"><a class=\"anchor\" href=\"#application-virtualization\">Application virtualization</a></h3>\n<p>Application virtualization runs application software without installing it directly on the user’s OS. There are three types of application virtualization:</p>\n<ul>\n<li><strong>Local application virtualization</strong>: The entire application runs on the endpoint device but runs in a runtime environment instead of on the native hardware.</li>\n<li><strong>Application streaming</strong>: The application lives on a server which sends small components of the software to run on the end user's device when needed.</li>\n<li><strong>Server-based application virtualization</strong> The application runs entirely on a server that sends only its user interface to the client device.</li>\n</ul>\n<h3 id=\"cpu-virtualization\"><a class=\"anchor\" href=\"#cpu-virtualization\">CPU virtualization</a></h3>\n<p>CPU (central processing unit) virtualization is the fundamental technology that makes hypervisors, virtual machines, and operating systems possible. It allows a single CPU to be divided into multiple virtual CPUs for use by multiple VMs.</p>\n<h3 id=\"gpu-virtualization\"><a class=\"anchor\" href=\"#gpu-virtualization\">GPU virtualization</a></h3>\n<p>A GPU (graphical processing unit) is a special multi-core processor that improves overall computing performance by taking over heavy-duty graphic or mathematical processing. GPU virtualization lets multiple VMs use all or some of a single GPU’s processing power for faster video, artificial intelligence (AI), and other graphic- or math-intensive applications.</p>\n<ul>\n<li><strong>Pass-through GPUs</strong> make the entire GPU available to a single guest OS. (that's amazing for gaming)</li>\n<li><strong>Shared vGPUs</strong> divide physical GPU cores among several virtual GPUs (vGPUs) for use by server-based VMs.</li>\n</ul>\n<h3 id=\"linux-virtualization\"><a class=\"anchor\" href=\"#linux-virtualization\">Linux virtualization</a></h3>\n<p>Linux includes its own hypervisor, called the kernel-based virtual machine (KVM), which supports Intel and AMD’s virtualization processor extensions so you can create x86-based VMs from within a Linux host OS.</p>\n<p>As an open source OS, Linux is highly customizable. You can create VMs running versions of Linux tailored for specific workloads or security-hardened versions for more sensitive applications.</p>\n<h2 id=\"virtualization-vs-containerization\"><a class=\"anchor\" href=\"#virtualization-vs-containerization\">Virtualization VS Containerization</a></h2>\n<h3 id=\"containerization\"><a class=\"anchor\" href=\"#containerization\">Containerization</a></h3>\n<p>What paved the way for containerization was <strong>cgroups</strong>, which is a Linux kernel feature that limits, accounts for, and isolates the resource usage of a collection of processes.</p>\n<h3 id=\"apps-with-vms\"><a class=\"anchor\" href=\"#apps-with-vms\">Apps With VM's</a></h3>\n<ul>\n<li>Each VM has its own OS</li>\n<li>You also need the hypervisor</li>\n<li>So to have an application running on a VM, you need to add, besides the host OS, the guest OS and the application</li>\n<li>Because you're running a VM in your host OS, in order to deploy to prodution, you might face compatibility issues</li>\n<li>The left amount of resources are not shared between the VM's, you need to specify how much resources each VM will have</li>\n</ul>\n<h3 id=\"apps-with-containers\"><a class=\"anchor\" href=\"#apps-with-containers\">Apps With containers</a></h3>\n<ul>\n<li>You need a manifest -> to create an image -> to create a container (with all the dependencies needed to run the application)</li>\n<li>You need the host OS</li>\n<li>You need the container runtime</li>\n<li>With containers, you don't need guest OS, you just have the actual application and its dependencies, so it's much more lightweight and easier to scale</li>\n<li>The left amount of resources are shared between the containers, so it's more efficient</li>\n</ul>\n<h2 id=\"references\"><a class=\"anchor\" href=\"#references\">References</a></h2>\n<ul>\n<li><a href=\"https://www.ibm.com/topics/virtualization\">What is Virtualization - IBM</a></li>\n</ul>"
  },
  {
    "title": "Structure and Interpretation of Computer Programs",
    "content": "<p>...</p>\n<h2 id=\"dediction-x-foreword\"><a class=\"anchor\" href=\"#dediction-x-foreword\">Dediction x Foreword</a></h2>\n<ul>\n<li>Having fun is important</li>\n<li>Programming is about practice</li>\n<li>Programmers should seek perfection</li>\n<li>Smaller programs evolve to bigger programs</li>\n<li>The same rules for smaller programs does not directly apply for bigger programs</li>\n<li>As we write bigger programs, we tend to optmize code to make it smaller and to fit the program</li>\n<li>\"In any event, hardware always operates at a level more primitive than that at which we care to program.\"</li>\n<li>Talks about Lisp programming language, it's simplicity of syntax and it's use on AI field</li>\n</ul>\n<h2 id=\"preface-1st-and-2nd-editions\"><a class=\"anchor\" href=\"#preface-1st-and-2nd-editions\">Preface 1st and 2nd Editions</a></h2>\n<ul>\n<li>\"Mathematics provides a framework for dealing precisely with notions of “what is.” Computation provides a framework for dealing precisely with notions of “how to.”\"</li>\n</ul>\n<h2 id=\"elements-of-a-programming-language\"><a class=\"anchor\" href=\"#elements-of-a-programming-language\">Elements of a programming language</a></h2>\n<ul>\n<li>Primitive expressions: Represent the simplest entities the language is concerned with</li>\n<li>Means of combination: By which compound elements are built from simpler ones</li>\n<li>Means of abstraction: By which compound elements can be named and manipulated as units</li>\n</ul>\n<p>In programming we deal with two kinds of elements: procedures and data (we'll se they're not so distinct). Informally:</p>\n<ul>\n<li>Data is stuff we want to manipulate</li>\n<li>Procedures are descriptions of the rules for manipulating that stuff</li>\n</ul>"
  }
]